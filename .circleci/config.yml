version: 2.0

jobs:
  checkout-and-install:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: package-v1-{{ checksum "package.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
      - persist_to_workspace:
          root: ~/
          paths: project
      - save_cache:
          key: package-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules

  eslint:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Lint JS
          command:
            yarn eslint
            --max-warnings=0
            --format junit
            --output-file ./artifacts/eslint/eslint.xml
      - store_test_results:
          path: ./artifacts
      - store_artifacts:
          path: ./artifacts

  stylelint:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Set up artifacts directory
          command: mkdir -p artifacts/stylelint
      - run:
          name: Lint CSS
          command:
            yarn --silent stylelint
            --custom-formatter './node_modules/stylelint-junit-formatter' > ./artifacts/stylelint/stylelint.xml
      - store_test_results:
          path: ./artifacts
      - store_artifacts:
          path: ./artifacts

  build:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build storybook bundle
          command: yarn storybook-build
      - store_artifacts:
          path: ./.out

  test-chrome:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run tests
          command:
            yarn test
            --coverage
            --karma.singleRun
            --karma.browsers=Chrome
            --karma.reporters mocha junit
            --karma.junitReporter.outputDir artifacts/junit/karma
      - store_test_results:
          path: ./artifacts/junit
      - store_artifacts:
          path: ./artifacts

  test-firefox:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run tests
          command:
            yarn test
            --karma.singleRun
            --karma.browsers=Firefox
            --karma.reporters mocha junit
            --karma.junitReporter.outputDir artifacts/junit/karma
      - store_test_results:
          path: ./artifacts/junit
      - store_artifacts:
          path: ./artifacts

  test-safari:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run tests
          command:
            yarn test
            --karma.singleRun
            --karma.browsers=bs_safari_11
            --karma.reporters mocha junit BrowserStack
            --karma.junitReporter.outputDir artifacts/junit/karma
      - store_test_results:
          path: ./artifacts/junit
      - store_artifacts:
          path: ./artifacts

  test-edge:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run tests
          command:
            yarn test
            --karma.singleRun
            --karma.browsers=bs_ieEdge_windows
            --karma.reporters mocha junit BrowserStack
            --karma.junitReporter.outputDir artifacts/junit/karma
      - store_test_results:
          path: ./artifacts/junit
      - store_artifacts:
          path: ./artifacts

workflows:
  version: 2
  push:
    jobs:
      - checkout-and-install
      - eslint:
          requires:
            - checkout-and-install
      - stylelint:
          requires:
            - checkout-and-install
      - build:
          requires:
            - checkout-and-install
      - test-chrome:
          requires:
            - checkout-and-install
      - test-firefox:
          requires:
            - checkout-and-install
      - test-safari:
          requires:
            - checkout-and-install
      - test-edge:
          requires:
            - checkout-and-install
