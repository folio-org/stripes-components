"use strict";(self.webpackChunk_folio_stripes_components=self.webpackChunk_folio_stripes_components||[]).push([[9902],{"./lib/Accordion/stories/Accordion.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  AccordionStatus: () => (/* binding */ Accordion_stories_AccordionStatus),\n  DisplayWhenProps: () => (/* binding */ DisplayWhenProps),\n  ExpandAllWithinSet: () => (/* binding */ Accordion_stories_ExpandAllWithinSet),\n  Header: () => (/* binding */ Header),\n  KeyboardNavigation: () => (/* binding */ KeyboardNavigation),\n  Separator: () => (/* binding */ Separator),\n  WithDefaults: () => (/* binding */ WithDefaults),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  "default": () => (/* binding */ Accordion_stories)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("./node_modules/react/index.js");\n// EXTERNAL MODULE: ./node_modules/faker/index.js\nvar faker = __webpack_require__("./node_modules/faker/index.js");\nvar faker_default = /*#__PURE__*/__webpack_require__.n(faker);\n// EXTERNAL MODULE: ./lib/Accordion/AccordionSet.js\nvar AccordionSet = __webpack_require__("./lib/Accordion/AccordionSet.js");\n// EXTERNAL MODULE: ./lib/Accordion/Accordion.js + 1 modules\nvar Accordion = __webpack_require__("./lib/Accordion/Accordion.js");\n// EXTERNAL MODULE: ./lib/Button/Button.js + 1 modules\nvar Button = __webpack_require__("./lib/Button/Button.js");\n// EXTERNAL MODULE: ./lib/Datepicker/Datepicker.js\nvar Datepicker = __webpack_require__("./lib/Datepicker/Datepicker.js");\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__("./node_modules/react/jsx-runtime.js");\n;// CONCATENATED MODULE: ./lib/Accordion/stories/BasicUsage.js\n/**\r\n * Accordion: Basic Usage\r\n */\n\n/* eslint-disable max-len */\n\n\n\n\n\n\n\nconst BasicUsage = () => {\n  const [textValue, updateTextValue] = (0,react.useState)();\n  const paragraphs = (0,react.useRef)([faker_default().lorem.paragraph(), faker_default().lorem.paragraph(), faker_default().lorem.paragraph(), faker_default().lorem.paragraph(), faker_default().lorem.paragraph(), faker_default().lorem.paragraph(), faker_default().lorem.paragraph()]).current;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n      label: "Information",\n      displayWhenOpen: /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n        icon: "plus-sign",\n        children: "Add"\n      }),\n      headerProps: {\n        headingLevel: 2\n      },\n      children: ["This is an example of an AccordionSet. The 2nd of these accordions is closed by default using the \\"closedByDefault\\" prop. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas vitae fringilla felis, sed commodo tellus. Sed bibendum mi id lorem sagittis sodales. Quisque ac lectus gravida, viverra ante et, iaculis sapien. Praesent eget ligula tortor. Praesent vitae ipsum placerat, blandit quam quis, tempus tortor. Aliquam erat volutpat. Fusce hendrerit lectus sed ex dictum, in pretium eros vestibulum. Nulla semper vehicula leo at varius. Quisque bibendum mauris sit amet tellus lobortis ultricies. Mauris eleifend sapien vel est posuere tincidunt. Proin ut nunc ut enim rhoncus elementum vitae in mauris. Nullam ultrices dictum nulla in commodo. Suspendisse potenti. Donec et velit ac quam consequat cursus. Pellentesque quis elit magna. Fusce velit libero, mattis ac placerat eget, aliquam a ante.", /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("input", {\n        "aria-label": "I\'m hidden! when closed!",\n        type: "text",\n        id: "testTextField",\n        value: textValue,\n        onChange: e => updateTextValue(e.target.value)\n      }), paragraphs[0]]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n      label: "Extended Information",\n      closedByDefault: true,\n      children: [paragraphs[1], /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)(Datepicker/* default */.A, {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), paragraphs[2]]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n      label: "Proxy",\n      children: [paragraphs[3], /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), paragraphs[4]]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n      label: "Loans",\n      children: [paragraphs[5], /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), paragraphs[6]]\n    })]\n  });\n};\nBasicUsage.displayName = "BasicUsage";\n/* harmony default export */ const stories_BasicUsage = (BasicUsage);\n;\nBasicUsage.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "BasicUsage"\n};\n// EXTERNAL MODULE: ./lib/Accordion/AccordionStatus.js\nvar AccordionStatus = __webpack_require__("./lib/Accordion/AccordionStatus.js");\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__("./node_modules/react-dom/index.js");\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__("./node_modules/prop-types/index.js");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/src/components/message.js\nvar message = __webpack_require__("./node_modules/react-intl/lib/src/components/message.js");\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("./node_modules/lodash/isEqual.js");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n// EXTERNAL MODULE: ./node_modules/memoize-one/dist/memoize-one.esm.js\nvar memoize_one_esm = __webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js");\n;// CONCATENATED MODULE: ./lib/Accordion/expandCollapseAll.js\n/*\r\n* Utility function that returns a object with all values set to true(expanded) or false (collapsed).\r\n* Status : object containing keys matched to cooresponding accordion Id\'s\r\n* expand : boolean - weather to expand or contract all accordions within the object.\r\n*/\n\nfunction ExpandCollapseAll(status) {\n  let expand = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const newStatus = {};\n  Object.keys(status).forEach(s => {\n    newStatus[s] = expand;\n  });\n  return newStatus;\n}\n// EXTERNAL MODULE: ./lib/Accordion/AccordionStatusContext.js\nvar AccordionStatusContext = __webpack_require__("./lib/Accordion/AccordionStatusContext.js");\n;// CONCATENATED MODULE: ./lib/Accordion/ExpandAllButton.js\n\n\n\n\n\n\n\n\n\n\n// returns true if more keys in status are set to false than true;\n\nconst majorityCollapsed = (0,memoize_one_esm/* default */.A)(status => {\n  const marjority = Object.keys(status).reduce((accum, id) => status[id] ? accum + 1 : accum - 1, 0);\n  return marjority < 0;\n}, (isEqual_default()));\nconst propTypes = {\n  accordionStatus: (prop_types_default()).object,\n  collapseLabel: (prop_types_default()).node,\n  expandLabel: (prop_types_default()).node,\n  id: (prop_types_default()).string,\n  onToggle: (prop_types_default()).func,\n  setStatus: (prop_types_default()).func\n};\nfunction handleClick(_ref) {\n  let {\n    accordionStatus,\n    func,\n    setStatus,\n    onToggle\n  } = _ref;\n  const newState = ExpandCollapseAll(accordionStatus, func);\n  if (setStatus) {\n    // we want the button change to be snappy, so we go ahead and push\n    // the state update to immediate mode vs React v18\'s batching.\n    (0,react_dom.flushSync)(() => setStatus(newState));\n  }\n  if (onToggle) onToggle(newState);\n}\nconst ExpandAllButton = _ref2 => {\n  let {\n    accordionStatus,\n    collapseLabel: collapseLabelProp,\n    expandLabel: expandLabelProp,\n    id,\n    onToggle,\n    setStatus\n  } = _ref2;\n  const expandLabel = expandLabelProp || /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.expandAll"\n  });\n  const collapseLabel = collapseLabelProp || /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.collapseAll"\n  });\n  const func = majorityCollapsed(accordionStatus);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n    buttonStyle: "link bottomMargin0",\n    id: id,\n    onClick: () => {\n      handleClick({\n        accordionStatus,\n        func,\n        setStatus,\n        onToggle\n      });\n    },\n    "data-test-expand-button": true,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)("strong", {\n      children: func ? expandLabel : collapseLabel\n    })\n  });\n};\nExpandAllButton.displayName = "ExpandAllButton";\nExpandAllButton.propTypes = propTypes;\n/* harmony default export */ const Accordion_ExpandAllButton = ((0,AccordionStatusContext/* withAccordionStatus */.J)(ExpandAllButton));\n;\nExpandAllButton.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "ExpandAllButton",\n  "props": {\n    "accordionStatus": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "collapseLabel": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "expandLabel": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "onToggle": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "setStatus": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    }\n  }\n};\n;// CONCATENATED MODULE: ./lib/Accordion/stories/Status.js\n\n\n\n\n\n\n/* harmony default export */ const Status = (() => {\n  const [textValue, updateTextValue] = (0,react.useState)(\'\');\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n      children: "AccordionStatus with AccordionSet (uncontrolled - State managed by AccordionStatus)"\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionStatus/* default */.A, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion_ExpandAllButton, {}), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n          label: "AccordionStatus_one",\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n            children: "first content"\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("input", {\n            type: "text",\n            value: textValue,\n            onChange: e => updateTextValue(e.target.value)\n          })]\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n          label: "AccordionStatus_two",\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n            children: "second content"\n          })\n        })]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n      children: "Nested AccordionSet"\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionStatus/* default */.A, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion_ExpandAllButton, {}), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n          id: "has_nested",\n          label: "container",\n          children: /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionStatus/* default */.A, {\n            children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion_ExpandAllButton, {}), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n              children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n                id: "nested_1",\n                label: "nested_1",\n                children: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n                  children: "first nested content"\n                })\n              }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n                id: "nested_2",\n                label: "nested_2",\n                children: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n                  children: "second nested content"\n                })\n              })]\n            })]\n          })\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n          label: "sibling",\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n            children: "second content"\n          })\n        })]\n      })]\n    })]\n  });\n});\n;// CONCATENATED MODULE: ./lib/Accordion/stories/ExpandAllWithinSet.js\n/**\r\n * Accordion: Expand all within AccordionSet\r\n */\n\n/* eslint-disable max-len */\n\n\n\n\n\n\n\nconst ExpandAllWithin = () => {\n  const [status, updateStatus] = react.useState({\n    info: true,\n    exinfo: true,\n    proxy: true\n  });\n  const onToggleAll = () => {\n    updateStatus(curStatus => {\n      const newStatus = {};\n      Object.keys(curStatus).forEach(s => {\n        newStatus[s] = !curStatus[s];\n      });\n      return newStatus;\n    });\n  };\n  const onToggle = _ref => {\n    let {\n      id\n    } = _ref;\n    updateStatus(current => ({\n      ...current,\n      [id]: !current[id]\n    }));\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n      children: "Controlled (The old way)"\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n      accordionStatus: status,\n      onToggle: onToggle,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion_ExpandAllButton, {\n        accordionStatus: status,\n        onToggle: onToggleAll\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n        label: "Information",\n        id: "info",\n        displayWhenOpen: /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n          icon: "plus-sign",\n          children: "Add"\n        }),\n        children: ["This is an example of an AccordionSet. The 2nd of these accordions is closed by default using the \\"closedByDefault\\" prop. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas vitae fringilla felis, sed commodo tellus. Sed bibendum mi id lorem sagittis sodales. Quisque ac lectus gravida, viverra ante et, iaculis sapien. Praesent eget ligula tortor. Praesent vitae ipsum placerat, blandit quam quis, tempus tortor. Aliquam erat volutpat. Fusce hendrerit lectus sed ex dictum, in pretium eros vestibulum. Nulla semper vehicula leo at varius. Quisque bibendum mauris sit amet tellus lobortis ultricies. Mauris eleifend sapien vel est posuere tincidunt. Proin ut nunc ut enim rhoncus elementum vitae in mauris. Nullam ultrices dictum nulla in commodo. Suspendisse potenti. Donec et velit ac quam consequat cursus. Pellentesque quis elit magna. Fusce velit libero, mattis ac placerat eget, aliquam a ante.", /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), faker_default().lorem.paragraph()]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n        label: "Extended Information",\n        id: "exinfo",\n        closedByDefault: true,\n        children: [faker_default().lorem.paragraph(), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), faker_default().lorem.paragraph()]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n        label: "Proxy",\n        id: "proxy",\n        children: [faker_default().lorem.paragraph(), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)(Datepicker/* default */.A, {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), faker_default().lorem.paragraph()]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n      children: "Uncontrolled (The new way)"\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion_ExpandAllButton, {}), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n        label: "Information",\n        displayWhenOpen: /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n          icon: "plus-sign",\n          children: "Add"\n        }),\n        children: ["This is an example of an AccordionSet. The 2nd of these accordions is closed by default using the \\"closedByDefault\\" prop. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas vitae fringilla felis, sed commodo tellus. Sed bibendum mi id lorem sagittis sodales. Quisque ac lectus gravida, viverra ante et, iaculis sapien. Praesent eget ligula tortor. Praesent vitae ipsum placerat, blandit quam quis, tempus tortor. Aliquam erat volutpat. Fusce hendrerit lectus sed ex dictum, in pretium eros vestibulum. Nulla semper vehicula leo at varius. Quisque bibendum mauris sit amet tellus lobortis ultricies. Mauris eleifend sapien vel est posuere tincidunt. Proin ut nunc ut enim rhoncus elementum vitae in mauris. Nullam ultrices dictum nulla in commodo. Suspendisse potenti. Donec et velit ac quam consequat cursus. Pellentesque quis elit magna. Fusce velit libero, mattis ac placerat eget, aliquam a ante.", /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), faker_default().lorem.paragraph()]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n        label: "Extended Information",\n        closedByDefault: true,\n        children: [faker_default().lorem.paragraph(), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), faker_default().lorem.paragraph()]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(Accordion/* default */.A, {\n        label: "Proxy",\n        children: [faker_default().lorem.paragraph(), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), faker_default().lorem.paragraph()]\n      })]\n    })]\n  });\n};\n/* harmony default export */ const ExpandAllWithinSet = (ExpandAllWithin);\n;\nExpandAllWithin.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "ExpandAllWithin"\n};\n// EXTERNAL MODULE: ./lib/Accordion/headers/FilterAccordionHeader.js\nvar FilterAccordionHeader = __webpack_require__("./lib/Accordion/headers/FilterAccordionHeader.js");\n;// CONCATENATED MODULE: ./lib/Accordion/stories/Accordion.stories.js\n\n\n\n\n\n\n\n\n\nconst as = {\n  acc1: false,\n  acc2: false,\n  acc3: false,\n  acc4: false\n};\n/* harmony default export */ const Accordion_stories = ({\n  title: \'Accordion\'\n});\nconst WithDefaults = () => /*#__PURE__*/(0,jsx_runtime.jsx)(stories_BasicUsage, {});\nWithDefaults.displayName = "WithDefaults";\nWithDefaults.storyName = \'With defaults\';\nconst Accordion_stories_AccordionStatus = () => /*#__PURE__*/(0,jsx_runtime.jsx)(Status, {});\nAccordion_stories_AccordionStatus.displayName = "AccordionStatus";\nconst KeyboardNavigation = () => /*#__PURE__*/(0,jsx_runtime.jsxs)(AccordionSet/* default */.A, {\n  accordionStatus: as,\n  children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n    label: "Up Arrow",\n    id: "acc1",\n    children: "Content"\n  }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n    label: "Down Arrow",\n    id: "acc2",\n    children: "Content"\n  }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n    label: "Home",\n    id: "acc3",\n    children: "Content"\n  }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n    label: "End",\n    id: "acc4",\n    children: "Content"\n  })]\n});\nKeyboardNavigation.displayName = "KeyboardNavigation";\nconst DisplayWhenProps = () => /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n  children: [/*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n    children: "\\"displayWhenOpen\\" prop"\n  }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n    label: "Here is a label",\n    displayWhenOpen: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: "Add item"\n    }),\n    children: "Content"\n  }), /*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n    children: "\\"displayWhenClosed\\" prop"\n  }), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n    open: false,\n    displayWhenClosed: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: "Some items"\n    }),\n    children: "Content"\n  })]\n});\nDisplayWhenProps.storyName = \'DisplayWhen\';\nconst Separator = () => /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n  separator: false,\n  children: "Separator set to false."\n});\nSeparator.displayName = "Separator";\nSeparator.storyName = \'Separator\';\nconst Header = () => {\n  const header = _ref => {\n    let {\n      contentId,\n      toggleRef,\n      open,\n      onToggle,\n      label,\n      labelId\n    } = _ref;\n    return /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      style: {\n        border: \'1px solid #ddd\',\n        padding: \'0 4px\'\n      },\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)("button", {\n        ref: toggleRef,\n        onClick: onToggle,\n        "aria-owns": contentId,\n        id: labelId,\n        children: `${label} Header Content (click to ${open ? \'close\' : \'expand\'})`\n      })\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n      style: {\n        border: \'1px solid #ccc\',\n        padding: \'0 1rem\'\n      },\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n        header: header,\n        label: \'Example\',\n        children: "Body Content"\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)(Accordion/* default */.A, {\n      header: FilterAccordionHeader/* default */.A,\n      label: \'Filter Accordion Header\',\n      children: "Content"\n    })]\n  });\n};\nHeader.storyName = \'Header\';\nconst Accordion_stories_ExpandAllWithinSet = () => /*#__PURE__*/(0,jsx_runtime.jsx)(ExpandAllWithinSet, {});\nAccordion_stories_ExpandAllWithinSet.displayName = "ExpandAllWithinSet";\nAccordion_stories_ExpandAllWithinSet.storyName = \'ExpandAll within set\';\nWithDefaults.parameters = {\n  ...WithDefaults.parameters,\n  docs: {\n    ...WithDefaults.parameters?.docs,\n    source: {\n      originalSource: "() => <BasicUsage />",\n      ...WithDefaults.parameters?.docs?.source\n    }\n  }\n};\nAccordion_stories_AccordionStatus.parameters = {\n  ...Accordion_stories_AccordionStatus.parameters,\n  docs: {\n    ...Accordion_stories_AccordionStatus.parameters?.docs,\n    source: {\n      originalSource: "() => <Status />",\n      ...Accordion_stories_AccordionStatus.parameters?.docs?.source\n    }\n  }\n};\nKeyboardNavigation.parameters = {\n  ...KeyboardNavigation.parameters,\n  docs: {\n    ...KeyboardNavigation.parameters?.docs,\n    source: {\n      originalSource: "() => <AccordionSet accordionStatus={as}>\\r\\n    <Accordion label=\\"Up Arrow\\" id=\\"acc1\\">\\r\\n      Content\\r\\n    </Accordion>\\r\\n    <Accordion label=\\"Down Arrow\\" id=\\"acc2\\">\\r\\n      Content\\r\\n    </Accordion>\\r\\n    <Accordion label=\\"Home\\" id=\\"acc3\\">\\r\\n      Content\\r\\n    </Accordion>\\r\\n    <Accordion label=\\"End\\" id=\\"acc4\\">\\r\\n      Content\\r\\n    </Accordion>\\r\\n  </AccordionSet>",\n      ...KeyboardNavigation.parameters?.docs?.source\n    }\n  }\n};\nDisplayWhenProps.parameters = {\n  ...DisplayWhenProps.parameters,\n  docs: {\n    ...DisplayWhenProps.parameters?.docs,\n    source: {\n      originalSource: "() => <>\\r\\n    <h2>&quot;displayWhenOpen&quot; prop</h2>\\r\\n    <Accordion label=\\"Here is a label\\" displayWhenOpen={<p>Add item</p>}>\\r\\n      Content\\r\\n    </Accordion>\\r\\n    <h2>&quot;displayWhenClosed&quot; prop</h2>\\r\\n    <Accordion open={false} displayWhenClosed={<p>Some items</p>}>\\r\\n      Content\\r\\n    </Accordion>\\r\\n  </>",\n      ...DisplayWhenProps.parameters?.docs?.source\n    }\n  }\n};\nSeparator.parameters = {\n  ...Separator.parameters,\n  docs: {\n    ...Separator.parameters?.docs,\n    source: {\n      originalSource: "() => <Accordion separator={false}>Separator set to false.</Accordion>",\n      ...Separator.parameters?.docs?.source\n    }\n  }\n};\nHeader.parameters = {\n  ...Header.parameters,\n  docs: {\n    ...Header.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const header = ({\\n    contentId,\\n    toggleRef,\\n    open,\\n    onToggle,\\n    label,\\n    labelId\\n  }) => <p style={{\\n    border: \'1px solid #ddd\',\\n    padding: \'0 4px\'\\n  }}>\\r\\n      <button ref={toggleRef} onClick={onToggle} aria-owns={contentId} id={labelId}>{`${label} Header Content (click to ${open ? \'close\' : \'expand\'})`}</button>\\r\\n      </p>;\\n  return <>\\r\\n      <div style={{\\n      border: \'1px solid #ccc\',\\n      padding: \'0 1rem\'\\n    }}>\\r\\n        <Accordion header={header} label={\'Example\'}>Body Content</Accordion>\\r\\n      </div>\\r\\n      <br />\\r\\n      <br />\\r\\n      <br />\\r\\n      <Accordion header={FilterAccordionHeader} label={\'Filter Accordion Header\'}>Content</Accordion>\\r\\n    </>;\\n}",\n      ...Header.parameters?.docs?.source\n    }\n  }\n};\nAccordion_stories_ExpandAllWithinSet.parameters = {\n  ...Accordion_stories_ExpandAllWithinSet.parameters,\n  docs: {\n    ...Accordion_stories_ExpandAllWithinSet.parameters?.docs,\n    source: {\n      originalSource: "() => <ExpandAllWithin />",\n      ...Accordion_stories_ExpandAllWithinSet.parameters?.docs?.source\n    }\n  }\n};;const __namedExportsOrder = ["WithDefaults","AccordionStatus","KeyboardNavigation","DisplayWhenProps","Separator","Header","ExpandAllWithinSet"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/Accordion/stories/Accordion.stories.js\n')}}]);