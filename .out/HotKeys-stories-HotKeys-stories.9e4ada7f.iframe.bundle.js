"use strict";(self.webpackChunk_folio_stripes_components=self.webpackChunk_folio_stripes_components||[]).push([[5622],{"./lib/HotKeys/stories/HotKeys.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  CommandList: () => (/* binding */ HotKeys_stories_CommandList),\n  _BasicUsage: () => (/* binding */ _BasicUsage),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  "default": () => (/* binding */ HotKeys_stories)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("./node_modules/react/index.js");\n// EXTERNAL MODULE: ./node_modules/@storybook/addon-actions/dist/index.mjs + 1 modules\nvar dist = __webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");\n// EXTERNAL MODULE: ./lib/TextField/TextField.js\nvar TextField = __webpack_require__("./lib/TextField/TextField.js");\n// EXTERNAL MODULE: ./lib/Button/Button.js + 1 modules\nvar Button = __webpack_require__("./lib/Button/Button.js");\n// EXTERNAL MODULE: ./lib/MultiColumnList/MultiColumnList.js + 17 modules\nvar MultiColumnList = __webpack_require__("./lib/MultiColumnList/MultiColumnList.js");\n// EXTERNAL MODULE: ./node_modules/@folio/stripes-react-hotkeys/index.es.js\nvar index_es = __webpack_require__("./node_modules/@folio/stripes-react-hotkeys/index.es.js");\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__("./node_modules/react/jsx-runtime.js");\n;// CONCATENATED MODULE: ./lib/HotKeys/stories/BasicUsage.js\n/**\n * HotKeys -> Basic usage\n */\n\n\n\n\n\n\n\n\nconst outerOuterEnter = (0,dist/* action */.XI)(\'outer_outer_enter\');\nconst outerInnerEnter = (0,dist/* action */.XI)(\'outer_inner_enter\');\nconst innerOuterEnter = (0,dist/* action */.XI)(\'inner_outer_enter\');\nconst innerInnerEnter = (0,dist/* action */.XI)(\'inner_inner_enter\');\nconst tabOuterHandler = (0,dist/* action */.XI)(\'tabOuter\');\nconst tabInnerHandler = (0,dist/* action */.XI)(\'tabInner\');\nconst altOuterHandler = (0,dist/* action */.XI)(\'altOuter\');\nconst altInnerHandler = (0,dist/* action */.XI)(\'altInner\');\nconst outerDownHandler = (0,dist/* action */.XI)(\'downHandler\');\nconst outerKeyMap = {\n  \'ENTER_OUTER\': \'enter\',\n  \'TAB\': \'tab\'\n};\nconst innerKeyMap = {\n  \'ENTER_INNER\': \'enter\',\n  \'ALT\': \'alt\'\n};\nconst outerHandlers = {\n  \'ENTER_OUTER\': outerOuterEnter,\n  \'TAB\': tabOuterHandler,\n  \'ENTER_INNER\': outerInnerEnter,\n  \'ALT\': altOuterHandler\n};\nconst innerHandlers = {\n  \'ENTER_OUTER\': innerOuterEnter,\n  \'TAB\': tabInnerHandler,\n  \'ENTER_INNER\': innerInnerEnter,\n  \'ALT\': altInnerHandler\n};\nconst alternativeOuterKey = {\n  \'TAB\': \'down\'\n};\nconst alternativeOuterHandler = {\n  \'TAB\': outerDownHandler\n};\nconst hotkeyData = [{\n  HotKey: \'alt\',\n  outerField: \'not mapped\',\n  innerField: \'altInner\'\n}, {\n  HotKey: \'enter\',\n  outerField: \'outer_outer_enter\',\n  innerField: \'inner_inner_enter\'\n}, {\n  HotKey: \'tab\',\n  outerField: \'tabOuter\',\n  innerField: \'tabInner\'\n}];\nconst BasicUsage = () => {\n  const [value, setValue] = (0,react.useState)(\'fill\');\n  const [outerH, setOuterH] = (0,react.useState)(outerHandlers);\n  const [outerK, setOuterK] = (0,react.useState)(outerKeyMap);\n  const changeKey = () => {\n    setOuterK(current => {\n      return Object.assign({}, current, alternativeOuterKey);\n    });\n  };\n  const changeHandler = () => {\n    setOuterH(current => {\n      return Object.assign({}, current, alternativeOuterHandler);\n    });\n  };\n\n  /* eslint-disable max-len */\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n      children: "HotKeys"\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: "This table describes the mapping of the keyboard keys for the below example. In code, the tab key is mapped at the outside level, and the inner field applies its own handler. \\"ALT\\" is only mapped to the inner field. You can see output from pressing hot keys in the \\"Action Logger\\" panel below."\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(MultiColumnList/* default */.A, {\n      contentData: hotkeyData\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: "The scope of a hotKey\'s affect in the UI is dictated by focus. When your focus indicator (blue outline in most browsers) is within the blue (outer) or orange (inner) borders, the scope is to the corresponding HotKeys instance."\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(index_es.HotKeys, {\n      keyMap: outerK,\n      handlers: outerH,\n      id: "outer",\n      children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        style: {\n          border: \'1px dashed blue\',\n          padding: \'10px\'\n        },\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(TextField/* default */.A, {\n          label: "Outer field",\n          value: value,\n          onChange: e => {\n            setValue(e.target.value);\n          }\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(index_es.HotKeys, {\n          keyMap: innerKeyMap,\n          handlers: innerHandlers,\n          id: "inner",\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n            style: {\n              border: \'1px dashed orange\',\n              padding: \'10px\'\n            },\n            children: /*#__PURE__*/(0,jsx_runtime.jsx)(TextField/* default */.A, {\n              label: "Inner field"\n            })\n          })\n        })]\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: "The buttons below will modify the mapped keys of the outer field. The \\"Change Key\\" button will map the \\"Tab\\" handler to the \\"down\\" arrow. The \\"Change Handler\\" button will map a \\"downHandler\\" to the \\"Tab\\" mapping."\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n      type: "button",\n      onClick: changeKey,\n      children: "Change Tab key mapping to Down key"\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n      type: "button",\n      onClick: changeHandler,\n      children: "Change Tab (or Down?) key handler to a Down key handler"\n    })]\n  });\n};\nBasicUsage.displayName = "BasicUsage";\n/* eslint-enable max-len */\n/* harmony default export */ const stories_BasicUsage = (BasicUsage);\n;\nBasicUsage.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "BasicUsage"\n};\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__("./node_modules/prop-types/index.js");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n;// CONCATENATED MODULE: ./lib/Commander/CommandList.js\n\n\n\n\nclass CommandList extends react.Component {\n  constructor(props) {\n    super(props);\n    this.shortcutRef = /*#__PURE__*/(0,react.createRef)(null);\n  }\n  generateHotKeysProps() {\n    const {\n      commands\n    } = this.props;\n    const keyMap = {};\n    const handlers = {};\n    commands.forEach(c => {\n      keyMap[c.name] = c.shortcut || \'\';\n      if (c.handler) {\n        handlers[c.name] = c.handler;\n      }\n    });\n    return {\n      keyMap,\n      handlers\n    };\n  }\n  render() {\n    const {\n      children,\n      id\n    } = this.props;\n    return /*#__PURE__*/(0,jsx_runtime.jsx)(index_es.HotKeys, {\n      id: id,\n      ...this.generateHotKeysProps(),\n      attach: this.shortcutRef.current,\n      noWrapper: true,\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        ref: this.shortcutRef,\n        children: children\n      })\n    });\n  }\n}\nCommandList.propTypes = {\n  children: (prop_types_default()).node,\n  commands: prop_types_default().arrayOf(prop_types_default().shape({\n    handler: (prop_types_default()).func,\n    label: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).func, (prop_types_default()).node]),\n    name: (prop_types_default()).string.isRequired,\n    shortcut: (prop_types_default()).string\n  })).isRequired,\n  id: (prop_types_default()).string\n};\nCommandList.displayName = "CommandList";\n/* harmony default export */ const Commander_CommandList = (CommandList);\n;\nCommandList.__docgenInfo = {\n  "description": "",\n  "methods": [{\n    "name": "generateHotKeysProps",\n    "docblock": null,\n    "modifiers": [],\n    "params": [],\n    "returns": null\n  }],\n  "displayName": "CommandList",\n  "props": {\n    "children": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "commands": {\n      "description": "",\n      "type": {\n        "name": "arrayOf",\n        "value": {\n          "name": "shape",\n          "value": {\n            "handler": {\n              "name": "func",\n              "required": false\n            },\n            "label": {\n              "name": "union",\n              "value": [{\n                "name": "string"\n              }, {\n                "name": "func"\n              }, {\n                "name": "node"\n              }],\n              "required": false\n            },\n            "name": {\n              "name": "string",\n              "required": true\n            },\n            "shortcut": {\n              "name": "string",\n              "required": false\n            }\n          }\n        }\n      },\n      "required": true\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    }\n  }\n};\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/src/components/message.js\nvar message = __webpack_require__("./node_modules/react-intl/lib/src/components/message.js");\n// EXTERNAL MODULE: ./node_modules/lodash/mapValues.js\nvar lodash_mapValues = __webpack_require__("./node_modules/lodash/mapValues.js");\n;// CONCATENATED MODULE: ./lib/Commander/keyboardShortcuts.js\n\n\n\n\nconst expandAllSections = (e, accordionStatusRef) => {\n  e.preventDefault();\n  const {\n    setStatus\n  } = accordionStatusRef.current;\n  setStatus(cur => ({\n    ...cur,\n    status: mapValues(cur.status, () => true)\n  }));\n};\nconst collapseAllSections = (e, accordionStatusRef) => {\n  e.preventDefault();\n  const {\n    setStatus\n  } = accordionStatusRef.current;\n  setStatus(cur => ({\n    ...cur,\n    status: mapValues(cur.status, () => false)\n  }));\n};\nconst checkScope = () => {\n  return document.body.contains(document.activeElement);\n};\nconst defaultKeyboardShortcuts = [{\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.createRecord"\n  }),\n  name: \'new\',\n  shortcut: \'alt + n\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.editRecord"\n  }),\n  name: \'edit\',\n  shortcut: \'mod + alt + e\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.saveRecord"\n  }),\n  name: \'save\',\n  shortcut: \'mod + s\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.duplicateRecord"\n  }),\n  name: \'duplicateRecord\',\n  shortcut: \'alt + c\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.expandAll"\n  }),\n  name: \'expandAllSections\',\n  shortcut: \'mod + alt + b\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.collapseAll"\n  }),\n  name: \'collapseAllSections\',\n  shortcut: \'mod + alt + g\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.expandOrCollapse"\n  }),\n  name: \'expandOrCollapseAccordion\',\n  shortcut: \'spacebar\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.goToSearchFilter"\n  }),\n  name: \'search\',\n  shortcut: \'mod + alt + h\'\n}, {\n  label: /*#__PURE__*/(0,jsx_runtime.jsx)(message/* default */.A, {\n    id: "stripes-components.shortcut.openShortcutModal"\n  }),\n  name: \'openShortcutModal\',\n  shortcut: \'mod + alt + k\'\n}];\n\n// list of default keyboard shortcut names [\'new\', \'edit\', \'save\']\nconst keyboardShortcutNames = defaultKeyboardShortcuts.map(_ref => {\n  let {\n    name\n  } = _ref;\n  return name;\n});\n\n/* function to import specific shortcuts relevant to the app. Takes in an array with\n   shortcut names [\'new\', \'save\', \'duplicateRecord\'] and returns an array of requested\n   shortcuts entries from the defaultKeyboardShortcuts array prserving the order of entries */\nconst importShortcuts = function () {\n  let shortcutNamesArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const filteredShortcutsArray = []; // array that contains specific requested shortcuts from the app\n\n  for (const shortcut of defaultKeyboardShortcuts) {\n    if (shortcutNamesArray.find(shortcutName => shortcutName?.toLowerCase() === shortcut?.name?.toLowerCase())) {\n      filteredShortcutsArray.push(shortcut);\n    }\n  }\n  return filteredShortcutsArray;\n};\n\n/* function that overrides the labels of the default shortcuts to be displayed\n   Eg: The \'new\' default shortcut renders its label as `New`. If the app wants it displayed as `New resource` instead,\n   you could call the renameShortcutLabels function as\n   `renameShortcutLabels(shortcutsArray, [{ \'shortcut\': \'new\', \'label\': \'<FormatedMessage id="ui-app.newResource\'}]\n   Note: shortcutsArray contains the list of shortcuts with labels you want to be modified. eg: defaultKeyboardShortcuts\n*/\nconst renameShortcutLabels = function () {\n  let shortcutsArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let newLabelsArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (newLabelsArray.length === 0) return shortcutsArray;\n  return shortcutsArray.map(shortcutObj => {\n    const {\n      name\n    } = shortcutObj;\n    const entryWithShortcut = newLabelsArray.find(_ref2 => {\n      let {\n        shortcut\n      } = _ref2;\n      return shortcut?.toLowerCase() === name?.toLowerCase();\n    });\n    return entryWithShortcut ? {\n      ...shortcutObj,\n      label: entryWithShortcut.label\n    } : shortcutObj;\n  });\n};\n\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("./node_modules/lodash/isEqual.js");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n;// CONCATENATED MODULE: ./lib/Commander/HasCommand.js\n/*\n* HasCommand applies a keyboard shortcut to a wrapped section of the UI\n* Given a \'name\' prop, it assigns a handler function to the associated\n* Shortcut from a parent \'CommandList\'\n*/\n\n\n\n\n\n\nclass HasCommand extends react.Component {\n  constructor(props) {\n    super(props);\n    this.getHandlers = this.getHandlers.bind(this);\n    this.getKeyMap = this.getKeyMap.bind(this);\n    this.handlers = this.getHandlers();\n    this.keyMap = this.getKeyMap();\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      commands\n    } = this.props;\n    if (!isEqual_default()(commands, prevProps.commands)) {\n      this.handlers = this.getHandlers();\n      this.keyMap = this.getKeyMap();\n      this.forceUpdate();\n    }\n  }\n  getHandlers() {\n    const {\n      commands\n    } = this.props;\n    const handlers = {};\n    commands.forEach(c => {\n      if (c.handler) {\n        handlers[c.name] = c.handler;\n      }\n    });\n    return handlers;\n  }\n  getKeyMap() {\n    const {\n      commands\n    } = this.props;\n    const keyMap = {};\n    commands.forEach(c => {\n      if (c.shortcut) {\n        keyMap[c.name] = c.shortcut;\n      }\n    });\n    if (Object.keys(keyMap).length === 0) {\n      return null;\n    }\n    return keyMap;\n  }\n  render() {\n    const {\n      children,\n      id,\n      isWithinScope,\n      scope\n    } = this.props;\n    return /*#__PURE__*/(0,jsx_runtime.jsx)(index_es.HotKeys, {\n      id: id,\n      keyMap: this.keyMap,\n      handlers: this.handlers,\n      focused: isWithinScope,\n      attach: scope,\n      noWrapper: true,\n      children: children\n    });\n  }\n}\nHasCommand.propTypes = {\n  children: prop_types_default().oneOfType([(prop_types_default()).node, prop_types_default().arrayOf((prop_types_default()).node)]).isRequired,\n  commands: prop_types_default().arrayOf((prop_types_default()).object),\n  id: (prop_types_default()).string,\n  isWithinScope: (prop_types_default()).func,\n  scope: prop_types_default().oneOfType([(prop_types_default()).node, prop_types_default().instanceOf(Element), (prop_types_default()).object])\n};\nHasCommand.displayName = "HasCommand";\n/* harmony default export */ const Commander_HasCommand = (HasCommand);\n;\nHasCommand.__docgenInfo = {\n  "description": "",\n  "methods": [{\n    "name": "getHandlers",\n    "docblock": null,\n    "modifiers": [],\n    "params": [],\n    "returns": null\n  }, {\n    "name": "getKeyMap",\n    "docblock": null,\n    "modifiers": [],\n    "params": [],\n    "returns": null\n  }],\n  "displayName": "HasCommand",\n  "props": {\n    "children": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "node"\n        }, {\n          "name": "arrayOf",\n          "value": {\n            "name": "node"\n          }\n        }]\n      },\n      "required": true\n    },\n    "commands": {\n      "description": "",\n      "type": {\n        "name": "arrayOf",\n        "value": {\n          "name": "object"\n        }\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "isWithinScope": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "scope": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "node"\n        }, {\n          "name": "instanceOf",\n          "value": "Element"\n        }, {\n          "name": "object"\n        }]\n      },\n      "required": false\n    }\n  }\n};\n;// CONCATENATED MODULE: ./lib/HotKeys/stories/CommandList.js\n\n\n\n\n\n/* harmony default export */ const stories_CommandList = (() => {\n  const [saveEnabled, updateSaveEnabled] = (0,react.useState)(false);\n  const saveHandler = e => {\n    e?.preventDefault(); // eslint-disable-line\n    if (saveEnabled) {\n      alert(\'data saved!\'); // eslint-disable-line\n      updateSaveEnabled(false);\n    }\n  };\n  const formChange = () => {\n    updateSaveEnabled(true);\n  };\n  const handlers = [{\n    name: \'save\',\n    handler: saveHandler\n  }];\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Commander_CommandList, {\n    commands: defaultKeyboardShortcuts,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(Commander_HasCommand, {\n      commands: handlers,\n      children: /*#__PURE__*/(0,jsx_runtime.jsxs)("fieldset", {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("legend", {\n          children: "Form Hotkeys"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n          children: "Ctrl + s is the save key when the form elements are focused..."\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(TextField/* default */.A, {\n          onChange: formChange,\n          label: "Command field"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(Button/* default */.A, {\n          disabled: !saveEnabled,\n          onClick: saveHandler,\n          children: "Save"\n        })]\n      })\n    })\n  });\n});\n;// CONCATENATED MODULE: ./lib/HotKeys/stories/HotKeys.stories.js\n\n\n\n\n/* harmony default export */ const HotKeys_stories = ({\n  title: \'HotKeys\'\n});\nconst _BasicUsage = () => /*#__PURE__*/(0,jsx_runtime.jsx)(stories_BasicUsage, {});\n_BasicUsage.displayName = "_BasicUsage";\nconst HotKeys_stories_CommandList = () => /*#__PURE__*/(0,jsx_runtime.jsx)(stories_CommandList, {});\nHotKeys_stories_CommandList.displayName = "CommandList";\nHotKeys_stories_CommandList.storyName = \'CommandList\';\n_BasicUsage.parameters = {\n  ..._BasicUsage.parameters,\n  docs: {\n    ..._BasicUsage.parameters?.docs,\n    source: {\n      originalSource: "() => <BasicUsage />",\n      ..._BasicUsage.parameters?.docs?.source\n    }\n  }\n};\nHotKeys_stories_CommandList.parameters = {\n  ...HotKeys_stories_CommandList.parameters,\n  docs: {\n    ...HotKeys_stories_CommandList.parameters?.docs,\n    source: {\n      originalSource: "() => <CommandListUsage />",\n      ...HotKeys_stories_CommandList.parameters?.docs?.source\n    }\n  }\n};;const __namedExportsOrder = ["_BasicUsage","CommandList"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/HotKeys/stories/HotKeys.stories.js\n')},"./util/getFocusableElements.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ec: () => (/* binding */ getNextFocusable),\n/* harmony export */   Fy: () => (/* binding */ FOCUSABLE_SELECTOR),\n/* harmony export */   cE: () => (/* binding */ getPreviousFocusable),\n/* harmony export */   dm: () => (/* binding */ getLastFocusable),\n/* harmony export */   j5: () => (/* binding */ getFirstFocusable)\n/* harmony export */ });\n/* harmony import */ var lodash_first__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/lodash/first.js");\n/* harmony import */ var lodash_first__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_first__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_last__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/lodash/last.js");\n/* harmony import */ var lodash_last__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_last__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * @typedef {Function} getNextFocusable()\n *    @description Returns next/previous focusable DOM element, respectively\n *   Params:\n *     @param {object} currentElement\n *       DOM element - starting element for search. Returns next focused element AFTER this element.\n *     @param {bool} includeContained\n *       Default: true. Will return the next focusable item within the current element. If false, returned\n *       element will be outside of the container,\n *      @param {bool} onlyContained\n *       Default: false. If true and includeContaining is true, the search is limited only to\n *        elements within the container.\n *     @param {bool} loop\n *       Default: true. Elements are chosen by index. If the index is beyond the end of the list,\n *       the first element will be returned.\n *       If the index is before the start of the list, the last element will be returned.\n*/\n\n\n\n\n// eslint-disable-next-line max-len\nconst FOCUSABLE_SELECTOR = \'a:not([disabled]), button:not([disabled]), input:not([disabled]), textarea:not([disabled]), select:not([disabled]), [tabindex]:not([disabled]):not([tabindex="-1"]), [tabIndex="-1"]:not([disabled]):focus\';\nfunction getVisibleFocusableElements() {\n  let container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  let includeContained = arguments.length > 1 ? arguments[1] : undefined;\n  let currentElement = arguments.length > 2 ? arguments[2] : undefined;\n  if (container.querySelectorAll) {\n    return Array.from(container.querySelectorAll(FOCUSABLE_SELECTOR)).filter(element => {\n      if (!includeContained) {\n        if (element === currentElement) {\n          return true;\n        }\n        if (currentElement && currentElement.contains(element)) {\n          return false;\n        }\n      }\n      if (element.matches(\'[data-focus-exclude]\')) {\n        return false;\n      }\n\n      // check for visibility while always include the current activeElement\n      return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement;\n    });\n  }\n  return [];\n}\nfunction getNextorPrevious(collection, current, loop, next) {\n  let nullOnExit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let index = collection.indexOf(current);\n  if (index === -1) {\n    index = collection.indexOf(document.activeElement);\n  }\n  const nextElement = collection[index + 1];\n  const previousElement = collection[index - 1];\n\n  // First determine if travelling forwards or backwards through the list\n  if (next) {\n    // If looping then loop to beginning if nextElement is null\n    if (loop) {\n      return nextElement || collection[0];\n    }\n\n    // If nullOnExit then return null if nextElement is null\n    if (nullOnExit) {\n      return nextElement;\n    }\n\n    // Else return end of the list if nextElement is null\n    return collection[index + 1] || collection[collection.length - 1];\n  } else {\n    // If looping then loop to end if previousElement is null\n    if (loop) {\n      return previousElement || collection[collection.length - 1];\n    }\n\n    // If nullOnExit then return null if previousElement is null\n    if (nullOnExit) {\n      return previousElement;\n    }\n\n    // Else return beginning of the list if previousElement is null\n    return collection[index - 1] || collection[0];\n  }\n}\nfunction getFocusableElement(next, currentElement) {\n  let includeContained = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let onlyContained = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let loop = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let nullOnExit = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  const container = includeContained && onlyContained ? currentElement : document;\n  const focusable = getVisibleFocusableElements(container, includeContained, currentElement);\n  if (focusable.length > 0) {\n    return getNextorPrevious(focusable, currentElement, loop, next, nullOnExit);\n  }\n  return null;\n}\nfunction getNextFocusable() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return getFocusableElement(true, ...args);\n}\nfunction getPreviousFocusable() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return getFocusableElement(false, ...args);\n}\nfunction getLastFocusable(container) {\n  return lodash_last__WEBPACK_IMPORTED_MODULE_1___default()(getVisibleFocusableElements(container));\n}\nfunction getFirstFocusable(container) {\n  return lodash_first__WEBPACK_IMPORTED_MODULE_0___default()(getVisibleFocusableElements(container));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlsL2dldEZvY3VzYWJsZUVsZW1lbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZm9saW8vc3RyaXBlcy1jb21wb25lbnRzLy4vdXRpbC9nZXRGb2N1c2FibGVFbGVtZW50cy5qcz9mNzkxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge0Z1bmN0aW9ufSBnZXROZXh0Rm9jdXNhYmxlKClcbiAqICAgIEBkZXNjcmlwdGlvbiBSZXR1cm5zIG5leHQvcHJldmlvdXMgZm9jdXNhYmxlIERPTSBlbGVtZW50LCByZXNwZWN0aXZlbHlcbiAqICAgUGFyYW1zOlxuICogICAgIEBwYXJhbSB7b2JqZWN0fSBjdXJyZW50RWxlbWVudFxuICogICAgICAgRE9NIGVsZW1lbnQgLSBzdGFydGluZyBlbGVtZW50IGZvciBzZWFyY2guIFJldHVybnMgbmV4dCBmb2N1c2VkIGVsZW1lbnQgQUZURVIgdGhpcyBlbGVtZW50LlxuICogICAgIEBwYXJhbSB7Ym9vbH0gaW5jbHVkZUNvbnRhaW5lZFxuICogICAgICAgRGVmYXVsdDogdHJ1ZS4gV2lsbCByZXR1cm4gdGhlIG5leHQgZm9jdXNhYmxlIGl0ZW0gd2l0aGluIHRoZSBjdXJyZW50IGVsZW1lbnQuIElmIGZhbHNlLCByZXR1cm5lZFxuICogICAgICAgZWxlbWVudCB3aWxsIGJlIG91dHNpZGUgb2YgdGhlIGNvbnRhaW5lcixcbiAqICAgICAgQHBhcmFtIHtib29sfSBvbmx5Q29udGFpbmVkXG4gKiAgICAgICBEZWZhdWx0OiBmYWxzZS4gSWYgdHJ1ZSBhbmQgaW5jbHVkZUNvbnRhaW5pbmcgaXMgdHJ1ZSwgdGhlIHNlYXJjaCBpcyBsaW1pdGVkIG9ubHkgdG9cbiAqICAgICAgICBlbGVtZW50cyB3aXRoaW4gdGhlIGNvbnRhaW5lci5cbiAqICAgICBAcGFyYW0ge2Jvb2x9IGxvb3BcbiAqICAgICAgIERlZmF1bHQ6IHRydWUuIEVsZW1lbnRzIGFyZSBjaG9zZW4gYnkgaW5kZXguIElmIHRoZSBpbmRleCBpcyBiZXlvbmQgdGhlIGVuZCBvZiB0aGUgbGlzdCxcbiAqICAgICAgIHRoZSBmaXJzdCBlbGVtZW50IHdpbGwgYmUgcmV0dXJuZWQuXG4gKiAgICAgICBJZiB0aGUgaW5kZXggaXMgYmVmb3JlIHRoZSBzdGFydCBvZiB0aGUgbGlzdCwgdGhlIGxhc3QgZWxlbWVudCB3aWxsIGJlIHJldHVybmVkLlxuKi9cblxuaW1wb3J0IGZpcnN0IGZyb20gJ2xvZGFzaC9maXJzdCc7XG5pbXBvcnQgbGFzdCBmcm9tICdsb2Rhc2gvbGFzdCc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtbGVuXG5leHBvcnQgY29uc3QgRk9DVVNBQkxFX1NFTEVDVE9SID0gJ2E6bm90KFtkaXNhYmxlZF0pLCBidXR0b246bm90KFtkaXNhYmxlZF0pLCBpbnB1dDpub3QoW2Rpc2FibGVkXSksIHRleHRhcmVhOm5vdChbZGlzYWJsZWRdKSwgc2VsZWN0Om5vdChbZGlzYWJsZWRdKSwgW3RhYmluZGV4XTpub3QoW2Rpc2FibGVkXSk6bm90KFt0YWJpbmRleD1cIi0xXCJdKSwgW3RhYkluZGV4PVwiLTFcIl06bm90KFtkaXNhYmxlZF0pOmZvY3VzJztcbmZ1bmN0aW9uIGdldFZpc2libGVGb2N1c2FibGVFbGVtZW50cygpIHtcbiAgbGV0IGNvbnRhaW5lciA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZG9jdW1lbnQ7XG4gIGxldCBpbmNsdWRlQ29udGFpbmVkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gIGxldCBjdXJyZW50RWxlbWVudCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICBpZiAoY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShjb250YWluZXIucXVlcnlTZWxlY3RvckFsbChGT0NVU0FCTEVfU0VMRUNUT1IpKS5maWx0ZXIoZWxlbWVudCA9PiB7XG4gICAgICBpZiAoIWluY2x1ZGVDb250YWluZWQpIHtcbiAgICAgICAgaWYgKGVsZW1lbnQgPT09IGN1cnJlbnRFbGVtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGN1cnJlbnRFbGVtZW50ICYmIGN1cnJlbnRFbGVtZW50LmNvbnRhaW5zKGVsZW1lbnQpKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZWxlbWVudC5tYXRjaGVzKCdbZGF0YS1mb2N1cy1leGNsdWRlXScpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gY2hlY2sgZm9yIHZpc2liaWxpdHkgd2hpbGUgYWx3YXlzIGluY2x1ZGUgdGhlIGN1cnJlbnQgYWN0aXZlRWxlbWVudFxuICAgICAgcmV0dXJuIGVsZW1lbnQub2Zmc2V0V2lkdGggPiAwIHx8IGVsZW1lbnQub2Zmc2V0SGVpZ2h0ID4gMCB8fCBlbGVtZW50ID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBbXTtcbn1cbmZ1bmN0aW9uIGdldE5leHRvclByZXZpb3VzKGNvbGxlY3Rpb24sIGN1cnJlbnQsIGxvb3AsIG5leHQpIHtcbiAgbGV0IG51bGxPbkV4aXQgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGZhbHNlO1xuICBsZXQgaW5kZXggPSBjb2xsZWN0aW9uLmluZGV4T2YoY3VycmVudCk7XG4gIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICBpbmRleCA9IGNvbGxlY3Rpb24uaW5kZXhPZihkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcbiAgfVxuICBjb25zdCBuZXh0RWxlbWVudCA9IGNvbGxlY3Rpb25baW5kZXggKyAxXTtcbiAgY29uc3QgcHJldmlvdXNFbGVtZW50ID0gY29sbGVjdGlvbltpbmRleCAtIDFdO1xuXG4gIC8vIEZpcnN0IGRldGVybWluZSBpZiB0cmF2ZWxsaW5nIGZvcndhcmRzIG9yIGJhY2t3YXJkcyB0aHJvdWdoIHRoZSBsaXN0XG4gIGlmIChuZXh0KSB7XG4gICAgLy8gSWYgbG9vcGluZyB0aGVuIGxvb3AgdG8gYmVnaW5uaW5nIGlmIG5leHRFbGVtZW50IGlzIG51bGxcbiAgICBpZiAobG9vcCkge1xuICAgICAgcmV0dXJuIG5leHRFbGVtZW50IHx8IGNvbGxlY3Rpb25bMF07XG4gICAgfVxuXG4gICAgLy8gSWYgbnVsbE9uRXhpdCB0aGVuIHJldHVybiBudWxsIGlmIG5leHRFbGVtZW50IGlzIG51bGxcbiAgICBpZiAobnVsbE9uRXhpdCkge1xuICAgICAgcmV0dXJuIG5leHRFbGVtZW50O1xuICAgIH1cblxuICAgIC8vIEVsc2UgcmV0dXJuIGVuZCBvZiB0aGUgbGlzdCBpZiBuZXh0RWxlbWVudCBpcyBudWxsXG4gICAgcmV0dXJuIGNvbGxlY3Rpb25baW5kZXggKyAxXSB8fCBjb2xsZWN0aW9uW2NvbGxlY3Rpb24ubGVuZ3RoIC0gMV07XG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgbG9vcGluZyB0aGVuIGxvb3AgdG8gZW5kIGlmIHByZXZpb3VzRWxlbWVudCBpcyBudWxsXG4gICAgaWYgKGxvb3ApIHtcbiAgICAgIHJldHVybiBwcmV2aW91c0VsZW1lbnQgfHwgY29sbGVjdGlvbltjb2xsZWN0aW9uLmxlbmd0aCAtIDFdO1xuICAgIH1cblxuICAgIC8vIElmIG51bGxPbkV4aXQgdGhlbiByZXR1cm4gbnVsbCBpZiBwcmV2aW91c0VsZW1lbnQgaXMgbnVsbFxuICAgIGlmIChudWxsT25FeGl0KSB7XG4gICAgICByZXR1cm4gcHJldmlvdXNFbGVtZW50O1xuICAgIH1cblxuICAgIC8vIEVsc2UgcmV0dXJuIGJlZ2lubmluZyBvZiB0aGUgbGlzdCBpZiBwcmV2aW91c0VsZW1lbnQgaXMgbnVsbFxuICAgIHJldHVybiBjb2xsZWN0aW9uW2luZGV4IC0gMV0gfHwgY29sbGVjdGlvblswXTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0Rm9jdXNhYmxlRWxlbWVudChuZXh0LCBjdXJyZW50RWxlbWVudCkge1xuICBsZXQgaW5jbHVkZUNvbnRhaW5lZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogdHJ1ZTtcbiAgbGV0IG9ubHlDb250YWluZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IGZhbHNlO1xuICBsZXQgbG9vcCA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogdHJ1ZTtcbiAgbGV0IG51bGxPbkV4aXQgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IGZhbHNlO1xuICBjb25zdCBjb250YWluZXIgPSBpbmNsdWRlQ29udGFpbmVkICYmIG9ubHlDb250YWluZWQgPyBjdXJyZW50RWxlbWVudCA6IGRvY3VtZW50O1xuICBjb25zdCBmb2N1c2FibGUgPSBnZXRWaXNpYmxlRm9jdXNhYmxlRWxlbWVudHMoY29udGFpbmVyLCBpbmNsdWRlQ29udGFpbmVkLCBjdXJyZW50RWxlbWVudCk7XG4gIGlmIChmb2N1c2FibGUubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBnZXROZXh0b3JQcmV2aW91cyhmb2N1c2FibGUsIGN1cnJlbnRFbGVtZW50LCBsb29wLCBuZXh0LCBudWxsT25FeGl0KTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXROZXh0Rm9jdXNhYmxlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG4gIHJldHVybiBnZXRGb2N1c2FibGVFbGVtZW50KHRydWUsIC4uLmFyZ3MpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFByZXZpb3VzRm9jdXNhYmxlKCkge1xuICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gIH1cbiAgcmV0dXJuIGdldEZvY3VzYWJsZUVsZW1lbnQoZmFsc2UsIC4uLmFyZ3MpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldExhc3RGb2N1c2FibGUoY29udGFpbmVyKSB7XG4gIHJldHVybiBsYXN0KGdldFZpc2libGVGb2N1c2FibGVFbGVtZW50cyhjb250YWluZXIpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRGaXJzdEZvY3VzYWJsZShjb250YWluZXIpIHtcbiAgcmV0dXJuIGZpcnN0KGdldFZpc2libGVGb2N1c2FibGVFbGVtZW50cyhjb250YWluZXIpKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./util/getFocusableElements.js\n')}}]);