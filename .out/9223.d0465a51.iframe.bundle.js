"use strict";(self.webpackChunk_folio_stripes_components=self.webpackChunk_folio_stripes_components||[]).push([[9223],{"./lib/Datepicker/Datepicker.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export defaultOutputFormatter */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/react-intl/lib/src/components/message.js");\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/react-intl/lib/src/components/injectIntl.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/moment-timezone/index.js");\n/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_uniqueId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/lodash/uniqueId.js");\n/* harmony import */ var lodash_uniqueId__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqueId__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/lodash/pick.js");\n/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _util_RootCloseWrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./util/RootCloseWrapper.js");\n/* harmony import */ var _util_nativeChangeFieldValue__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./util/nativeChangeFieldValue.js");\n/* harmony import */ var _FormField__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./lib/FormField/FormField.js");\n/* harmony import */ var _Popper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./lib/Popper/Popper.js");\n/* harmony import */ var _IconButton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./lib/IconButton/IconButton.js");\n/* harmony import */ var _TextField__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./lib/TextField/TextField.js");\n/* harmony import */ var _Calendar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./lib/Datepicker/Calendar.js");\n/* harmony import */ var _Calendar_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./lib/Datepicker/Calendar.css");\n/* harmony import */ var _util_dateTimeUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./util/dateTimeUtils.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst pickDataProps = props => lodash_pick__WEBPACK_IMPORTED_MODULE_3___default()(props, (v, key) => key.indexOf(\'data-test\') !== -1);\n\n// Controls the formatting from the value prop to what displays in the UI.\n// need to judge the breakage factor in adopting a spread syntax for these parameters...\nconst defaultParser = (value, timeZone, uiFormat, outputFormats) => {\n  if (!value || value === \'\') {\n    return value;\n  }\n  const offsetRegex = /T[\\d.:]+[+-][\\d]+$/;\n  const offsetRE2 = /T[\\d:]+[-+][\\d:]+\\d{2}$/; // sans milliseconds\n  let inputMoment;\n  // if date string contains a utc offset, we can parse it as utc time and convert it to selected timezone.\n  if (offsetRegex.test(value) || offsetRE2.test(value)) {\n    inputMoment = moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().tz(value, timeZone);\n  } else {\n    inputMoment = moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().tz(value, [uiFormat, ...outputFormats], timeZone);\n  }\n  const inputValue = inputMoment.format(uiFormat);\n  return inputValue;\n};\n\n/**\n * defaultOutputFormatter\n * Controls the formatting from the value prop/input to what is relayed in the onChange event.\n * This function has two responsibilities:\n *   1. use `backendDateStandard` to format `value`\n *   2. convert value to Arabic/Latn digits (0-9)\n *\n * The first responsibility is pretty obvious, but the second one is subtle,\n * implied but never clearly stated in API documentation. Dates are passed\n * as strings in API requests and are then interpreted by the backend as Dates.\n * To be so interpretable, they must conform to the expected formatted AND use\n * the expected numeral system.\n *\n * This function allows the format to be changed with `backendDateStandard`.\n * To change the numeral system, pass a function as `outputFormatter`, which\n * gives you control over both the format and the numeral system.\n *\n * @returns {string} 7-bit ASCII\n */\nconst defaultOutputFormatter = _ref => {\n  let {\n    backendDateStandard,\n    value,\n    uiFormat,\n    outputFormats,\n    timeZone\n  } = _ref;\n  if (!value || value === \'\') {\n    return value;\n  }\n  const parsed = new (moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().tz)(value, [uiFormat, ...outputFormats], timeZone); // eslint-disable-line\n\n  if (/8601/.test(backendDateStandard)) {\n    return parsed.toISOString();\n  }\n\n  // Use `.locale(\'en\')` before `.format(...)` to get Arabic/"Latn" numerals.\n  // otherwise, a locale like ar-SA or any locale with a "-u-nu-..." subtag\n  // can give us non-Arabic (non-"Latn") numerals, and in such a locale the\n  // formatter "YYYY-MM-DD" can give us output like this: ١٦‏/٠٧‏/٢٠٢١\n  // i.e. we get year-month-day but in non-Arabic numerals.\n  //\n  // Additional details about numbering systems at\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/numberingSystem\n  // and about how the locale string may be parsed at\n  // https://www.rfc-editor.org/rfc/rfc5646.html\n\n  // for support of the RFC2822 format (rare thus far and support may soon be deprecated.)\n  if (/2822/.test(backendDateStandard)) {\n    const DATE_RFC2822 = \'ddd, DD MMM YYYY HH:mm:ss ZZ\';\n    return parsed.locale(\'en\').format(DATE_RFC2822);\n  }\n\n  // if a localized string dateformat has been passed, normalize the date first...\n  // otherwise, localized strings could be submitted to the backend.\n  const normalizedDate = moment_timezone__WEBPACK_IMPORTED_MODULE_1___default().utc(value, [uiFormat, ...outputFormats]);\n  return new (moment_timezone__WEBPACK_IMPORTED_MODULE_1___default())(normalizedDate, \'YYYY-MM-DD\').locale(\'en\').format(backendDateStandard); // eslint-disable-line\n};\nconst propTypes = {\n  autoFocus: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  backendDateStandard: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  date: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n  dateFormat: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  exclude: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  hideOnChoose: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  id: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  input: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n  inputRef: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func)]),\n  intl: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n  label: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().node),\n  locale: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  meta: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n  modifiers: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n  onBlur: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  onFocus: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  onSetDate: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  outputBackendValue: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  outputFormatter: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  parser: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  placement: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOf(_Popper__WEBPACK_IMPORTED_MODULE_7__/* .AVAILABLE_PLACEMENTS */ .ps),\n  readOnly: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  required: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  screenReaderMessage: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  showCalendar: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  timeZone: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  useFocus: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  useInput: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  usePortal: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n  value: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)\n};\nconst getBackendDateStandard = (standard, use) => {\n  if (!use) return undefined;\n  if (standard === \'ISO8601\') return [\'YYYY-MM-DDTHH:mm:ss.sssZ\', \'YYYY-MM-DDTHH:mm:ssZ\'];\n  if (standard === \'RFC2822\') return [\'ddd, DD MMM YYYY HH:mm:ss ZZ\'];\n  return [standard, \'YYYY-MM-DDTHH:mm:ss.sssZ\', \'ddd, DD MMM YYYY HH:mm:ss ZZ\'];\n};\nconst Datepicker = _ref2 => {\n  let {\n    autoFocus = false,\n    backendDateStandard = \'ISO8601\',\n    disabled,\n    dateFormat,\n    exclude,\n    hideOnChoose = true,\n    id,\n    intl,\n    locale,\n    modifiers = {},\n    onBlur,\n    onChange,\n    onFocus,\n    outputBackendValue = true,\n    outputFormatter = defaultOutputFormatter,\n    parser = defaultParser,\n    placement = \'bottom\',\n    readOnly,\n    screenReaderMessage = \'\',\n    showCalendar: showCalendarProp,\n    timeZone: timeZoneProp,\n    // eslint-disable-line no-unused-vars\n    useFocus = true,\n    useInput,\n    usePortal,\n    value: valueProp,\n    inputRef,\n    ...props\n  } = _ref2;\n  const format = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(dateFormat || (0,_util_dateTimeUtils__WEBPACK_IMPORTED_MODULE_8__/* .getLocaleDateFormat */ .gq)({\n    intlLocale: intl.locale,\n    localeProp: locale,\n    intl\n  })).current;\n  const [datePair, updateDatePair] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    dateString: typeof valueProp !== \'undefined\' ? parser(valueProp,\n    // value\n    timeZoneProp || intl.timeZone,\n    // timezone\n    format,\n    // uiFormat\n    getBackendDateStandard(backendDateStandard, true) // outputFormats\n    ) : null,\n    formatted: typeof valueProp !== \'undefined\' ? outputFormatter({\n      backendDateStandard,\n      value: valueProp,\n      timeZone: timeZoneProp || intl.timeZone,\n      uiFormat: format,\n      outputFormats: getBackendDateStandard(backendDateStandard, true)\n    }) : null\n  });\n  // since updating the Datepair object isn\'t quite enough to prompt a re-render when its only partially\n  // updated, need to maintain a 2nd field containing only the displayed value.\n  // this resolves issue with the clearIcon not showing up.\n  const [displayedValue, updateDisplayed] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(datePair.dateString);\n  const [showCalendar, setShowCalendar] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(showCalendarProp);\n  const input = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const pickerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const blurTimeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const hiddenInput = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const testId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(id || lodash_uniqueId__WEBPACK_IMPORTED_MODULE_2___default()(\'dp-\')).current;\n  const calendarFirstField = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const container = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const payload = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(datePair);\n  let maybeUpdateValue;\n\n  // handle value changes that originate outside of the component.\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (typeof valueProp !== \'undefined\' && valueProp !== datePair.dateString && valueProp !== datePair.formatted) {\n      payload.current = Object.assign(payload.current, maybeUpdateValue(valueProp));\n      (0,_util_nativeChangeFieldValue__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .A)(input, false, payload.current.dateString);\n    }\n  }, [valueProp, maybeUpdateValue, datePair.dateString, datePair.formatted]);\n  maybeUpdateValue = value => {\n    if (value === \'\') {\n      const blankDates = {\n        dateString: \'\',\n        formatted: \'\'\n      };\n      updateDatePair(blankDates);\n      updateDisplayed(\'\');\n      return blankDates;\n    }\n\n    // use strict mode to check validity  - incomplete dates, anything not conforming to the format will be invalid\n    const backendStandard = getBackendDateStandard(backendDateStandard, outputBackendValue);\n    const valueMoment = new (moment_timezone__WEBPACK_IMPORTED_MODULE_1___default())(\n    // eslint-disable-line new-cap\n    value, [format, ...backendStandard],\n    // pass array of possible formats ()\n    true);\n    const isValid = valueMoment.isValid();\n    let dates;\n\n    // otherwise parse the value and update the datestring and the formatted date...\n    if (isValid) {\n      const parsed = parser(value, timeZoneProp || intl.timeZone, format,\n      // uiFormat\n      backendStandard // outputFormat\n      );\n      if (parsed !== datePair.dateString) {\n        const hiddenDate = outputFormatter({\n          backendDateStandard,\n          value: parsed,\n          uiFormat: format,\n          outputFormats: backendStandard,\n          timeZone: timeZoneProp || intl.timeZone\n        });\n        dates = {\n          dateString: parsed,\n          formatted: hiddenDate\n        };\n        updateDatePair(current => {\n          const newDatePair = Object.assign(current, dates);\n          return newDatePair;\n        });\n        updateDisplayed(dates.dateString);\n        return dates;\n      }\n      return {};\n    } else if (value !== datePair.dateString) {\n      dates = {\n        dateString: value,\n        formatted: \'\'\n      };\n      updateDatePair(current => {\n        const newDatePair = Object.assign(current, dates);\n        return newDatePair;\n      });\n      updateDisplayed(dates.dateString);\n      return dates;\n    }\n    return {};\n  };\n  const setFromCalendar = value => {\n    (0,_util_nativeChangeFieldValue__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .A)(input, hideOnChoose, value);\n    if (hideOnChoose) {\n      setShowCalendar(false);\n    }\n  };\n\n  // for vanilla react/non-final-form implementations that just get the input value.\n  const internalHandleChange = e => {\n    payload.current = Object.assign(payload.current, maybeUpdateValue(e.target.value));\n    if ((!useInput || !outputBackendValue) && onChange) {\n      onChange(e, e.target.value, payload.current.formatted);\n    } else if (payload.current.formatted !== hiddenInput.current.value) {\n      (0,_util_nativeChangeFieldValue__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .A)(hiddenInput, false, payload.current.formatted);\n    }\n  };\n\n  // for final-form so it can have a native change event rather than a fabricated thing...\n  const onChangeFormatted = e => {\n    if (useInput && outputBackendValue && onChange) {\n      const {\n        dateString,\n        formatted\n      } = payload.current;\n      onChange(e, formatted, dateString);\n    }\n  };\n  const datePickerIsFocused = () => {\n    if (container.current.contains(document.activeElement) && document.activeElement !== document.body) {\n      if (pickerRef.current) {\n        return pickerRef.current.contains(document.activeElement);\n      }\n      return true;\n    }\n    return false;\n  };\n  const internalClearDate = () => {\n    updateDatePair({\n      dateString: \'\',\n      formatted: \'\'\n    });\n    (0,_util_nativeChangeFieldValue__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .A)(input, true, \'\');\n  };\n  const toggleCalendar = () => {\n    setShowCalendar(cur => !cur);\n  };\n  const queueBlur = e => {\n    blurTimeout.current = setTimeout(() => {\n      if (onBlur) {\n        if (useInput) {\n          onBlur({\n            target: outputBackendValue ? hiddenInput.current : input.current,\n            stopPropagation: () => {},\n            preventDefault: () => {},\n            defaultPrevented: true\n          });\n        } else {\n          onBlur(e);\n        }\n      }\n    });\n  };\n  const cancelBlur = () => {\n    clearTimeout(blurTimeout.current);\n  };\n  const handleInternalBlur = e => {\n    e.preventDefault();\n    queueBlur(e);\n  };\n  const handleInternalFocus = e => {\n    cancelBlur();\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n  const handleRootClose = e => {\n    if (!container.current.contains(e.target) || !pickerRef.current.contains(e.target)) {\n      if (!datePickerIsFocused()) {\n        setShowCalendar(false);\n      }\n    }\n  };\n  const handleRequestClose = () => {\n    input.current?.focus(); // eslint-disable-line no-unused-expressions\n    setShowCalendar(false);\n  };\n  const renderCalendar = () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_util_RootCloseWrapper__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .A, {\n    onRootClose: handleRootClose,\n    ref: pickerRef,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_Calendar__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .A, {\n      onSetDate: setFromCalendar,\n      selectedDate: datePair.dateString,\n      dateFormat: format,\n      firstFieldRef: calendarFirstField,\n      onFocus: handleInternalFocus,\n      onRequestClose: handleRequestClose,\n      rootRef: pickerRef,\n      locale: locale || intl.locale,\n      exclude: exclude,\n      id: testId\n    })\n  });\n\n  // renders clear button and calendar button\n  const renderEndElement = () => {\n    if (readOnly || disabled) return null;\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n      children: [displayedValue && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .A, {\n        id: "stripes-components.clearFieldValue",\n        children: _ref3 => {\n          let [ariaLabel] = _ref3;\n          return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_IconButton__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .A, {\n            "data-test-clear": true,\n            onClick: internalClearDate,\n            "aria-label": ariaLabel,\n            id: `datepicker-clear-button-${testId}`,\n            icon: "times-circle-solid"\n          }, "clearButton");\n        }\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_intl__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .A, {\n        id: "stripes-components.showOrHideDatepicker",\n        children: _ref4 => {\n          let [ariaLabel] = _ref4;\n          return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_IconButton__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .A, {\n            "data-test-calendar-button": true,\n            onClick: toggleCalendar,\n            "aria-label": ariaLabel,\n            "aria-haspopup": "true",\n            "aria-expanded": !!showCalendar,\n            id: `datepicker-toggle-calendar-button-${testId}`,\n            icon: "calendar"\n          });\n        }\n      })]\n    });\n  };\n  const content = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n    className: _Calendar_css__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A.container,\n    ref: container,\n    "data-test-datepicker-container": true,\n    onFocus: handleInternalFocus,\n    onBlur: handleInternalBlur,\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_TextField__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .A, {\n      ...props,\n      id: testId,\n      readOnly: readOnly,\n      disabled: disabled,\n      value: datePair.dateString,\n      onChange: internalHandleChange,\n      endControl: renderEndElement(),\n      hasClearIcon: false,\n      inputRef: element => {\n        input.current = element;\n        if (typeof inputRef === \'object\') inputRef.current = element;\n        if (typeof inputRef === \'function\') inputRef(element);\n      },\n      placeholder: format\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("input", {\n      "data-test-datepicker-hidden-input": true,\n      type: "text",\n      hidden: true,\n      value: datePair.formatted,\n      onChange: onChangeFormatted,\n      ref: hiddenInput\n    })]\n  });\n  const portalElem = usePortal ? document.getElementById(\'OverlayContainer\') : null;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n    className: _Calendar_css__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .A.container,\n    ...pickDataProps(props),\n    children: [content, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_Popper__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Ay, {\n      placement: placement,\n      isOpen: showCalendar,\n      anchorRef: container,\n      onToggle: toggleCalendar,\n      portal: usePortal && portalElem,\n      modifiers: {\n        offset: {\n          enabled: true,\n          offset: \'0,10\'\n        },\n        ...modifiers\n      },\n      children: renderCalendar()\n    })]\n  });\n};\nDatepicker.displayName = "Datepicker";\nDatepicker.propTypes = propTypes;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_FormField__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .A)((0,react_intl__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Ay)(Datepicker), _ref5 => {\n  let {\n    input,\n    meta\n  } = _ref5;\n  return {\n    onBlur: input?.onBlur,\n    onFocus: input?.onFocus,\n    error: meta?.touched ? meta.error : undefined,\n    useInput: true\n  };\n}));\n;\nDatepicker.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "Datepicker",\n  "props": {\n    "autoFocus": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "backendDateStandard": {\n      "defaultValue": {\n        "value": "\'ISO8601\'",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "hideOnChoose": {\n      "defaultValue": {\n        "value": "true",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "modifiers": {\n      "defaultValue": {\n        "value": "{}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "outputBackendValue": {\n      "defaultValue": {\n        "value": "true",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "outputFormatter": {\n      "defaultValue": {\n        "value": "({ backendDateStandard, value, uiFormat, outputFormats, timeZone }) => {\\n  if (!value || value === \'\') { return value; }\\n  const parsed = new moment.tz(value, [uiFormat, ...outputFormats], timeZone); // eslint-disable-line\\n\\n  if (/8601/.test(backendDateStandard)) {\\n    return parsed.toISOString();\\n  }\\n\\n  // Use `.locale(\'en\')` before `.format(...)` to get Arabic/\\"Latn\\" numerals.\\n  // otherwise, a locale like ar-SA or any locale with a \\"-u-nu-...\\" subtag\\n  // can give us non-Arabic (non-\\"Latn\\") numerals, and in such a locale the\\n  // formatter \\"YYYY-MM-DD\\" can give us output like this: ١٦‏/٠٧‏/٢٠٢١\\n  // i.e. we get year-month-day but in non-Arabic numerals.\\n  //\\n  // Additional details about numbering systems at\\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/numberingSystem\\n  // and about how the locale string may be parsed at\\n  // https://www.rfc-editor.org/rfc/rfc5646.html\\n\\n  // for support of the RFC2822 format (rare thus far and support may soon be deprecated.)\\n  if (/2822/.test(backendDateStandard)) {\\n    const DATE_RFC2822 = \'ddd, DD MMM YYYY HH:mm:ss ZZ\';\\n    return parsed.locale(\'en\').format(DATE_RFC2822);\\n  }\\n\\n  // if a localized string dateformat has been passed, normalize the date first...\\n  // otherwise, localized strings could be submitted to the backend.\\n  const normalizedDate = moment.utc(value, [uiFormat, ...outputFormats]);\\n\\n  return new moment(normalizedDate, \'YYYY-MM-DD\').locale(\'en\').format(backendDateStandard); // eslint-disable-line\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "parser": {\n      "defaultValue": {\n        "value": "(value, timeZone, uiFormat, outputFormats) => {\\n  if (!value || value === \'\') { return value; }\\n\\n  const offsetRegex = /T[\\\\d.:]+[+-][\\\\d]+$/;\\n  const offsetRE2 = /T[\\\\d:]+[-+][\\\\d:]+\\\\d{2}$/; // sans milliseconds\\n  let inputMoment;\\n  // if date string contains a utc offset, we can parse it as utc time and convert it to selected timezone.\\n  if (offsetRegex.test(value) || offsetRE2.test(value)) {\\n    inputMoment = moment.tz(value, timeZone);\\n  } else {\\n    inputMoment = moment.tz(value, [uiFormat, ...outputFormats], timeZone);\\n  }\\n  const inputValue = inputMoment.format(uiFormat);\\n  return inputValue;\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "placement": {\n      "defaultValue": {\n        "value": "\'bottom\'",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "enum",\n        "value": [{\n          "value": "\'bottom\'",\n          "computed": false\n        }, {\n          "value": "\'top\'",\n          "computed": false\n        }, {\n          "value": "\'left\'",\n          "computed": false\n        }, {\n          "value": "\'right\'",\n          "computed": false\n        }, {\n          "value": "\'top-start\'",\n          "computed": false\n        }, {\n          "value": "\'top-end\'",\n          "computed": false\n        }, {\n          "value": "\'bottom-start\'",\n          "computed": false\n        }, {\n          "value": "\'bottom-end\'",\n          "computed": false\n        }, {\n          "value": "\'left-start\'",\n          "computed": false\n        }, {\n          "value": "\'left-end\'",\n          "computed": false\n        }, {\n          "value": "\'right-start\'",\n          "computed": false\n        }, {\n          "value": "\'right-end\'",\n          "computed": false\n        }, {\n          "value": "\'auto\'",\n          "computed": false\n        }, {\n          "value": "\'auto-start\'",\n          "computed": false\n        }, {\n          "value": "\'auto-end\'",\n          "computed": false\n        }]\n      },\n      "required": false\n    },\n    "screenReaderMessage": {\n      "defaultValue": {\n        "value": "\'\'",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "useFocus": {\n      "defaultValue": {\n        "value": "true",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "date": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "dateFormat": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "disabled": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "exclude": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "input": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "inputRef": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "object"\n        }, {\n          "name": "func"\n        }]\n      },\n      "required": false\n    },\n    "intl": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "label": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "locale": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "meta": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "onBlur": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onChange": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onFocus": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onSetDate": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "readOnly": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "required": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "showCalendar": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "timeZone": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "useInput": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "usePortal": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "value": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/Datepicker/Datepicker.js\n')}}]);