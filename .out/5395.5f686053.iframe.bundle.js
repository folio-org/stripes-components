"use strict";(self.webpackChunk_folio_stripes_components=self.webpackChunk_folio_stripes_components||[]).push([[5395],{"./lib/MultiColumnList/stories/service.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SI: () => (/* binding */ asyncGenerateSparse),\n/* harmony export */   d2: () => (/* binding */ syncGenerate),\n/* harmony export */   eo: () => (/* binding */ asyncGenerate)\n/* harmony export */ });\n/* unused harmony export syncGenerateSparse */\n/* harmony import */ var faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/faker/index.js");\n/* harmony import */ var faker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(faker__WEBPACK_IMPORTED_MODULE_0__);\n\nconst baseGenerator = (start, res, i) => ({\n  active: faker__WEBPACK_IMPORTED_MODULE_0___default().random.boolean(),\n  title: faker__WEBPACK_IMPORTED_MODULE_0___default().random.words(),\n  index: (start || 0) + res.length,\n  date: faker__WEBPACK_IMPORTED_MODULE_0___default().date.past().toString(),\n  email: faker__WEBPACK_IMPORTED_MODULE_0___default().internet.email(),\n  status: faker__WEBPACK_IMPORTED_MODULE_0___default().random.boolean(),\n  phone: faker__WEBPACK_IMPORTED_MODULE_0___default().phone.phoneNumber(),\n  name: faker__WEBPACK_IMPORTED_MODULE_0___default().name.findName()\n});\nconst baseGenerateSparse = (start, res, i) => ({\n  active: faker__WEBPACK_IMPORTED_MODULE_0___default().random.boolean(),\n  title: faker__WEBPACK_IMPORTED_MODULE_0___default().random.words(),\n  index: start + i + 1,\n  date: faker__WEBPACK_IMPORTED_MODULE_0___default().date.past().toString(),\n  email: faker__WEBPACK_IMPORTED_MODULE_0___default().internet.email()\n});\nfunction syncGenerate(n) {\n  let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let generator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : baseGenerator;\n  const res = [];\n  let i = start;\n  while (i < n) {\n    res.push(generator(start, res, i));\n    i++;\n  }\n  return res;\n}\nfunction asyncGenerate(n, start) {\n  let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let test = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let generator = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : baseGenerator;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const res = syncGenerate(n, start, generator);\n      resolve(res);\n    }, test ? 0 : timeout);\n  });\n}\nfunction syncGenerateSparse(n, start, length) {\n  let generator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : baseGenerateSparse;\n  const res = new Array(start);\n  let i = 0;\n  while (i < n) {\n    res.push(generator(start, res, i));\n    i++;\n  }\n  return res;\n}\nfunction asyncGenerateSparse(n, start, length) {\n  let timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let generator = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : baseGenerator;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const res = syncGenerateSparse(n, start, length, generator);\n      resolve(res);\n    }, timeout);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvTXVsdGlDb2x1bW5MaXN0L3N0b3JpZXMvc2VydmljZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2xpby9zdHJpcGVzLWNvbXBvbmVudHMvLi9saWIvTXVsdGlDb2x1bW5MaXN0L3N0b3JpZXMvc2VydmljZS5qcz9iY2ZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5jb25zdCBiYXNlR2VuZXJhdG9yID0gKHN0YXJ0LCByZXMsIGkpID0+ICh7XG4gIGFjdGl2ZTogZmFrZXIucmFuZG9tLmJvb2xlYW4oKSxcbiAgdGl0bGU6IGZha2VyLnJhbmRvbS53b3JkcygpLFxuICBpbmRleDogKHN0YXJ0IHx8IDApICsgcmVzLmxlbmd0aCxcbiAgZGF0ZTogZmFrZXIuZGF0ZS5wYXN0KCkudG9TdHJpbmcoKSxcbiAgZW1haWw6IGZha2VyLmludGVybmV0LmVtYWlsKCksXG4gIHN0YXR1czogZmFrZXIucmFuZG9tLmJvb2xlYW4oKSxcbiAgcGhvbmU6IGZha2VyLnBob25lLnBob25lTnVtYmVyKCksXG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKVxufSk7XG5jb25zdCBiYXNlR2VuZXJhdGVTcGFyc2UgPSAoc3RhcnQsIHJlcywgaSkgPT4gKHtcbiAgYWN0aXZlOiBmYWtlci5yYW5kb20uYm9vbGVhbigpLFxuICB0aXRsZTogZmFrZXIucmFuZG9tLndvcmRzKCksXG4gIGluZGV4OiBzdGFydCArIGkgKyAxLFxuICBkYXRlOiBmYWtlci5kYXRlLnBhc3QoKS50b1N0cmluZygpLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKVxufSk7XG5leHBvcnQgZnVuY3Rpb24gc3luY0dlbmVyYXRlKG4pIHtcbiAgbGV0IHN0YXJ0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICBsZXQgZ2VuZXJhdG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBiYXNlR2VuZXJhdG9yO1xuICBjb25zdCByZXMgPSBbXTtcbiAgbGV0IGkgPSBzdGFydDtcbiAgd2hpbGUgKGkgPCBuKSB7XG4gICAgcmVzLnB1c2goZ2VuZXJhdG9yKHN0YXJ0LCByZXMsIGkpKTtcbiAgICBpKys7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3luY0dlbmVyYXRlKG4sIHN0YXJ0KSB7XG4gIGxldCB0aW1lb3V0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAwO1xuICBsZXQgdGVzdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogZmFsc2U7XG4gIGxldCBnZW5lcmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGJhc2VHZW5lcmF0b3I7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IHJlcyA9IHN5bmNHZW5lcmF0ZShuLCBzdGFydCwgZ2VuZXJhdG9yKTtcbiAgICAgIHJlc29sdmUocmVzKTtcbiAgICB9LCB0ZXN0ID8gMCA6IHRpbWVvdXQpO1xuICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzeW5jR2VuZXJhdGVTcGFyc2Uobiwgc3RhcnQsIGxlbmd0aCkge1xuICBsZXQgZ2VuZXJhdG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBiYXNlR2VuZXJhdGVTcGFyc2U7XG4gIGNvbnN0IHJlcyA9IG5ldyBBcnJheShzdGFydCk7XG4gIGxldCBpID0gMDtcbiAgd2hpbGUgKGkgPCBuKSB7XG4gICAgcmVzLnB1c2goZ2VuZXJhdG9yKHN0YXJ0LCByZXMsIGkpKTtcbiAgICBpKys7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3luY0dlbmVyYXRlU3BhcnNlKG4sIHN0YXJ0LCBsZW5ndGgpIHtcbiAgbGV0IHRpbWVvdXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDA7XG4gIGxldCBnZW5lcmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGJhc2VHZW5lcmF0b3I7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IHJlcyA9IHN5bmNHZW5lcmF0ZVNwYXJzZShuLCBzdGFydCwgbGVuZ3RoLCBnZW5lcmF0b3IpO1xuICAgICAgcmVzb2x2ZShyZXMpO1xuICAgIH0sIHRpbWVvdXQpO1xuICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/MultiColumnList/stories/service.js\n')},"./lib/Selection/Selection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ lib_Selection_Selection)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("./node_modules/react/index.js");\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__("./node_modules/prop-types/index.js");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/prop-types-extra/lib/index.js\nvar lib = __webpack_require__("./node_modules/prop-types-extra/lib/index.js");\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/src/components/useIntl.js\nvar useIntl = __webpack_require__("./node_modules/react-intl/lib/src/components/useIntl.js");\n// EXTERNAL MODULE: ./node_modules/downshift/dist/downshift.esm.js + 1 modules\nvar downshift_esm = __webpack_require__("./node_modules/downshift/dist/downshift.esm.js");\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__("./node_modules/classnames/index.js");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("./node_modules/lodash/isEqual.js");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n// EXTERNAL MODULE: ./node_modules/lodash/debounce.js\nvar debounce = __webpack_require__("./node_modules/lodash/debounce.js");\nvar debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);\n// EXTERNAL MODULE: ./lib/FormField/FormField.js\nvar FormField = __webpack_require__("./lib/FormField/FormField.js");\n// EXTERNAL MODULE: ./lib/FormField/parseMeta.js\nvar parseMeta = __webpack_require__("./lib/FormField/parseMeta.js");\n;// ./lib/Selection/utils.js\n/* filterOptionList\n *   conforms to shapes of options.\n *   standard options are { value, label }\n *   grouped options are { label, options } where options contains standard options.\n */\nconst filterOptionList = function (value) {\n  let dataOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const valueRE = new RegExp(`^${value}`, \'i\');\n  const baseFilter = o => valueRE.test(o.label);\n  // if items have an \'options\' field, filter those items and return the dataOptions group with the\n  // results inserted.\n  const grouped = dataOptions.some(o => Object.prototype.hasOwnProperty.call(o, \'options\'));\n  if (grouped) {\n    return dataOptions.reduce((options, opt) => {\n      // global, ungrouped options\n      if (Object.prototype.hasOwnProperty.call(opt, \'value\')) {\n        if (valueRE.test(opt.label)) {\n          return [...options, opt];\n        }\n      } else if (Object.prototype.hasOwnProperty.call(opt, \'options\')) {\n        const filteredOptions = opt.options.filter(baseFilter);\n        if (filteredOptions.length > 0) {\n          return [...options, {\n            ...opt,\n            options: filteredOptions\n          }];\n        }\n      }\n      return options;\n    }, []);\n  }\n  const result = [];\n  for (let i = 0; i < dataOptions.length; i++) {\n    if (baseFilter(dataOptions[i])) {\n      result.push(dataOptions[i]);\n    }\n  }\n  return result;\n};\nconst flattenOptionList = dataOptions => {\n  return dataOptions ? dataOptions.flatMap(opt => {\n    // global, ungrouped options\n    if (Object.prototype.hasOwnProperty.call(opt, \'value\')) {\n      return opt;\n    } else if (Object.prototype.hasOwnProperty.call(opt, \'options\')) {\n      const {\n        label,\n        options\n      } = opt;\n      return [{\n        label\n      }, ...options];\n    }\n    return undefined;\n  }) : [];\n};\n\n// find the value object from dataOptions\nconst getSelectedObject = function (value) {\n  let dataOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (dataOptions.length > 0) {\n    if (typeof value !== \'undefined\') {\n      const flattenedOptions = flattenOptionList(dataOptions);\n      return flattenedOptions.find(o => o.value === value) || null;\n    }\n  }\n  return null;\n};\n\n/** ensureValuedOption\n * returns an option object that contains a \'value\' field or\n * recurses to the next index.\n */\nconst ensureValuedOption = (index, dataOptions) => {\n  if (dataOptions[index]) {\n    if (Object.prototype.hasOwnProperty.call(dataOptions[index], \'value\')) {\n      return dataOptions[index];\n    }\n    return ensureValuedOption(index + 1, dataOptions);\n  }\n  return undefined;\n};\nconst defaultItemToString = item => item?.label;\n\n// removes any option group headers, leaving only selectable options.\nconst reduceOptions = dataOptions => {\n  if (dataOptions) {\n    return dataOptions.reduce((options, op) => {\n      if (op.value) options.push(op);\n      if (op.options) return [...options, ...op.options];\n      return options;\n    }, []);\n  }\n  return [];\n};\n\n// reconcile index of rendered item to items that are only selectable.\nconst reconcileReducedIndex = (item, items) => {\n  return items.findIndex(i => i === item);\n};\n// EXTERNAL MODULE: ./node_modules/react-overlays/esm/Portal.js + 1 modules\nvar Portal = __webpack_require__("./node_modules/react-overlays/esm/Portal.js");\n// EXTERNAL MODULE: ./lib/Selection/Selection.css\nvar Selection = __webpack_require__("./lib/Selection/Selection.css");\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__("./node_modules/react/jsx-runtime.js");\n;// ./lib/Selection/SelectionList.js\n\n\n\n\nconst SelectionList = _ref => {\n  let {\n    getMenuProps,\n    labelId,\n    listMaxHeight,\n    renderOptions,\n    isOpen\n  } = _ref;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("ul", {\n    ...getMenuProps({\n      \'aria-labelledby\': labelId\n    }),\n    style: {\n      maxHeight: listMaxHeight\n    },\n    className: Selection/* default */.A.selectionList,\n    children: isOpen && renderOptions()\n  });\n};\nSelectionList.displayName = "SelectionList";\nSelectionList.propTypes = {\n  getMenuProps: (prop_types_default()).func,\n  isOpen: (prop_types_default()).bool,\n  labelId: (prop_types_default()).string,\n  listMaxHeight: (prop_types_default()).string,\n  renderOptions: (prop_types_default()).func\n};\n/* harmony default export */ const Selection_SelectionList = (SelectionList);\n;\nSelectionList.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "SelectionList",\n  "props": {\n    "getMenuProps": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "isOpen": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "labelId": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "listMaxHeight": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "renderOptions": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    }\n  }\n};\n// EXTERNAL MODULE: ./lib/Popper/Popper.js\nvar Popper = __webpack_require__("./lib/Popper/Popper.js");\n;// ./lib/Selection/SelectionOverlay.js\n\n\n\n\n\n\n\nconst SelectionOverlay = _ref => {\n  let {\n    controlRef,\n    getMenuProps,\n    id,\n    isOpen,\n    listMaxHeight,\n    onChangeFilterValue,\n    optionAlignment,\n    popper,\n    renderFilterInput,\n    renderOptions,\n    usePortal,\n    width,\n    ...props\n  } = _ref;\n  const containerRef = (0,react.useRef)(null);\n  const filterRef = (0,react.useRef)(null);\n  const getPortalElement = (0,react.useRef)(() => document.getElementById(\'OverlayContainer\')).current;\n  (0,react.useEffect)(() => {\n    // if the overlay is open and focus is outside of it, move focus to the filter.\n    if (isOpen && containerRef.current?.matches(\':not(:focus-within)\')) {\n      filterRef.current?.focus();\n    }\n\n    // if overlay is closing and focus is within the overlay, move focus to the Selection control.\n    if (!isOpen && containerRef.current?.matches(\':focus-within\')) {\n      onChangeFilterValue(\'\');\n      controlRef.current?.focus();\n    }\n  }, [isOpen, onChangeFilterValue, controlRef]);\n  const atSmallMedia = window.matchMedia(\'(max-width: 640px)\').matches;\n  const selectList = /*#__PURE__*/(0,jsx_runtime.jsx)(Selection_SelectionList, {\n    renderOptions: renderOptions,\n    listMaxHeight: listMaxHeight,\n    optionAlignment: optionAlignment,\n    getMenuProps: getMenuProps,\n    isOpen: isOpen,\n    ...props\n  });\n  if (atSmallMedia) {\n    return /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n      ref: containerRef,\n      children: isOpen && /*#__PURE__*/(0,jsx_runtime.jsx)(Portal/* default */.A, {\n        container: getPortalElement(),\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          role: "presentation",\n          className: Selection/* default */.A.selectionMobileBackdrop,\n          onClick: () => {\n            controlRef.current?.focus();\n          },\n          children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n            className: Selection/* default */.A.selectionListRoot,\n            style: {\n              width: \'85vw\'\n            },\n            id: `sl-container-${id}`,\n            children: [renderFilterInput(filterRef), isOpen && selectList]\n          })\n        })\n      })\n    });\n  }\n  const popperProps = {\n    portal: isOpen && usePortal ? getPortalElement() : undefined,\n    modifiers: Popper/* OVERLAY_MODIFIERS */.mF,\n    ...popper\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Popper/* default */.Ay, {\n    isOpen: isOpen,\n    anchorRef: controlRef,\n    hideIfClosed: true,\n    ...popperProps,\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: Selection/* default */.A.selectionListRoot,\n      style: {\n        width\n      },\n      id: `sl-container-${id}`,\n      ref: containerRef,\n      children: [renderFilterInput(filterRef), selectList]\n    })\n  });\n};\nSelectionOverlay.displayName = "SelectionOverlay";\nSelectionOverlay.propTypes = {\n  controlRef: prop_types_default().oneOfType([(prop_types_default()).func, (prop_types_default()).object]),\n  emptyMessage: (prop_types_default()).node,\n  getMenuProps: (prop_types_default()).func,\n  id: (prop_types_default()).string,\n  isOpen: (prop_types_default()).bool,\n  listMaxHeight: (prop_types_default()).string,\n  onChangeFilterValue: (prop_types_default()).func,\n  optionAlignment: (prop_types_default()).string,\n  popper: (prop_types_default()).object,\n  renderFilterInput: (prop_types_default()).func,\n  renderOptions: (prop_types_default()).func,\n  usePortal: (prop_types_default()).bool,\n  width: (prop_types_default()).number\n};\n/* harmony default export */ const Selection_SelectionOverlay = (SelectionOverlay);\n;\nSelectionOverlay.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "SelectionOverlay",\n  "props": {\n    "controlRef": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "func"\n        }, {\n          "name": "object"\n        }]\n      },\n      "required": false\n    },\n    "emptyMessage": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "getMenuProps": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "isOpen": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "listMaxHeight": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "onChangeFilterValue": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "optionAlignment": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "popper": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "renderFilterInput": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "renderOptions": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "usePortal": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "width": {\n      "description": "",\n      "type": {\n        "name": "number"\n      },\n      "required": false\n    }\n  }\n};\n// EXTERNAL MODULE: ./lib/Label/Label.js + 1 modules\nvar Label = __webpack_require__("./lib/Label/Label.js");\n// EXTERNAL MODULE: ./lib/TextField/TextFieldIcon.js\nvar TextFieldIcon = __webpack_require__("./lib/TextField/TextFieldIcon.js");\n// EXTERNAL MODULE: ./lib/Icon/Icon.js + 1 modules\nvar Icon = __webpack_require__("./lib/Icon/Icon.js");\n// EXTERNAL MODULE: ./hooks/useProvidedRefOrCreate/useProvidedRefOrCreate.js\nvar useProvidedRefOrCreate = __webpack_require__("./hooks/useProvidedRefOrCreate/useProvidedRefOrCreate.js");\n// EXTERNAL MODULE: ./lib/sharedStyles/form.css\nvar sharedStyles_form = __webpack_require__("./lib/sharedStyles/form.css");\n// EXTERNAL MODULE: ./lib/Selection/DefaultOptionFormatter.js\nvar DefaultOptionFormatter = __webpack_require__("./lib/Selection/DefaultOptionFormatter.js");\n// EXTERNAL MODULE: ./hooks/useProvidedIdOrCreate/useProvidedIdOrCreate.js\nvar useProvidedIdOrCreate = __webpack_require__("./hooks/useProvidedIdOrCreate/useProvidedIdOrCreate.js");\n;// ./lib/Selection/Selection.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// a rough way to discern if an option is grouped or not - if it finds an index at the top level\n// of dataOptions, it\'s not grouped...\n\nconst optionIsGrouped = (item, dataOptions) => {\n  return dataOptions.findIndex(i => i === item) === -1;\n};\nconst getControlWidth = control => {\n  if (control) {\n    return control.offsetWidth;\n  }\n  return undefined;\n};\nconst getItemClass = (item, i, props) => {\n  const {\n    value\n  } = item;\n  const {\n    selectedItem,\n    highlightedIndex,\n    dataOptions\n  } = props;\n  if (!value) {\n    return;\n  }\n  const cursored = i === highlightedIndex ? \' \' + Selection/* default */.A.cursor : \'\';\n  const selected = value === selectedItem?.value ? \' \' + Selection/* default */.A.selected : \'\';\n  const grouped = optionIsGrouped(item, dataOptions) ? \' \' + Selection/* default */.A.groupedOption : \'\';\n\n  // eslint-disable-next-line consistent-return\n  return `${Selection/* default */.A.option}${cursored}${selected}${grouped}`;\n};\nconst getClass = _ref => {\n  let {\n    dirty,\n    error,\n    marginBottom0,\n    useValidStyle,\n    valid,\n    warning\n  } = _ref;\n  let validationClasses = \'\';\n  validationClasses = classnames_default()({\n    [`${sharedStyles_form/* default */.A.hasFeedback}`]: error || warning\n  }, {\n    [`${sharedStyles_form/* default */.A.hasWarning}`]: warning\n  }, {\n    [`${sharedStyles_form/* default */.A.hasError}`]: error\n  }, {\n    [`${sharedStyles_form/* default */.A.isChanged}`]: dirty\n  }, {\n    [`${sharedStyles_form/* default */.A.isValid}`]: useValidStyle && valid && !error && !warning\n  });\n  return classnames_default()(validationClasses, Selection/* default */.A.selectionControl, sharedStyles_form/* default */.A.formControl, {\n    [`${Selection/* default */.A.marginBottom0}`]: marginBottom0\n  });\n};\n\n/* eslint-disable prefer-arrow-callback */\n\nconst Selection_Selection = _ref2 => {\n  let {\n    asyncFilter = false,\n    autofocus,\n    dataOptions,\n    dirty,\n    disabled,\n    emptyMessage,\n    error,\n    formatter = DefaultOptionFormatter/* default */.A,\n    id,\n    inputRef,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    label,\n    listMaxHeight = \'174px\',\n    loading,\n    loadingMessage = /*#__PURE__*/(0,jsx_runtime.jsx)(Icon/* default */.A, {\n      icon: "spinner-ellipsis"\n    }),\n    marginBottom0,\n    name,\n    onFilter = filterOptionList,\n    optionAlignment,\n    popper,\n    readOnly,\n    readonly,\n    required,\n    useValidStyle = false,\n    usePortal,\n    valid,\n    value,\n    warning,\n    ...rest\n  } = _ref2;\n  const {\n    formatMessage\n  } = (0,useIntl/* default */.A)();\n  const [filterValue, updateFilterValue] = (0,react.useState)(\'\');\n  const [debouncedFilterValue, updateDebouncedFilter] = (0,react.useState)(\'\');\n  const dataLength = (0,react.useRef)(dataOptions?.length || 0);\n  const controlRef = (0,useProvidedRefOrCreate/* default */.A)(inputRef);\n  const awaitingChange = (0,react.useRef)(false);\n  const dbUpdateFilter = (0,react.useRef)(debounce_default()(filter => {\n    updateDebouncedFilter(filter);\n  }, 200)).current;\n  const filterUpdateFn = (0,react.useRef)(function filterUpdater(filter) {\n    updateFilterValue(filter);\n    // debounce updates to the filter for large data sets...\n    dbUpdateFilter(filter);\n  }).current;\n  const filterFn = (0,react.useCallback)(function filter(data) {\n    return onFilter(debouncedFilterValue, data);\n  }, [debouncedFilterValue, onFilter]);\n  const flattenRef = (0,react.useRef)(function flattener(data) {\n    return flattenOptionList(data);\n  }).current;\n  const reduceOptionsRef = (0,react.useRef)(function dataReducer(data) {\n    return reduceOptions(data);\n  }).current;\n  const options = (0,react.useMemo)(() => {\n    return asyncFilter || !debouncedFilterValue ? dataOptions : filterFn(dataOptions);\n  }, [dataOptions, debouncedFilterValue]);\n  const testId = (0,useProvidedIdOrCreate/* default */.A)(id, \'selection-\');\n  const hasGroups = dataOptions.some(item => item.options);\n\n  // we need to skip over group headings since those can neither be selectable or cursored over.\n  const reducedListItems = (0,react.useMemo)(() => {\n    return hasGroups ? reduceOptionsRef(options) : options;\n  }, [options, hasGroups]);\n\n  // with async filtering, the filtering happens as a side-effect.\n  (0,react.useEffect)(() => {\n    if (asyncFilter && debouncedFilterValue) {\n      filterFn(dataOptions);\n    }\n  }, [debouncedFilterValue, asyncFilter]);\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getInputProps,\n    getLabelProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    selectedItem,\n    selectItem: updateSelectedItem\n  } = (0,downshift_esm/* useCombobox */.Bp)({\n    items: reducedListItems || [],\n    itemToString: defaultItemToString,\n    initialSelectedItem: value ? getSelectedObject(value, dataOptions) : null,\n    onSelectedItemChange: _ref3 => {\n      let {\n        selectedItem: newSelectedItem\n      } = _ref3;\n      // if the newSelectedItem\'s value matches the incoming value prop, we assume that\n      // onChange isn\'t necessary.\n      if (onChange && newSelectedItem?.value !== value) {\n        onChange(newSelectedItem.value);\n      }\n      updateDebouncedFilter(\'\'); // so that we can unfilter the options for the next time the list opens.\n    },\n    isItemDisabled(item) {\n      return (readOnly || readonly) && !isEqual_default()(item, selectedItem);\n    },\n    stateReducer(state, actionAndChanges) {\n      const {\n        changes,\n        type\n      } = actionAndChanges;\n      switch (type) {\n        case downshift_esm/* useCombobox */.Bp.stateChangeTypes.InputKeyDownEnter:\n        case downshift_esm/* useCombobox */.Bp.stateChangeTypes.ItemClick:\n          awaitingChange.current = true;\n          return changes;\n        default:\n          return changes;\n      }\n    }\n  });\n  (0,react.useEffect)(() => {\n    // if dataOptions populate/change after the initial render, update the selectedItem state\n    // if one hasn\'t been found yet.\n    if (dataOptions?.length !== dataLength.current && value && selectedItem === null) {\n      const selected = getSelectedObject(value, dataOptions);\n      updateSelectedItem(selected);\n      dataLength.current = dataOptions.length;\n    }\n  }, [dataOptions, selectedItem, value]);\n  const valueLabel = formatter({\n    option: selectedItem\n  }) || placeholder || \'\';\n  const labelId = `sl-label-${testId}`;\n  const valueId = `selected-${testId}-item`;\n  if (awaitingChange.current) {\n    // a user has change the value via the dropdown and we\'re waiting for the value\n    // to correspond with the state...\n    if (selectedItem !== null && selectedItem?.value === value) {\n      awaitingChange.current = false;\n    }\n  } else if ((selectedItem !== null ||\n  // if we can find a valid dataOption to match the value (for dataOptions that have value: \'\')\n  getSelectedObject(value, dataOptions) !== null) && selectedItem?.value !== value) {\n    // conform to post-mount value prop changes from outside of the component,\n    // whether the changed value is something empty like \'\' or null;\n    const newValue = getSelectedObject(value, dataOptions) || {\n      value\n    };\n    updateSelectedItem(newValue);\n  }\n\n  /** renderOptions\n   *  All of the rendering of the options list is performed here.\n   *  This memoized function is passed into the SelectionOverlay & SelectionList\n   */\n\n  // if the options are grouped, flatten them for rendering.\n  const flattenedOptions = (0,react.useMemo)(() => {\n    return hasGroups && options.length > 0 ? flattenRef(options) : options;\n  }, [options, hasGroups]);\n  const renderedOptionsFn = (0,react.useCallback)(function optionRenderer(data) {\n    const rendered = [];\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (item.value) {\n        const reducedIndex = reconcileReducedIndex(item, reducedListItems);\n        rendered.push(/*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n          ...getItemProps({\n            index: reducedIndex,\n            onMouseUp: e => e.stopPropagation()\n          }),\n          className: getItemClass(item, reducedIndex, {\n            selectedItem,\n            highlightedIndex,\n            dataOptions\n          }),\n          children: formatter({\n            option: item,\n            searchTerm: filterValue\n          })\n        }, `${item.label}-option-${i}`));\n      } else {\n        rendered.push(/*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n          className: Selection/* default */.A.groupLabel,\n          children: formatter({\n            option: item,\n            searchTerm: filterValue\n          })\n        }, `${item.label}-heading-${i}`));\n      }\n    }\n    return rendered;\n  }, [filterValue, flattenedOptions]);\n  const optionsProcessing = false;\n  const renderedOptions = (0,react.useMemo)(() => renderedOptionsFn(flattenedOptions), [flattenedOptions, debouncedFilterValue]);\n\n  // It doesn\'t need to update if *all of the things it uses change...\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const renderOptions = (0,react.useCallback)(() => {\n    if (!isOpen) return null;\n    // if options are delivered with groupings, we flatten the options for\n    // a set of selectable indices. Group labels are not selectable.\n    /* loading message */\n    if (loading || filterValue !== debouncedFilterValue) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          children: loadingMessage\n        })\n      });\n    }\n\n    /* no options found through async filter */\n    if (asyncFilter && dataOptions.length === 0 && debouncedFilterValue === \'\') {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          children: ["-", formatMessage({\n            id: \'stripes-components.selection.enterFilter\'\n          }), "-"]\n        })\n      });\n    }\n    if (dataOptions.length === 0) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          children: ["-", emptyMessage, "-"]\n        })\n      });\n    }\n\n    /* no options found through filtering */\n    if (options.length === 0) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          children: ["-", formatMessage({\n            id: \'stripes-components.selection.emptyList\'\n          }), "-"]\n        })\n      });\n    }\n    return renderedOptions;\n  }, [loading, selectedItem, highlightedIndex, value, options, isOpen, optionsProcessing, renderedOptions]);\n  const renderFilterInput = (0,react.useCallback)(filterRef => /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n    className: Selection/* default */.A.selectionFilterContainer,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)("input", {\n      type: "text",\n      ...getInputProps({\n        ref: filterRef,\n        value: filterValue,\n        // stopPropagation to keep from unwantedly triggering shortcuts and\n        // address downshift issues with portal rendering/functionality.\n        // https://github.com/downshift-js/downshift/issues/287\n        onKeyDown: e => e.stopPropagation(),\n        onMouseUp: e => e.stopPropagation()\n      }),\n      onClick: () => {},\n      onChange: e => filterUpdateFn(e.target.value),\n      "aria-label": formatMessage({\n        id: \'stripes-components.selection.filterOptionsLabel\'\n      }, {\n        label\n      }),\n      className: Selection/* default */.A.selectionFilter,\n      placeholder: formatMessage({\n        id: \'stripes-components.selection.filterOptionsPlaceholder\'\n      })\n    })\n  }), [filterValue]);\n  const getControlClass = (0,react.useMemo)(() => getClass({\n    dirty,\n    error,\n    marginBottom0,\n    useValidStyle,\n    valid,\n    warning\n  }), [error, warning, dirty, valid, useValidStyle, marginBottom0]);\n\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    children: [label && /*#__PURE__*/(0,jsx_runtime.jsx)(Label/* default */.A, {\n      ...getLabelProps({\n        id: labelId\n      }),\n      readOnly: readOnly || readonly,\n      required: required,\n      children: label\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: Selection/* default */.A.selectionControlContainer,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: sharedStyles_form/* default */.A.inputGroup,\n        children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          type: "button",\n          ...getToggleButtonProps({\n            ref: controlRef,\n            tabIndex: undefined,\n            disabled,\n            readOnly,\n            id: testId,\n            \'aria-labelledby\': `${labelId} ${valueId}`\n          }),\n          className: getControlClass,\n          autoFocus: autofocus,\n          onBlur: onBlur,\n          onFocus: onFocus,\n          name: name,\n          value: selectedItem?.value,\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "sr-only",\n            children: formatMessage({\n              id: \'stripes-components.selection.controlLabel\'\n            })\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n            className: Selection/* default */.A.singleValue,\n            id: valueId,\n            children: valueLabel\n          })]\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: Selection/* default */.A.selectionEndControls,\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(TextFieldIcon/* default */.A, {\n            icon: "triangle-down"\n          })\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        role: "alert",\n        children: [warning && /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: `${sharedStyles_form/* default */.A.feedbackWarning}`,\n          children: warning\n        }), error && /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: `${sharedStyles_form/* default */.A.feedbackError}`,\n          children: error\n        })]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Selection_SelectionOverlay, {\n      ...rest,\n      controlRef: controlRef,\n      getMenuProps: getMenuProps,\n      id: testId,\n      isOpen: isOpen,\n      listMaxHeight: listMaxHeight,\n      onChangeFilterValue: updateFilterValue,\n      optionAlignment: optionAlignment,\n      popper: popper,\n      renderFilterInput: renderFilterInput,\n      renderOptions: renderOptions,\n      usePortal: usePortal,\n      width: getControlWidth(controlRef.current),\n      labelId: labelId\n    })]\n  });\n};\nSelection_Selection.displayName = "Selection";\nSelection_Selection.propTypes = {\n  asyncFilter: (prop_types_default()).bool,\n  autofocus: (prop_types_default()).bool,\n  dataOptions: prop_types_default().arrayOf((prop_types_default()).object),\n  dirty: (prop_types_default()).bool,\n  disabled: (prop_types_default()).bool,\n  emptyMessage: (prop_types_default()).node,\n  error: (prop_types_default()).node,\n  formatter: (prop_types_default()).func,\n  id: (prop_types_default()).string,\n  inputRef: prop_types_default().oneOfType([(prop_types_default()).object, (prop_types_default()).func]),\n  label: (prop_types_default()).node,\n  listMaxHeight: (prop_types_default()).string,\n  loading: (prop_types_default()).bool,\n  loadingMessage: (prop_types_default()).node,\n  marginBottom0: (prop_types_default()).bool,\n  name: (prop_types_default()).string,\n  onBlur: (prop_types_default()).func,\n  onChange: (prop_types_default()).func,\n  onFilter: (prop_types_default()).func,\n  onFocus: (prop_types_default()).func,\n  optionAlignment: (prop_types_default()).string,\n  placeholder: (prop_types_default()).node,\n  popper: prop_types_default().shape({\n    portal: (0,lib/* deprecated */.io)((prop_types_default()).element, \'use the boolean usePortal prop of Selection instead\')\n  }),\n  readOnly: (prop_types_default()).bool,\n  readonly: (prop_types_default()).bool,\n  required: (prop_types_default()).bool,\n  usePortal: (prop_types_default()).bool,\n  useValidStyle: (prop_types_default()).bool,\n  valid: (prop_types_default()).bool,\n  value: (prop_types_default()).string,\n  warning: (prop_types_default()).node\n};\n/* harmony default export */ const lib_Selection_Selection = ((0,FormField/* default */.A)(Selection_Selection, _ref4 => {\n  let {\n    meta\n  } = _ref4;\n  return {\n    dirty: meta.dirty,\n    error: meta.touched && meta.error ? meta.error : \'\',\n    valid: meta.valid,\n    warning: meta.touched ? (0,parseMeta/* default */.A)(meta, \'warning\') : \'\'\n  };\n}));\n\n/* eslint-enable */\n;\nSelection_Selection.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "Selection",\n  "props": {\n    "asyncFilter": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "formatter": {\n      "defaultValue": {\n        "value": "({ option, searchTerm }) => {\\n  return option ?\\n    <OptionSegment searchTerm={searchTerm}>{option.label}</OptionSegment> :\\n    null;\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "listMaxHeight": {\n      "defaultValue": {\n        "value": "\'174px\'",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "loadingMessage": {\n      "defaultValue": {\n        "value": "<Icon icon=\\"spinner-ellipsis\\" />",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "onFilter": {\n      "defaultValue": {\n        "value": "(value, dataOptions = []) => {\\n  const valueRE = new RegExp(`^${value}`, \'i\');\\n  const baseFilter = (o) => valueRE.test(o.label);\\n  // if items have an \'options\' field, filter those items and return the dataOptions group with the\\n  // results inserted.\\n  const grouped = dataOptions.some((o) => Object.prototype.hasOwnProperty.call(o, \'options\'));\\n  if (grouped) {\\n    return dataOptions.reduce((options, opt) => {\\n      // global, ungrouped options\\n      if (Object.prototype.hasOwnProperty.call(opt, \'value\')) {\\n        if (valueRE.test(opt.label)) {\\n          return [...options, opt];\\n        }\\n      } else if (Object.prototype.hasOwnProperty.call(opt, \'options\')) {\\n        const filteredOptions = opt.options.filter(baseFilter);\\n        if (filteredOptions.length > 0) {\\n          return [...options, { ...opt, options: filteredOptions }];\\n        }\\n      }\\n      return options;\\n    }, []);\\n  }\\n\\n  const result = [];\\n  for (let i = 0; i < dataOptions.length; i++) {\\n    if (baseFilter(dataOptions[i])) {\\n      result.push(dataOptions[i]);\\n    }\\n  }\\n  return result;\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "useValidStyle": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "autofocus": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "dataOptions": {\n      "description": "",\n      "type": {\n        "name": "arrayOf",\n        "value": {\n          "name": "object"\n        }\n      },\n      "required": false\n    },\n    "dirty": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "disabled": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "emptyMessage": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "error": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "inputRef": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "object"\n        }, {\n          "name": "func"\n        }]\n      },\n      "required": false\n    },\n    "label": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "loading": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "marginBottom0": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "name": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "onBlur": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onChange": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onFocus": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "optionAlignment": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "placeholder": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "popper": {\n      "description": "",\n      "type": {\n        "name": "shape",\n        "value": {\n          "portal": {\n            "name": "custom",\n            "raw": "deprecated(PropTypes.element, \'use the boolean usePortal prop of Selection instead\')",\n            "required": false\n          }\n        }\n      },\n      "required": false\n    },\n    "readOnly": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "readonly": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "required": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "usePortal": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "valid": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "value": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "warning": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/Selection/Selection.js\n')}}]);