"use strict";(self.webpackChunk_folio_stripes_components=self.webpackChunk_folio_stripes_components||[]).push([[5395],{"./lib/MultiColumnList/stories/service.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SI: () => (/* binding */ asyncGenerateSparse),\n/* harmony export */   d2: () => (/* binding */ syncGenerate),\n/* harmony export */   eo: () => (/* binding */ asyncGenerate)\n/* harmony export */ });\n/* unused harmony export syncGenerateSparse */\n/* harmony import */ var faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/faker/index.js");\n/* harmony import */ var faker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(faker__WEBPACK_IMPORTED_MODULE_0__);\n\nconst baseGenerator = (start, res, i) => ({\n  active: faker__WEBPACK_IMPORTED_MODULE_0___default().random.boolean(),\n  title: faker__WEBPACK_IMPORTED_MODULE_0___default().random.words(),\n  index: (start || 0) + res.length,\n  date: faker__WEBPACK_IMPORTED_MODULE_0___default().date.past().toString(),\n  email: faker__WEBPACK_IMPORTED_MODULE_0___default().internet.email(),\n  status: faker__WEBPACK_IMPORTED_MODULE_0___default().random.boolean(),\n  phone: faker__WEBPACK_IMPORTED_MODULE_0___default().phone.phoneNumber(),\n  name: faker__WEBPACK_IMPORTED_MODULE_0___default().name.findName()\n});\nconst baseGenerateSparse = (start, res, i) => ({\n  active: faker__WEBPACK_IMPORTED_MODULE_0___default().random.boolean(),\n  title: faker__WEBPACK_IMPORTED_MODULE_0___default().random.words(),\n  index: start + i + 1,\n  date: faker__WEBPACK_IMPORTED_MODULE_0___default().date.past().toString(),\n  email: faker__WEBPACK_IMPORTED_MODULE_0___default().internet.email()\n});\nfunction syncGenerate(n) {\n  let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let generator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : baseGenerator;\n  const res = [];\n  let i = start;\n  while (i < n) {\n    res.push(generator(start, res, i));\n    i++;\n  }\n  return res;\n}\nfunction asyncGenerate(n, start) {\n  let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let test = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let generator = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : baseGenerator;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const res = syncGenerate(n, start, generator);\n      resolve(res);\n    }, test ? 0 : timeout);\n  });\n}\nfunction syncGenerateSparse(n, start, length) {\n  let generator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : baseGenerateSparse;\n  const res = new Array(start);\n  let i = 0;\n  while (i < n) {\n    res.push(generator(start, res, i));\n    i++;\n  }\n  return res;\n}\nfunction asyncGenerateSparse(n, start, length) {\n  let timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let generator = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : baseGenerator;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const res = syncGenerateSparse(n, start, length, generator);\n      resolve(res);\n    }, timeout);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvTXVsdGlDb2x1bW5MaXN0L3N0b3JpZXMvc2VydmljZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2xpby9zdHJpcGVzLWNvbXBvbmVudHMvLi9saWIvTXVsdGlDb2x1bW5MaXN0L3N0b3JpZXMvc2VydmljZS5qcz9iY2ZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5jb25zdCBiYXNlR2VuZXJhdG9yID0gKHN0YXJ0LCByZXMsIGkpID0+ICh7XG4gIGFjdGl2ZTogZmFrZXIucmFuZG9tLmJvb2xlYW4oKSxcbiAgdGl0bGU6IGZha2VyLnJhbmRvbS53b3JkcygpLFxuICBpbmRleDogKHN0YXJ0IHx8IDApICsgcmVzLmxlbmd0aCxcbiAgZGF0ZTogZmFrZXIuZGF0ZS5wYXN0KCkudG9TdHJpbmcoKSxcbiAgZW1haWw6IGZha2VyLmludGVybmV0LmVtYWlsKCksXG4gIHN0YXR1czogZmFrZXIucmFuZG9tLmJvb2xlYW4oKSxcbiAgcGhvbmU6IGZha2VyLnBob25lLnBob25lTnVtYmVyKCksXG4gIG5hbWU6IGZha2VyLm5hbWUuZmluZE5hbWUoKVxufSk7XG5jb25zdCBiYXNlR2VuZXJhdGVTcGFyc2UgPSAoc3RhcnQsIHJlcywgaSkgPT4gKHtcbiAgYWN0aXZlOiBmYWtlci5yYW5kb20uYm9vbGVhbigpLFxuICB0aXRsZTogZmFrZXIucmFuZG9tLndvcmRzKCksXG4gIGluZGV4OiBzdGFydCArIGkgKyAxLFxuICBkYXRlOiBmYWtlci5kYXRlLnBhc3QoKS50b1N0cmluZygpLFxuICBlbWFpbDogZmFrZXIuaW50ZXJuZXQuZW1haWwoKVxufSk7XG5leHBvcnQgZnVuY3Rpb24gc3luY0dlbmVyYXRlKG4pIHtcbiAgbGV0IHN0YXJ0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICBsZXQgZ2VuZXJhdG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBiYXNlR2VuZXJhdG9yO1xuICBjb25zdCByZXMgPSBbXTtcbiAgbGV0IGkgPSBzdGFydDtcbiAgd2hpbGUgKGkgPCBuKSB7XG4gICAgcmVzLnB1c2goZ2VuZXJhdG9yKHN0YXJ0LCByZXMsIGkpKTtcbiAgICBpKys7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3luY0dlbmVyYXRlKG4sIHN0YXJ0KSB7XG4gIGxldCB0aW1lb3V0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAwO1xuICBsZXQgdGVzdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogZmFsc2U7XG4gIGxldCBnZW5lcmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGJhc2VHZW5lcmF0b3I7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IHJlcyA9IHN5bmNHZW5lcmF0ZShuLCBzdGFydCwgZ2VuZXJhdG9yKTtcbiAgICAgIHJlc29sdmUocmVzKTtcbiAgICB9LCB0ZXN0ID8gMCA6IHRpbWVvdXQpO1xuICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzeW5jR2VuZXJhdGVTcGFyc2Uobiwgc3RhcnQsIGxlbmd0aCkge1xuICBsZXQgZ2VuZXJhdG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBiYXNlR2VuZXJhdGVTcGFyc2U7XG4gIGNvbnN0IHJlcyA9IG5ldyBBcnJheShzdGFydCk7XG4gIGxldCBpID0gMDtcbiAgd2hpbGUgKGkgPCBuKSB7XG4gICAgcmVzLnB1c2goZ2VuZXJhdG9yKHN0YXJ0LCByZXMsIGkpKTtcbiAgICBpKys7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3luY0dlbmVyYXRlU3BhcnNlKG4sIHN0YXJ0LCBsZW5ndGgpIHtcbiAgbGV0IHRpbWVvdXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDA7XG4gIGxldCBnZW5lcmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGJhc2VHZW5lcmF0b3I7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IHJlcyA9IHN5bmNHZW5lcmF0ZVNwYXJzZShuLCBzdGFydCwgbGVuZ3RoLCBnZW5lcmF0b3IpO1xuICAgICAgcmVzb2x2ZShyZXMpO1xuICAgIH0sIHRpbWVvdXQpO1xuICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/MultiColumnList/stories/service.js\n')},"./lib/Selection/Selection.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ lib_Selection_Selection)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("./node_modules/react/index.js");\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__("./node_modules/prop-types/index.js");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/prop-types-extra/lib/index.js\nvar lib = __webpack_require__("./node_modules/prop-types-extra/lib/index.js");\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/src/components/useIntl.js\nvar useIntl = __webpack_require__("./node_modules/react-intl/lib/src/components/useIntl.js");\n// EXTERNAL MODULE: ./node_modules/downshift/dist/downshift.esm.js + 1 modules\nvar downshift_esm = __webpack_require__("./node_modules/downshift/dist/downshift.esm.js");\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__("./node_modules/classnames/index.js");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("./node_modules/lodash/isEqual.js");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n// EXTERNAL MODULE: ./node_modules/lodash/debounce.js\nvar debounce = __webpack_require__("./node_modules/lodash/debounce.js");\nvar debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);\n// EXTERNAL MODULE: ./lib/FormField/FormField.js\nvar FormField = __webpack_require__("./lib/FormField/FormField.js");\n// EXTERNAL MODULE: ./lib/FormField/parseMeta.js\nvar parseMeta = __webpack_require__("./lib/FormField/parseMeta.js");\n;// ./lib/Selection/utils.js\n/* filterOptionList\n *   conforms to shapes of options.\n *   standard options are { value, label }\n *   grouped options are { label, options } where options contains standard options.\n */\nconst filterOptionList = function (value) {\n  let dataOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const valueRE = new RegExp(`^${value}`, \'i\');\n  const baseFilter = o => valueRE.test(o.label);\n  // if items have an \'options\' field, filter those items and return the dataOptions group with the\n  // results inserted.\n  const grouped = dataOptions.some(o => Object.prototype.hasOwnProperty.call(o, \'options\'));\n  if (grouped) {\n    return dataOptions.reduce((options, opt) => {\n      // global, ungrouped options\n      if (Object.prototype.hasOwnProperty.call(opt, \'value\')) {\n        if (valueRE.test(opt.label)) {\n          return [...options, opt];\n        }\n      } else if (Object.prototype.hasOwnProperty.call(opt, \'options\')) {\n        const filteredOptions = opt.options.filter(baseFilter);\n        if (filteredOptions.length > 0) {\n          return [...options, {\n            ...opt,\n            options: filteredOptions\n          }];\n        }\n      }\n      return options;\n    }, []);\n  }\n  const result = [];\n  for (let i = 0; i < dataOptions.length; i++) {\n    if (baseFilter(dataOptions[i])) {\n      result.push(dataOptions[i]);\n    }\n  }\n  return result;\n};\nconst flattenOptionList = dataOptions => {\n  return dataOptions ? dataOptions.flatMap(opt => {\n    // global, ungrouped options\n    if (Object.prototype.hasOwnProperty.call(opt, \'value\')) {\n      return opt;\n    } else if (Object.prototype.hasOwnProperty.call(opt, \'options\')) {\n      const {\n        label,\n        options\n      } = opt;\n      return [{\n        label\n      }, ...options];\n    }\n    return undefined;\n  }) : [];\n};\n\n// find the value object from dataOptions\nconst getSelectedObject = function (value) {\n  let dataOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (dataOptions.length > 0) {\n    if (typeof value !== \'undefined\') {\n      const flattenedOptions = flattenOptionList(dataOptions);\n      return flattenedOptions.find(o => o.value === value) || null;\n    }\n  }\n  return null;\n};\n\n/** ensureValuedOption\n * returns an option object that contains a \'value\' field or\n * recurses to the next index.\n */\nconst ensureValuedOption = (index, dataOptions) => {\n  if (dataOptions[index]) {\n    if (Object.prototype.hasOwnProperty.call(dataOptions[index], \'value\')) {\n      return dataOptions[index];\n    }\n    return ensureValuedOption(index + 1, dataOptions);\n  }\n  return undefined;\n};\nconst defaultItemToString = item => item?.label;\n\n// removes any option group headers, leaving only selectable options.\nconst reduceOptions = dataOptions => {\n  if (dataOptions) {\n    return dataOptions.reduce((options, op) => {\n      if (op.value) options.push(op);\n      if (op.options) return [...options, ...op.options];\n      return options;\n    }, []);\n  }\n  return [];\n};\n\n// reconcile index of rendered item to items that are only selectable.\nconst reconcileReducedIndex = (item, items) => {\n  return items.findIndex(i => i === item);\n};\n// EXTERNAL MODULE: ./node_modules/react-overlays/esm/Portal.js + 1 modules\nvar Portal = __webpack_require__("./node_modules/react-overlays/esm/Portal.js");\n// EXTERNAL MODULE: ./lib/Selection/Selection.css\nvar Selection = __webpack_require__("./lib/Selection/Selection.css");\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__("./node_modules/react/jsx-runtime.js");\n;// ./lib/Selection/SelectionList.js\n\n\n\n\nconst SelectionList = _ref => {\n  let {\n    getMenuProps,\n    labelId,\n    listMaxHeight,\n    renderOptions,\n    isOpen\n  } = _ref;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("ul", {\n    ...getMenuProps({\n      \'aria-labelledby\': labelId\n    }),\n    style: {\n      maxHeight: listMaxHeight\n    },\n    className: Selection/* default */.A.selectionList,\n    children: isOpen && renderOptions()\n  });\n};\nSelectionList.displayName = "SelectionList";\nSelectionList.propTypes = {\n  getMenuProps: (prop_types_default()).func,\n  isOpen: (prop_types_default()).bool,\n  labelId: (prop_types_default()).string,\n  listMaxHeight: (prop_types_default()).string,\n  renderOptions: (prop_types_default()).func\n};\n/* harmony default export */ const Selection_SelectionList = (SelectionList);\n;\nSelectionList.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "SelectionList",\n  "props": {\n    "getMenuProps": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "isOpen": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "labelId": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "listMaxHeight": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "renderOptions": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    }\n  }\n};\n// EXTERNAL MODULE: ./lib/Popper/Popper.js\nvar Popper = __webpack_require__("./lib/Popper/Popper.js");\n;// ./lib/Selection/SelectionOverlay.js\n\n\n\n\n\n\n\nconst SelectionOverlay = _ref => {\n  let {\n    controlRef,\n    listContainerRef,\n    getMenuProps,\n    id,\n    isOpen,\n    listMaxHeight,\n    onChangeFilterValue,\n    optionAlignment,\n    popper,\n    renderFilterInput,\n    renderOptions,\n    usePortal,\n    width,\n    ...props\n  } = _ref;\n  const filterRef = (0,react.useRef)(null);\n  const getPortalElement = (0,react.useRef)(() => document.getElementById(\'OverlayContainer\')).current;\n  (0,react.useEffect)(() => {\n    // if the overlay is open and focus is outside of it, move focus to the filter.\n    if (isOpen && listContainerRef.current?.matches(\':not(:focus-within)\')) {\n      filterRef.current?.focus();\n    }\n\n    // if overlay is closing and focus is within the overlay, move focus to the Selection control.\n    if (!isOpen && listContainerRef.current?.matches(\':focus-within\')) {\n      onChangeFilterValue(\'\');\n      controlRef.current?.focus();\n    }\n  }, [isOpen, onChangeFilterValue, controlRef, listContainerRef]);\n  const atSmallMedia = window.matchMedia(\'(max-width: 640px)\').matches;\n  const selectList = /*#__PURE__*/(0,jsx_runtime.jsx)(Selection_SelectionList, {\n    renderOptions: renderOptions,\n    listMaxHeight: listMaxHeight,\n    optionAlignment: optionAlignment,\n    getMenuProps: getMenuProps,\n    isOpen: isOpen,\n    ...props\n  });\n  if (atSmallMedia) {\n    return /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n      children: isOpen && /*#__PURE__*/(0,jsx_runtime.jsx)(Portal/* default */.A, {\n        container: getPortalElement(),\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          role: "presentation",\n          className: Selection/* default */.A.selectionMobileBackdrop,\n          onClick: () => {\n            controlRef.current?.focus();\n          },\n          children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n            className: Selection/* default */.A.selectionListRoot,\n            style: {\n              width: \'85vw\'\n            },\n            id: `sl-container-${id}`,\n            ref: listContainerRef,\n            children: [renderFilterInput(filterRef), isOpen && selectList]\n          })\n        })\n      })\n    });\n  }\n  const popperProps = {\n    portal: isOpen && usePortal ? getPortalElement() : undefined,\n    modifiers: Popper/* OVERLAY_MODIFIERS */.mF,\n    ...popper\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(Popper/* default */.Ay, {\n    isOpen: isOpen,\n    anchorRef: controlRef,\n    hideIfClosed: true,\n    ...popperProps,\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: Selection/* default */.A.selectionListRoot,\n      style: {\n        width\n      },\n      id: `sl-container-${id}`,\n      ref: listContainerRef,\n      children: [renderFilterInput(filterRef), selectList]\n    })\n  });\n};\nSelectionOverlay.displayName = "SelectionOverlay";\nSelectionOverlay.propTypes = {\n  controlRef: prop_types_default().oneOfType([(prop_types_default()).func, (prop_types_default()).object]),\n  emptyMessage: (prop_types_default()).node,\n  getMenuProps: (prop_types_default()).func,\n  id: (prop_types_default()).string,\n  isOpen: (prop_types_default()).bool,\n  listContainerRef: (prop_types_default()).object,\n  listMaxHeight: (prop_types_default()).string,\n  onChangeFilterValue: (prop_types_default()).func,\n  optionAlignment: (prop_types_default()).string,\n  popper: (prop_types_default()).object,\n  renderFilterInput: (prop_types_default()).func,\n  renderOptions: (prop_types_default()).func,\n  usePortal: (prop_types_default()).bool,\n  width: (prop_types_default()).number\n};\n/* harmony default export */ const Selection_SelectionOverlay = (SelectionOverlay);\n;\nSelectionOverlay.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "SelectionOverlay",\n  "props": {\n    "controlRef": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "func"\n        }, {\n          "name": "object"\n        }]\n      },\n      "required": false\n    },\n    "emptyMessage": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "getMenuProps": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "isOpen": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "listContainerRef": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "listMaxHeight": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "onChangeFilterValue": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "optionAlignment": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "popper": {\n      "description": "",\n      "type": {\n        "name": "object"\n      },\n      "required": false\n    },\n    "renderFilterInput": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "renderOptions": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "usePortal": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "width": {\n      "description": "",\n      "type": {\n        "name": "number"\n      },\n      "required": false\n    }\n  }\n};\n// EXTERNAL MODULE: ./lib/Label/Label.js + 1 modules\nvar Label = __webpack_require__("./lib/Label/Label.js");\n// EXTERNAL MODULE: ./lib/TextField/TextFieldIcon.js\nvar TextFieldIcon = __webpack_require__("./lib/TextField/TextFieldIcon.js");\n// EXTERNAL MODULE: ./lib/Icon/Icon.js + 1 modules\nvar Icon = __webpack_require__("./lib/Icon/Icon.js");\n// EXTERNAL MODULE: ./hooks/useProvidedRefOrCreate/useProvidedRefOrCreate.js\nvar useProvidedRefOrCreate = __webpack_require__("./hooks/useProvidedRefOrCreate/useProvidedRefOrCreate.js");\n// EXTERNAL MODULE: ./lib/sharedStyles/form.css\nvar sharedStyles_form = __webpack_require__("./lib/sharedStyles/form.css");\n// EXTERNAL MODULE: ./lib/Selection/DefaultOptionFormatter.js\nvar DefaultOptionFormatter = __webpack_require__("./lib/Selection/DefaultOptionFormatter.js");\n// EXTERNAL MODULE: ./hooks/useProvidedIdOrCreate/useProvidedIdOrCreate.js\nvar useProvidedIdOrCreate = __webpack_require__("./hooks/useProvidedIdOrCreate/useProvidedIdOrCreate.js");\n;// ./lib/Selection/Selection.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// a rough way to discern if an option is grouped or not - if it finds an index at the top level\n// of dataOptions, it\'s not grouped...\n\nconst optionIsGrouped = (item, dataOptions) => {\n  return dataOptions.findIndex(i => i === item) === -1;\n};\nconst getControlWidth = control => {\n  if (control) {\n    return control.offsetWidth;\n  }\n  return undefined;\n};\nconst getItemClass = (item, i, props) => {\n  const {\n    value\n  } = item;\n  const {\n    selectedItem,\n    highlightedIndex,\n    dataOptions\n  } = props;\n  if (!value) {\n    return;\n  }\n  const cursored = i === highlightedIndex ? \' \' + Selection/* default */.A.cursor : \'\';\n  const selected = value === selectedItem?.value ? \' \' + Selection/* default */.A.selected : \'\';\n  const grouped = optionIsGrouped(item, dataOptions) ? \' \' + Selection/* default */.A.groupedOption : \'\';\n\n  // eslint-disable-next-line consistent-return\n  return `${Selection/* default */.A.option}${cursored}${selected}${grouped}`;\n};\nconst getClass = _ref => {\n  let {\n    dirty,\n    error,\n    marginBottom0,\n    useValidStyle,\n    valid,\n    warning\n  } = _ref;\n  let validationClasses = \'\';\n  validationClasses = classnames_default()({\n    [`${sharedStyles_form/* default */.A.hasFeedback}`]: error || warning\n  }, {\n    [`${sharedStyles_form/* default */.A.hasWarning}`]: warning\n  }, {\n    [`${sharedStyles_form/* default */.A.hasError}`]: error\n  }, {\n    [`${sharedStyles_form/* default */.A.isChanged}`]: dirty\n  }, {\n    [`${sharedStyles_form/* default */.A.isValid}`]: useValidStyle && valid && !error && !warning\n  });\n  return classnames_default()(validationClasses, Selection/* default */.A.selectionControl, sharedStyles_form/* default */.A.formControl, {\n    [`${Selection/* default */.A.marginBottom0}`]: marginBottom0\n  });\n};\n\n/* eslint-disable prefer-arrow-callback */\n\nconst Selection_Selection = _ref2 => {\n  let {\n    asyncFilter = false,\n    autofocus,\n    dataOptions,\n    dirty,\n    disabled,\n    emptyMessage,\n    error,\n    formatter = DefaultOptionFormatter/* default */.A,\n    id,\n    inputRef,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    label,\n    listMaxHeight = \'174px\',\n    loading,\n    loadingMessage = /*#__PURE__*/(0,jsx_runtime.jsx)(Icon/* default */.A, {\n      icon: "spinner-ellipsis"\n    }),\n    marginBottom0,\n    name,\n    onFilter = filterOptionList,\n    optionAlignment,\n    popper,\n    readOnly,\n    readonly,\n    required,\n    useValidStyle = false,\n    usePortal,\n    valid,\n    value,\n    warning,\n    ...rest\n  } = _ref2;\n  const {\n    formatMessage\n  } = (0,useIntl/* default */.A)();\n  const [filterValue, updateFilterValue] = (0,react.useState)(\'\');\n  const [debouncedFilterValue, updateDebouncedFilter] = (0,react.useState)(\'\');\n  const dataLength = (0,react.useRef)(dataOptions?.length || 0);\n  const controlRef = (0,useProvidedRefOrCreate/* default */.A)(inputRef);\n  const listContainerRef = (0,react.useRef)(null);\n  const awaitingChange = (0,react.useRef)(false);\n  const dbUpdateFilter = (0,react.useRef)(debounce_default()(filter => {\n    updateDebouncedFilter(filter);\n  }, 200)).current;\n  const filterUpdateFn = (0,react.useRef)(function filterUpdater(filter) {\n    updateFilterValue(filter);\n    // debounce updates to the filter for large data sets...\n    dbUpdateFilter(filter);\n  }).current;\n  const filterFn = (0,react.useCallback)(function filter(data) {\n    return onFilter(debouncedFilterValue, data);\n  }, [debouncedFilterValue, onFilter]);\n  const flattenRef = (0,react.useRef)(function flattener(data) {\n    return flattenOptionList(data);\n  }).current;\n  const reduceOptionsRef = (0,react.useRef)(function dataReducer(data) {\n    return reduceOptions(data);\n  }).current;\n  const options = (0,react.useMemo)(() => {\n    return asyncFilter || !debouncedFilterValue ? dataOptions : filterFn(dataOptions);\n  }, [dataOptions, debouncedFilterValue]);\n  const testId = (0,useProvidedIdOrCreate/* default */.A)(id, \'selection-\');\n  const hasGroups = dataOptions.some(item => item.options);\n\n  // we need to skip over group headings since those can neither be selectable or cursored over.\n  const reducedListItems = (0,react.useMemo)(() => {\n    return hasGroups ? reduceOptionsRef(options) : options;\n  }, [options, hasGroups]);\n\n  // with async filtering, the filtering happens as a side-effect.\n  (0,react.useEffect)(() => {\n    if (asyncFilter && debouncedFilterValue) {\n      filterFn(dataOptions);\n    }\n  }, [debouncedFilterValue, asyncFilter]);\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getInputProps,\n    getLabelProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    selectedItem,\n    selectItem: updateSelectedItem,\n    closeMenu\n  } = (0,downshift_esm/* useCombobox */.Bp)({\n    items: reducedListItems || [],\n    itemToString: defaultItemToString,\n    initialSelectedItem: value ? getSelectedObject(value, dataOptions) : null,\n    onSelectedItemChange: _ref3 => {\n      let {\n        selectedItem: newSelectedItem\n      } = _ref3;\n      // if the newSelectedItem\'s value matches the incoming value prop, we assume that\n      // onChange isn\'t necessary.\n      if (onChange && newSelectedItem?.value !== value) {\n        onChange(newSelectedItem.value);\n      }\n      updateDebouncedFilter(\'\'); // so that we can unfilter the options for the next time the list opens.\n    },\n    isItemDisabled(item) {\n      return (readOnly || readonly) && !isEqual_default()(item, selectedItem);\n    },\n    stateReducer(state, actionAndChanges) {\n      const {\n        changes,\n        type\n      } = actionAndChanges;\n      switch (type) {\n        case downshift_esm/* useCombobox */.Bp.stateChangeTypes.FunctionCloseMenu:\n        case downshift_esm/* useCombobox */.Bp.stateChangeTypes.InputKeyDownEnter:\n        case downshift_esm/* useCombobox */.Bp.stateChangeTypes.ItemClick:\n          awaitingChange.current = true;\n          return changes;\n        default:\n          return changes;\n      }\n    }\n  });\n  (0,react.useEffect)(() => {\n    // if dataOptions populate/change after the initial render, update the selectedItem state\n    // if one hasn\'t been found yet.\n    if (dataOptions?.length !== dataLength.current && value && selectedItem === null) {\n      const selected = getSelectedObject(value, dataOptions);\n      updateSelectedItem(selected);\n      dataLength.current = dataOptions.length;\n    }\n  }, [dataOptions, selectedItem, value]);\n  const valueLabel = formatter({\n    option: selectedItem\n  }) || placeholder || \'\';\n  const labelId = `sl-label-${testId}`;\n  const valueId = `selected-${testId}-item`;\n  if (awaitingChange.current) {\n    // a user has change the value via the dropdown and we\'re waiting for the value\n    // to correspond with the state...\n    if (selectedItem !== null && selectedItem?.value === value) {\n      awaitingChange.current = false;\n    }\n  } else if ((selectedItem !== null ||\n  // if we can find a valid dataOption to match the value (for dataOptions that have value: \'\')\n  getSelectedObject(value, dataOptions) !== null) && selectedItem?.value !== value) {\n    // conform to post-mount value prop changes from outside of the component,\n    // whether the changed value is something empty like \'\' or null;\n    const newValue = getSelectedObject(value, dataOptions) || {\n      value\n    };\n    updateSelectedItem(newValue);\n  }\n\n  /** renderOptions\n   *  All of the rendering of the options list is performed here.\n   *  This memoized function is passed into the SelectionOverlay & SelectionList\n   */\n\n  // if the options are grouped, flatten them for rendering.\n  const flattenedOptions = (0,react.useMemo)(() => {\n    return hasGroups && options.length > 0 ? flattenRef(options) : options;\n  }, [options, hasGroups]);\n  const renderedOptionsFn = (0,react.useCallback)(function optionRenderer(data) {\n    const rendered = [];\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (item.value) {\n        const reducedIndex = reconcileReducedIndex(item, reducedListItems);\n        rendered.push(/*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n          ...getItemProps({\n            index: reducedIndex,\n            onMouseUp: e => e.stopPropagation()\n          }),\n          className: getItemClass(item, reducedIndex, {\n            selectedItem,\n            highlightedIndex,\n            dataOptions\n          }),\n          children: formatter({\n            option: item,\n            searchTerm: filterValue\n          })\n        }, `${item.label}-option-${i}`));\n      } else {\n        rendered.push(/*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n          className: Selection/* default */.A.groupLabel,\n          children: formatter({\n            option: item,\n            searchTerm: filterValue\n          })\n        }, `${item.label}-heading-${i}`));\n      }\n    }\n    return rendered;\n  }, [filterValue, flattenedOptions, highlightedIndex]);\n  const optionsProcessing = false;\n  const renderedOptions = (0,react.useMemo)(() => renderedOptionsFn(flattenedOptions), [flattenedOptions, renderedOptionsFn]);\n\n  // It doesn\'t need to update if *all of the things it uses change...\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const renderOptions = (0,react.useCallback)(() => {\n    if (!isOpen) return null;\n    // if options are delivered with groupings, we flatten the options for\n    // a set of selectable indices. Group labels are not selectable.\n    /* loading message */\n    if (loading || filterValue !== debouncedFilterValue) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          children: loadingMessage\n        })\n      });\n    }\n\n    /* no options found through async filter */\n    if (asyncFilter && dataOptions.length === 0 && debouncedFilterValue === \'\') {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          children: ["-", formatMessage({\n            id: \'stripes-components.selection.enterFilter\'\n          }), "-"]\n        })\n      });\n    }\n    if (dataOptions.length === 0) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          children: ["-", emptyMessage, "-"]\n        })\n      });\n    }\n\n    /* no options found through filtering */\n    if (options.length === 0) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "option",\n        className: Selection/* default */.A.option,\n        "aria-selected": "false",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          children: ["-", formatMessage({\n            id: \'stripes-components.selection.emptyList\'\n          }), "-"]\n        })\n      });\n    }\n    return renderedOptions;\n  }, [loading, selectedItem, highlightedIndex, value, options, isOpen, optionsProcessing, renderedOptions]);\n\n  // internal blur handler - this prevents validation blur from happening when the\n  // control is just switching focus to the options list dropdown, which happens\n  // anytime the overlay is opened. STCOM-1366\n  const handleBlur = (0,react.useCallback)(e => {\n    // since the overlay control isn\'t focused until the next tick, we\n    // use a setTimeout to if the provided onBlur should be triggered.\n    setTimeout(() => {\n      if (!(listContainerRef.current?.contains(document.activeElement) && controlRef.current !== document.activeElement)) {\n        onBlur?.(e);\n        closeMenu();\n      }\n    });\n  }, [listContainerRef, isOpen, closeMenu]);\n  const renderFilterInput = (0,react.useCallback)(filterRef => /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n    className: Selection/* default */.A.selectionFilterContainer,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)("input", {\n      type: "text",\n      ...getInputProps({\n        ref: filterRef,\n        value: filterValue,\n        // stopPropagation to keep from unwantedly triggering shortcuts and\n        // address downshift issues with portal rendering/functionality.\n        // https://github.com/downshift-js/downshift/issues/287\n        onKeyDown: e => e.stopPropagation(),\n        onMouseUp: e => e.stopPropagation()\n      }),\n      onClick: () => {},\n      onBlur: handleBlur,\n      onChange: e => filterUpdateFn(e.target.value),\n      "aria-label": formatMessage({\n        id: \'stripes-components.selection.filterOptionsLabel\'\n      }, {\n        label\n      }),\n      className: Selection/* default */.A.selectionFilter,\n      placeholder: formatMessage({\n        id: \'stripes-components.selection.filterOptionsPlaceholder\'\n      })\n    })\n  }), [filterValue]);\n  const getControlClass = (0,react.useMemo)(() => getClass({\n    dirty,\n    error,\n    marginBottom0,\n    useValidStyle,\n    valid,\n    warning\n  }), [error, warning, dirty, valid, useValidStyle, marginBottom0]);\n\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    children: [label && /*#__PURE__*/(0,jsx_runtime.jsx)(Label/* default */.A, {\n      ...getLabelProps({\n        id: labelId\n      }),\n      readOnly: readOnly || readonly,\n      required: required,\n      children: label\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: Selection/* default */.A.selectionControlContainer,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: sharedStyles_form/* default */.A.inputGroup,\n        children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          type: "button",\n          ...getToggleButtonProps({\n            ref: controlRef,\n            tabIndex: undefined,\n            disabled,\n            readOnly,\n            id: testId,\n            \'aria-labelledby\': `${labelId} ${valueId}`\n          }),\n          className: getControlClass,\n          autoFocus: autofocus,\n          onBlur: handleBlur,\n          onFocus: onFocus,\n          name: name,\n          value: selectedItem?.value,\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "sr-only",\n            children: formatMessage({\n              id: \'stripes-components.selection.controlLabel\'\n            })\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n            className: Selection/* default */.A.singleValue,\n            id: valueId,\n            children: valueLabel\n          })]\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: Selection/* default */.A.selectionEndControls,\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(TextFieldIcon/* default */.A, {\n            icon: "triangle-down"\n          })\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        role: "alert",\n        children: [warning && /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: `${sharedStyles_form/* default */.A.feedbackWarning}`,\n          children: warning\n        }), error && /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: `${sharedStyles_form/* default */.A.feedbackError}`,\n          children: error\n        })]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(Selection_SelectionOverlay, {\n      ...rest,\n      controlRef: controlRef,\n      getMenuProps: getMenuProps,\n      id: testId,\n      isOpen: isOpen,\n      listMaxHeight: listMaxHeight,\n      onChangeFilterValue: updateFilterValue,\n      optionAlignment: optionAlignment,\n      popper: popper,\n      renderFilterInput: renderFilterInput,\n      renderOptions: renderOptions,\n      usePortal: usePortal,\n      width: getControlWidth(controlRef.current),\n      labelId: labelId,\n      listContainerRef: listContainerRef\n    })]\n  });\n};\nSelection_Selection.displayName = "Selection";\nSelection_Selection.propTypes = {\n  asyncFilter: (prop_types_default()).bool,\n  autofocus: (prop_types_default()).bool,\n  dataOptions: prop_types_default().arrayOf((prop_types_default()).object),\n  dirty: (prop_types_default()).bool,\n  disabled: (prop_types_default()).bool,\n  emptyMessage: (prop_types_default()).node,\n  error: (prop_types_default()).node,\n  formatter: (prop_types_default()).func,\n  id: (prop_types_default()).string,\n  inputRef: prop_types_default().oneOfType([(prop_types_default()).object, (prop_types_default()).func]),\n  label: (prop_types_default()).node,\n  listMaxHeight: (prop_types_default()).string,\n  loading: (prop_types_default()).bool,\n  loadingMessage: (prop_types_default()).node,\n  marginBottom0: (prop_types_default()).bool,\n  name: (prop_types_default()).string,\n  onBlur: (prop_types_default()).func,\n  onChange: (prop_types_default()).func,\n  onFilter: (prop_types_default()).func,\n  onFocus: (prop_types_default()).func,\n  optionAlignment: (prop_types_default()).string,\n  placeholder: (prop_types_default()).node,\n  popper: prop_types_default().shape({\n    portal: (0,lib/* deprecated */.io)((prop_types_default()).element, \'use the boolean usePortal prop of Selection instead\')\n  }),\n  readOnly: (prop_types_default()).bool,\n  readonly: (prop_types_default()).bool,\n  required: (prop_types_default()).bool,\n  usePortal: (prop_types_default()).bool,\n  useValidStyle: (prop_types_default()).bool,\n  valid: (prop_types_default()).bool,\n  value: (prop_types_default()).string,\n  warning: (prop_types_default()).node\n};\n/* harmony default export */ const lib_Selection_Selection = ((0,FormField/* default */.A)(Selection_Selection, _ref4 => {\n  let {\n    meta\n  } = _ref4;\n  return {\n    dirty: meta.dirty,\n    error: meta.touched && meta.error ? meta.error : \'\',\n    valid: meta.valid,\n    warning: meta.touched ? (0,parseMeta/* default */.A)(meta, \'warning\') : \'\'\n  };\n}));\n\n/* eslint-enable */\n;\nSelection_Selection.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "Selection",\n  "props": {\n    "asyncFilter": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "formatter": {\n      "defaultValue": {\n        "value": "({ option, searchTerm }) => {\\n  return option ?\\n    <OptionSegment searchTerm={searchTerm}>{option.label}</OptionSegment> :\\n    null;\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "listMaxHeight": {\n      "defaultValue": {\n        "value": "\'174px\'",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "loadingMessage": {\n      "defaultValue": {\n        "value": "<Icon icon=\\"spinner-ellipsis\\" />",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "onFilter": {\n      "defaultValue": {\n        "value": "(value, dataOptions = []) => {\\n  const valueRE = new RegExp(`^${value}`, \'i\');\\n  const baseFilter = (o) => valueRE.test(o.label);\\n  // if items have an \'options\' field, filter those items and return the dataOptions group with the\\n  // results inserted.\\n  const grouped = dataOptions.some((o) => Object.prototype.hasOwnProperty.call(o, \'options\'));\\n  if (grouped) {\\n    return dataOptions.reduce((options, opt) => {\\n      // global, ungrouped options\\n      if (Object.prototype.hasOwnProperty.call(opt, \'value\')) {\\n        if (valueRE.test(opt.label)) {\\n          return [...options, opt];\\n        }\\n      } else if (Object.prototype.hasOwnProperty.call(opt, \'options\')) {\\n        const filteredOptions = opt.options.filter(baseFilter);\\n        if (filteredOptions.length > 0) {\\n          return [...options, { ...opt, options: filteredOptions }];\\n        }\\n      }\\n      return options;\\n    }, []);\\n  }\\n\\n  const result = [];\\n  for (let i = 0; i < dataOptions.length; i++) {\\n    if (baseFilter(dataOptions[i])) {\\n      result.push(dataOptions[i]);\\n    }\\n  }\\n  return result;\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "useValidStyle": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "autofocus": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "dataOptions": {\n      "description": "",\n      "type": {\n        "name": "arrayOf",\n        "value": {\n          "name": "object"\n        }\n      },\n      "required": false\n    },\n    "dirty": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "disabled": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "emptyMessage": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "error": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "id": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "inputRef": {\n      "description": "",\n      "type": {\n        "name": "union",\n        "value": [{\n          "name": "object"\n        }, {\n          "name": "func"\n        }]\n      },\n      "required": false\n    },\n    "label": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "loading": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "marginBottom0": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "name": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "onBlur": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onChange": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "onFocus": {\n      "description": "",\n      "type": {\n        "name": "func"\n      },\n      "required": false\n    },\n    "optionAlignment": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "placeholder": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    },\n    "popper": {\n      "description": "",\n      "type": {\n        "name": "shape",\n        "value": {\n          "portal": {\n            "name": "custom",\n            "raw": "deprecated(PropTypes.element, \'use the boolean usePortal prop of Selection instead\')",\n            "required": false\n          }\n        }\n      },\n      "required": false\n    },\n    "readOnly": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "readonly": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "required": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "usePortal": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "valid": {\n      "description": "",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "value": {\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "warning": {\n      "description": "",\n      "type": {\n        "name": "node"\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvU2VsZWN0aW9uL1NlbGVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FDbkdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQzFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQzNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGZvbGlvL3N0cmlwZXMtY29tcG9uZW50cy8uL2xpYi9TZWxlY3Rpb24vdXRpbHMuanM/ZDAwZSIsIndlYnBhY2s6Ly9AZm9saW8vc3RyaXBlcy1jb21wb25lbnRzLy4vbGliL1NlbGVjdGlvbi9TZWxlY3Rpb25MaXN0LmpzP2NiZmUiLCJ3ZWJwYWNrOi8vQGZvbGlvL3N0cmlwZXMtY29tcG9uZW50cy8uL2xpYi9TZWxlY3Rpb24vU2VsZWN0aW9uT3ZlcmxheS5qcz9lY2MwIiwid2VicGFjazovL0Bmb2xpby9zdHJpcGVzLWNvbXBvbmVudHMvLi9saWIvU2VsZWN0aW9uL1NlbGVjdGlvbi5qcz82MWEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGZpbHRlck9wdGlvbkxpc3RcbiAqICAgY29uZm9ybXMgdG8gc2hhcGVzIG9mIG9wdGlvbnMuXG4gKiAgIHN0YW5kYXJkIG9wdGlvbnMgYXJlIHsgdmFsdWUsIGxhYmVsIH1cbiAqICAgZ3JvdXBlZCBvcHRpb25zIGFyZSB7IGxhYmVsLCBvcHRpb25zIH0gd2hlcmUgb3B0aW9ucyBjb250YWlucyBzdGFuZGFyZCBvcHRpb25zLlxuICovXG5leHBvcnQgY29uc3QgZmlsdGVyT3B0aW9uTGlzdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICBsZXQgZGF0YU9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdO1xuICBjb25zdCB2YWx1ZVJFID0gbmV3IFJlZ0V4cChgXiR7dmFsdWV9YCwgJ2knKTtcbiAgY29uc3QgYmFzZUZpbHRlciA9IG8gPT4gdmFsdWVSRS50ZXN0KG8ubGFiZWwpO1xuICAvLyBpZiBpdGVtcyBoYXZlIGFuICdvcHRpb25zJyBmaWVsZCwgZmlsdGVyIHRob3NlIGl0ZW1zIGFuZCByZXR1cm4gdGhlIGRhdGFPcHRpb25zIGdyb3VwIHdpdGggdGhlXG4gIC8vIHJlc3VsdHMgaW5zZXJ0ZWQuXG4gIGNvbnN0IGdyb3VwZWQgPSBkYXRhT3B0aW9ucy5zb21lKG8gPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sICdvcHRpb25zJykpO1xuICBpZiAoZ3JvdXBlZCkge1xuICAgIHJldHVybiBkYXRhT3B0aW9ucy5yZWR1Y2UoKG9wdGlvbnMsIG9wdCkgPT4ge1xuICAgICAgLy8gZ2xvYmFsLCB1bmdyb3VwZWQgb3B0aW9uc1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvcHQsICd2YWx1ZScpKSB7XG4gICAgICAgIGlmICh2YWx1ZVJFLnRlc3Qob3B0LmxhYmVsKSkge1xuICAgICAgICAgIHJldHVybiBbLi4ub3B0aW9ucywgb3B0XTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3B0LCAnb3B0aW9ucycpKSB7XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkT3B0aW9ucyA9IG9wdC5vcHRpb25zLmZpbHRlcihiYXNlRmlsdGVyKTtcbiAgICAgICAgaWYgKGZpbHRlcmVkT3B0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIFsuLi5vcHRpb25zLCB7XG4gICAgICAgICAgICAuLi5vcHQsXG4gICAgICAgICAgICBvcHRpb25zOiBmaWx0ZXJlZE9wdGlvbnNcbiAgICAgICAgICB9XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfSwgW10pO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGFPcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGJhc2VGaWx0ZXIoZGF0YU9wdGlvbnNbaV0pKSB7XG4gICAgICByZXN1bHQucHVzaChkYXRhT3B0aW9uc1tpXSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0IGNvbnN0IGZsYXR0ZW5PcHRpb25MaXN0ID0gZGF0YU9wdGlvbnMgPT4ge1xuICByZXR1cm4gZGF0YU9wdGlvbnMgPyBkYXRhT3B0aW9ucy5mbGF0TWFwKG9wdCA9PiB7XG4gICAgLy8gZ2xvYmFsLCB1bmdyb3VwZWQgb3B0aW9uc1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3B0LCAndmFsdWUnKSkge1xuICAgICAgcmV0dXJuIG9wdDtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvcHQsICdvcHRpb25zJykpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgbGFiZWwsXG4gICAgICAgIG9wdGlvbnNcbiAgICAgIH0gPSBvcHQ7XG4gICAgICByZXR1cm4gW3tcbiAgICAgICAgbGFiZWxcbiAgICAgIH0sIC4uLm9wdGlvbnNdO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9KSA6IFtdO1xufTtcblxuLy8gZmluZCB0aGUgdmFsdWUgb2JqZWN0IGZyb20gZGF0YU9wdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRTZWxlY3RlZE9iamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICBsZXQgZGF0YU9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdO1xuICBpZiAoZGF0YU9wdGlvbnMubGVuZ3RoID4gMCkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zdCBmbGF0dGVuZWRPcHRpb25zID0gZmxhdHRlbk9wdGlvbkxpc3QoZGF0YU9wdGlvbnMpO1xuICAgICAgcmV0dXJuIGZsYXR0ZW5lZE9wdGlvbnMuZmluZChvID0+IG8udmFsdWUgPT09IHZhbHVlKSB8fCBudWxsO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbi8qKiBlbnN1cmVWYWx1ZWRPcHRpb25cbiAqIHJldHVybnMgYW4gb3B0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgJ3ZhbHVlJyBmaWVsZCBvclxuICogcmVjdXJzZXMgdG8gdGhlIG5leHQgaW5kZXguXG4gKi9cbmV4cG9ydCBjb25zdCBlbnN1cmVWYWx1ZWRPcHRpb24gPSAoaW5kZXgsIGRhdGFPcHRpb25zKSA9PiB7XG4gIGlmIChkYXRhT3B0aW9uc1tpbmRleF0pIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGFPcHRpb25zW2luZGV4XSwgJ3ZhbHVlJykpIHtcbiAgICAgIHJldHVybiBkYXRhT3B0aW9uc1tpbmRleF07XG4gICAgfVxuICAgIHJldHVybiBlbnN1cmVWYWx1ZWRPcHRpb24oaW5kZXggKyAxLCBkYXRhT3B0aW9ucyk7XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5leHBvcnQgY29uc3QgZGVmYXVsdEl0ZW1Ub1N0cmluZyA9IGl0ZW0gPT4gaXRlbT8ubGFiZWw7XG5cbi8vIHJlbW92ZXMgYW55IG9wdGlvbiBncm91cCBoZWFkZXJzLCBsZWF2aW5nIG9ubHkgc2VsZWN0YWJsZSBvcHRpb25zLlxuZXhwb3J0IGNvbnN0IHJlZHVjZU9wdGlvbnMgPSBkYXRhT3B0aW9ucyA9PiB7XG4gIGlmIChkYXRhT3B0aW9ucykge1xuICAgIHJldHVybiBkYXRhT3B0aW9ucy5yZWR1Y2UoKG9wdGlvbnMsIG9wKSA9PiB7XG4gICAgICBpZiAob3AudmFsdWUpIG9wdGlvbnMucHVzaChvcCk7XG4gICAgICBpZiAob3Aub3B0aW9ucykgcmV0dXJuIFsuLi5vcHRpb25zLCAuLi5vcC5vcHRpb25zXTtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH0sIFtdKTtcbiAgfVxuICByZXR1cm4gW107XG59O1xuXG4vLyByZWNvbmNpbGUgaW5kZXggb2YgcmVuZGVyZWQgaXRlbSB0byBpdGVtcyB0aGF0IGFyZSBvbmx5IHNlbGVjdGFibGUuXG5leHBvcnQgY29uc3QgcmVjb25jaWxlUmVkdWNlZEluZGV4ID0gKGl0ZW0sIGl0ZW1zKSA9PiB7XG4gIHJldHVybiBpdGVtcy5maW5kSW5kZXgoaSA9PiBpID09PSBpdGVtKTtcbn07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY3NzIGZyb20gJy4vU2VsZWN0aW9uLmNzcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgU2VsZWN0aW9uTGlzdCA9IF9yZWYgPT4ge1xuICBsZXQge1xuICAgIGdldE1lbnVQcm9wcyxcbiAgICBsYWJlbElkLFxuICAgIGxpc3RNYXhIZWlnaHQsXG4gICAgcmVuZGVyT3B0aW9ucyxcbiAgICBpc09wZW5cbiAgfSA9IF9yZWY7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChcInVsXCIsIHtcbiAgICAuLi5nZXRNZW51UHJvcHMoe1xuICAgICAgJ2FyaWEtbGFiZWxsZWRieSc6IGxhYmVsSWRcbiAgICB9KSxcbiAgICBzdHlsZToge1xuICAgICAgbWF4SGVpZ2h0OiBsaXN0TWF4SGVpZ2h0XG4gICAgfSxcbiAgICBjbGFzc05hbWU6IGNzcy5zZWxlY3Rpb25MaXN0LFxuICAgIGNoaWxkcmVuOiBpc09wZW4gJiYgcmVuZGVyT3B0aW9ucygpXG4gIH0pO1xufTtcblNlbGVjdGlvbkxpc3QuZGlzcGxheU5hbWUgPSBcIlNlbGVjdGlvbkxpc3RcIjtcblNlbGVjdGlvbkxpc3QucHJvcFR5cGVzID0ge1xuICBnZXRNZW51UHJvcHM6IFByb3BUeXBlcy5mdW5jLFxuICBpc09wZW46IFByb3BUeXBlcy5ib29sLFxuICBsYWJlbElkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsaXN0TWF4SGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByZW5kZXJPcHRpb25zOiBQcm9wVHlwZXMuZnVuY1xufTtcbmV4cG9ydCBkZWZhdWx0IFNlbGVjdGlvbkxpc3Q7XG47XG5TZWxlY3Rpb25MaXN0Ll9fZG9jZ2VuSW5mbyA9IHtcbiAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICBcIm1ldGhvZHNcIjogW10sXG4gIFwiZGlzcGxheU5hbWVcIjogXCJTZWxlY3Rpb25MaXN0XCIsXG4gIFwicHJvcHNcIjoge1xuICAgIFwiZ2V0TWVudVByb3BzXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImZ1bmNcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwiaXNPcGVuXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwibGFiZWxJZFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwibGlzdE1heEhlaWdodFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwicmVuZGVyT3B0aW9uc1wiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfVxuICB9XG59OyIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUG9ydGFsIGZyb20gJ3JlYWN0LW92ZXJsYXlzL1BvcnRhbCc7XG5pbXBvcnQgU2VsZWN0aW9uTGlzdCBmcm9tICcuL1NlbGVjdGlvbkxpc3QnO1xuaW1wb3J0IFBvcHBlciwgeyBPVkVSTEFZX01PRElGSUVSUyB9IGZyb20gJy4uL1BvcHBlcic7XG5pbXBvcnQgY3NzIGZyb20gJy4vU2VsZWN0aW9uLmNzcyc7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgU2VsZWN0aW9uT3ZlcmxheSA9IF9yZWYgPT4ge1xuICBsZXQge1xuICAgIGNvbnRyb2xSZWYsXG4gICAgbGlzdENvbnRhaW5lclJlZixcbiAgICBnZXRNZW51UHJvcHMsXG4gICAgaWQsXG4gICAgaXNPcGVuLFxuICAgIGxpc3RNYXhIZWlnaHQsXG4gICAgb25DaGFuZ2VGaWx0ZXJWYWx1ZSxcbiAgICBvcHRpb25BbGlnbm1lbnQsXG4gICAgcG9wcGVyLFxuICAgIHJlbmRlckZpbHRlcklucHV0LFxuICAgIHJlbmRlck9wdGlvbnMsXG4gICAgdXNlUG9ydGFsLFxuICAgIHdpZHRoLFxuICAgIC4uLnByb3BzXG4gIH0gPSBfcmVmO1xuICBjb25zdCBmaWx0ZXJSZWYgPSB1c2VSZWYobnVsbCk7XG4gIGNvbnN0IGdldFBvcnRhbEVsZW1lbnQgPSB1c2VSZWYoKCkgPT4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ092ZXJsYXlDb250YWluZXInKSkuY3VycmVudDtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBpZiB0aGUgb3ZlcmxheSBpcyBvcGVuIGFuZCBmb2N1cyBpcyBvdXRzaWRlIG9mIGl0LCBtb3ZlIGZvY3VzIHRvIHRoZSBmaWx0ZXIuXG4gICAgaWYgKGlzT3BlbiAmJiBsaXN0Q29udGFpbmVyUmVmLmN1cnJlbnQ/Lm1hdGNoZXMoJzpub3QoOmZvY3VzLXdpdGhpbiknKSkge1xuICAgICAgZmlsdGVyUmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gaWYgb3ZlcmxheSBpcyBjbG9zaW5nIGFuZCBmb2N1cyBpcyB3aXRoaW4gdGhlIG92ZXJsYXksIG1vdmUgZm9jdXMgdG8gdGhlIFNlbGVjdGlvbiBjb250cm9sLlxuICAgIGlmICghaXNPcGVuICYmIGxpc3RDb250YWluZXJSZWYuY3VycmVudD8ubWF0Y2hlcygnOmZvY3VzLXdpdGhpbicpKSB7XG4gICAgICBvbkNoYW5nZUZpbHRlclZhbHVlKCcnKTtcbiAgICAgIGNvbnRyb2xSZWYuY3VycmVudD8uZm9jdXMoKTtcbiAgICB9XG4gIH0sIFtpc09wZW4sIG9uQ2hhbmdlRmlsdGVyVmFsdWUsIGNvbnRyb2xSZWYsIGxpc3RDb250YWluZXJSZWZdKTtcbiAgY29uc3QgYXRTbWFsbE1lZGlhID0gd2luZG93Lm1hdGNoTWVkaWEoJyhtYXgtd2lkdGg6IDY0MHB4KScpLm1hdGNoZXM7XG4gIGNvbnN0IHNlbGVjdExpc3QgPSAvKiNfX1BVUkVfXyovX2pzeChTZWxlY3Rpb25MaXN0LCB7XG4gICAgcmVuZGVyT3B0aW9uczogcmVuZGVyT3B0aW9ucyxcbiAgICBsaXN0TWF4SGVpZ2h0OiBsaXN0TWF4SGVpZ2h0LFxuICAgIG9wdGlvbkFsaWdubWVudDogb3B0aW9uQWxpZ25tZW50LFxuICAgIGdldE1lbnVQcm9wczogZ2V0TWVudVByb3BzLFxuICAgIGlzT3BlbjogaXNPcGVuLFxuICAgIC4uLnByb3BzXG4gIH0pO1xuICBpZiAoYXRTbWFsbE1lZGlhKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFwiZGl2XCIsIHtcbiAgICAgIGNoaWxkcmVuOiBpc09wZW4gJiYgLyojX19QVVJFX18qL19qc3goUG9ydGFsLCB7XG4gICAgICAgIGNvbnRhaW5lcjogZ2V0UG9ydGFsRWxlbWVudCgpLFxuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goXCJkaXZcIiwge1xuICAgICAgICAgIHJvbGU6IFwicHJlc2VudGF0aW9uXCIsXG4gICAgICAgICAgY2xhc3NOYW1lOiBjc3Muc2VsZWN0aW9uTW9iaWxlQmFja2Ryb3AsXG4gICAgICAgICAgb25DbGljazogKCkgPT4ge1xuICAgICAgICAgICAgY29udHJvbFJlZi5jdXJyZW50Py5mb2N1cygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IGNzcy5zZWxlY3Rpb25MaXN0Um9vdCxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIHdpZHRoOiAnODV2dydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpZDogYHNsLWNvbnRhaW5lci0ke2lkfWAsXG4gICAgICAgICAgICByZWY6IGxpc3RDb250YWluZXJSZWYsXG4gICAgICAgICAgICBjaGlsZHJlbjogW3JlbmRlckZpbHRlcklucHV0KGZpbHRlclJlZiksIGlzT3BlbiAmJiBzZWxlY3RMaXN0XVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0pO1xuICB9XG4gIGNvbnN0IHBvcHBlclByb3BzID0ge1xuICAgIHBvcnRhbDogaXNPcGVuICYmIHVzZVBvcnRhbCA/IGdldFBvcnRhbEVsZW1lbnQoKSA6IHVuZGVmaW5lZCxcbiAgICBtb2RpZmllcnM6IE9WRVJMQVlfTU9ESUZJRVJTLFxuICAgIC4uLnBvcHBlclxuICB9O1xuICByZXR1cm4gLyojX19QVVJFX18qL19qc3goUG9wcGVyLCB7XG4gICAgaXNPcGVuOiBpc09wZW4sXG4gICAgYW5jaG9yUmVmOiBjb250cm9sUmVmLFxuICAgIGhpZGVJZkNsb3NlZDogdHJ1ZSxcbiAgICAuLi5wb3BwZXJQcm9wcyxcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3hzKFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogY3NzLnNlbGVjdGlvbkxpc3RSb290LFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgd2lkdGhcbiAgICAgIH0sXG4gICAgICBpZDogYHNsLWNvbnRhaW5lci0ke2lkfWAsXG4gICAgICByZWY6IGxpc3RDb250YWluZXJSZWYsXG4gICAgICBjaGlsZHJlbjogW3JlbmRlckZpbHRlcklucHV0KGZpbHRlclJlZiksIHNlbGVjdExpc3RdXG4gICAgfSlcbiAgfSk7XG59O1xuU2VsZWN0aW9uT3ZlcmxheS5kaXNwbGF5TmFtZSA9IFwiU2VsZWN0aW9uT3ZlcmxheVwiO1xuU2VsZWN0aW9uT3ZlcmxheS5wcm9wVHlwZXMgPSB7XG4gIGNvbnRyb2xSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG4gIGVtcHR5TWVzc2FnZTogUHJvcFR5cGVzLm5vZGUsXG4gIGdldE1lbnVQcm9wczogUHJvcFR5cGVzLmZ1bmMsXG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc09wZW46IFByb3BUeXBlcy5ib29sLFxuICBsaXN0Q29udGFpbmVyUmVmOiBQcm9wVHlwZXMub2JqZWN0LFxuICBsaXN0TWF4SGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBvbkNoYW5nZUZpbHRlclZhbHVlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb3B0aW9uQWxpZ25tZW50OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBwb3BwZXI6IFByb3BUeXBlcy5vYmplY3QsXG4gIHJlbmRlckZpbHRlcklucHV0OiBQcm9wVHlwZXMuZnVuYyxcbiAgcmVuZGVyT3B0aW9uczogUHJvcFR5cGVzLmZ1bmMsXG4gIHVzZVBvcnRhbDogUHJvcFR5cGVzLmJvb2wsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyXG59O1xuZXhwb3J0IGRlZmF1bHQgU2VsZWN0aW9uT3ZlcmxheTtcbjtcblNlbGVjdGlvbk92ZXJsYXkuX19kb2NnZW5JbmZvID0ge1xuICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gIFwibWV0aG9kc1wiOiBbXSxcbiAgXCJkaXNwbGF5TmFtZVwiOiBcIlNlbGVjdGlvbk92ZXJsYXlcIixcbiAgXCJwcm9wc1wiOiB7XG4gICAgXCJjb250cm9sUmVmXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcInVuaW9uXCIsXG4gICAgICAgIFwidmFsdWVcIjogW3tcbiAgICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwibmFtZVwiOiBcIm9iamVjdFwiXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJlbXB0eU1lc3NhZ2VcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwibm9kZVwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJnZXRNZW51UHJvcHNcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiZnVuY1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJpZFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwiaXNPcGVuXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwibGlzdENvbnRhaW5lclJlZlwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJvYmplY3RcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwibGlzdE1heEhlaWdodFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwib25DaGFuZ2VGaWx0ZXJWYWx1ZVwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcIm9wdGlvbkFsaWdubWVudFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwicG9wcGVyXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcIm9iamVjdFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJyZW5kZXJGaWx0ZXJJbnB1dFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcInJlbmRlck9wdGlvbnNcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiZnVuY1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJ1c2VQb3J0YWxcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiYm9vbFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJ3aWR0aFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJudW1iZXJcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9XG4gIH1cbn07IiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VNZW1vLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZGVwcmVjYXRlZCB9IGZyb20gJ3Byb3AtdHlwZXMtZXh0cmEnO1xuaW1wb3J0IHsgdXNlSW50bCB9IGZyb20gJ3JlYWN0LWludGwnO1xuaW1wb3J0IHsgdXNlQ29tYm9ib3ggfSBmcm9tICdkb3duc2hpZnQnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgaXNFcXVhbCBmcm9tICdsb2Rhc2gvaXNFcXVhbCc7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJztcbmltcG9ydCBmb3JtRmllbGQgZnJvbSAnLi4vRm9ybUZpZWxkJztcbmltcG9ydCBwYXJzZU1ldGEgZnJvbSAnLi4vRm9ybUZpZWxkL3BhcnNlTWV0YSc7XG5pbXBvcnQgeyBkZWZhdWx0SXRlbVRvU3RyaW5nLCByZWR1Y2VPcHRpb25zLCBmaWx0ZXJPcHRpb25MaXN0LCBnZXRTZWxlY3RlZE9iamVjdCwgZmxhdHRlbk9wdGlvbkxpc3QsIHJlY29uY2lsZVJlZHVjZWRJbmRleCB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IFNlbGVjdGlvbk92ZXJsYXkgZnJvbSAnLi9TZWxlY3Rpb25PdmVybGF5JztcbmltcG9ydCBMYWJlbCBmcm9tICcuLi9MYWJlbCc7XG5pbXBvcnQgVGV4dEZpZWxkSWNvbiBmcm9tICcuLi9UZXh0RmllbGQvVGV4dEZpZWxkSWNvbic7XG5pbXBvcnQgSWNvbiBmcm9tICcuLi9JY29uJztcbmltcG9ydCB1c2VQcm92aWRlZFJlZk9yQ3JlYXRlIGZyb20gJy4uLy4uL2hvb2tzL3VzZVByb3ZpZGVkUmVmT3JDcmVhdGUnO1xuaW1wb3J0IGZvcm1TdHlsZXMgZnJvbSAnLi4vc2hhcmVkU3R5bGVzL2Zvcm0uY3NzJztcbmltcG9ydCBjc3MgZnJvbSAnLi9TZWxlY3Rpb24uY3NzJztcbmltcG9ydCBEZWZhdWx0T3B0aW9uRm9ybWF0dGVyIGZyb20gJy4vRGVmYXVsdE9wdGlvbkZvcm1hdHRlcic7XG5pbXBvcnQgdXNlUHJvdmlkZWRJZE9yQ3JlYXRlIGZyb20gJy4uLy4uL2hvb2tzL3VzZVByb3ZpZGVkSWRPckNyZWF0ZSc7XG5cbi8vIGEgcm91Z2ggd2F5IHRvIGRpc2Nlcm4gaWYgYW4gb3B0aW9uIGlzIGdyb3VwZWQgb3Igbm90IC0gaWYgaXQgZmluZHMgYW4gaW5kZXggYXQgdGhlIHRvcCBsZXZlbFxuLy8gb2YgZGF0YU9wdGlvbnMsIGl0J3Mgbm90IGdyb3VwZWQuLi5cbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5jb25zdCBvcHRpb25Jc0dyb3VwZWQgPSAoaXRlbSwgZGF0YU9wdGlvbnMpID0+IHtcbiAgcmV0dXJuIGRhdGFPcHRpb25zLmZpbmRJbmRleChpID0+IGkgPT09IGl0ZW0pID09PSAtMTtcbn07XG5jb25zdCBnZXRDb250cm9sV2lkdGggPSBjb250cm9sID0+IHtcbiAgaWYgKGNvbnRyb2wpIHtcbiAgICByZXR1cm4gY29udHJvbC5vZmZzZXRXaWR0aDtcbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmNvbnN0IGdldEl0ZW1DbGFzcyA9IChpdGVtLCBpLCBwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgdmFsdWVcbiAgfSA9IGl0ZW07XG4gIGNvbnN0IHtcbiAgICBzZWxlY3RlZEl0ZW0sXG4gICAgaGlnaGxpZ2h0ZWRJbmRleCxcbiAgICBkYXRhT3B0aW9uc1xuICB9ID0gcHJvcHM7XG4gIGlmICghdmFsdWUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgY3Vyc29yZWQgPSBpID09PSBoaWdobGlnaHRlZEluZGV4ID8gJyAnICsgY3NzLmN1cnNvciA6ICcnO1xuICBjb25zdCBzZWxlY3RlZCA9IHZhbHVlID09PSBzZWxlY3RlZEl0ZW0/LnZhbHVlID8gJyAnICsgY3NzLnNlbGVjdGVkIDogJyc7XG4gIGNvbnN0IGdyb3VwZWQgPSBvcHRpb25Jc0dyb3VwZWQoaXRlbSwgZGF0YU9wdGlvbnMpID8gJyAnICsgY3NzLmdyb3VwZWRPcHRpb24gOiAnJztcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgcmV0dXJuIGAke2Nzcy5vcHRpb259JHtjdXJzb3JlZH0ke3NlbGVjdGVkfSR7Z3JvdXBlZH1gO1xufTtcbmNvbnN0IGdldENsYXNzID0gX3JlZiA9PiB7XG4gIGxldCB7XG4gICAgZGlydHksXG4gICAgZXJyb3IsXG4gICAgbWFyZ2luQm90dG9tMCxcbiAgICB1c2VWYWxpZFN0eWxlLFxuICAgIHZhbGlkLFxuICAgIHdhcm5pbmdcbiAgfSA9IF9yZWY7XG4gIGxldCB2YWxpZGF0aW9uQ2xhc3NlcyA9ICcnO1xuICB2YWxpZGF0aW9uQ2xhc3NlcyA9IGNsYXNzTmFtZXMoe1xuICAgIFtgJHtmb3JtU3R5bGVzLmhhc0ZlZWRiYWNrfWBdOiBlcnJvciB8fCB3YXJuaW5nXG4gIH0sIHtcbiAgICBbYCR7Zm9ybVN0eWxlcy5oYXNXYXJuaW5nfWBdOiB3YXJuaW5nXG4gIH0sIHtcbiAgICBbYCR7Zm9ybVN0eWxlcy5oYXNFcnJvcn1gXTogZXJyb3JcbiAgfSwge1xuICAgIFtgJHtmb3JtU3R5bGVzLmlzQ2hhbmdlZH1gXTogZGlydHlcbiAgfSwge1xuICAgIFtgJHtmb3JtU3R5bGVzLmlzVmFsaWR9YF06IHVzZVZhbGlkU3R5bGUgJiYgdmFsaWQgJiYgIWVycm9yICYmICF3YXJuaW5nXG4gIH0pO1xuICByZXR1cm4gY2xhc3NOYW1lcyh2YWxpZGF0aW9uQ2xhc3NlcywgY3NzLnNlbGVjdGlvbkNvbnRyb2wsIGZvcm1TdHlsZXMuZm9ybUNvbnRyb2wsIHtcbiAgICBbYCR7Y3NzLm1hcmdpbkJvdHRvbTB9YF06IG1hcmdpbkJvdHRvbTBcbiAgfSk7XG59O1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItYXJyb3ctY2FsbGJhY2sgKi9cblxuY29uc3QgU2VsZWN0aW9uID0gX3JlZjIgPT4ge1xuICBsZXQge1xuICAgIGFzeW5jRmlsdGVyID0gZmFsc2UsXG4gICAgYXV0b2ZvY3VzLFxuICAgIGRhdGFPcHRpb25zLFxuICAgIGRpcnR5LFxuICAgIGRpc2FibGVkLFxuICAgIGVtcHR5TWVzc2FnZSxcbiAgICBlcnJvcixcbiAgICBmb3JtYXR0ZXIgPSBEZWZhdWx0T3B0aW9uRm9ybWF0dGVyLFxuICAgIGlkLFxuICAgIGlucHV0UmVmLFxuICAgIG9uQmx1cixcbiAgICBvbkNoYW5nZSxcbiAgICBvbkZvY3VzLFxuICAgIHBsYWNlaG9sZGVyLFxuICAgIGxhYmVsLFxuICAgIGxpc3RNYXhIZWlnaHQgPSAnMTc0cHgnLFxuICAgIGxvYWRpbmcsXG4gICAgbG9hZGluZ01lc3NhZ2UgPSAvKiNfX1BVUkVfXyovX2pzeChJY29uLCB7XG4gICAgICBpY29uOiBcInNwaW5uZXItZWxsaXBzaXNcIlxuICAgIH0pLFxuICAgIG1hcmdpbkJvdHRvbTAsXG4gICAgbmFtZSxcbiAgICBvbkZpbHRlciA9IGZpbHRlck9wdGlvbkxpc3QsXG4gICAgb3B0aW9uQWxpZ25tZW50LFxuICAgIHBvcHBlcixcbiAgICByZWFkT25seSxcbiAgICByZWFkb25seSxcbiAgICByZXF1aXJlZCxcbiAgICB1c2VWYWxpZFN0eWxlID0gZmFsc2UsXG4gICAgdXNlUG9ydGFsLFxuICAgIHZhbGlkLFxuICAgIHZhbHVlLFxuICAgIHdhcm5pbmcsXG4gICAgLi4ucmVzdFxuICB9ID0gX3JlZjI7XG4gIGNvbnN0IHtcbiAgICBmb3JtYXRNZXNzYWdlXG4gIH0gPSB1c2VJbnRsKCk7XG4gIGNvbnN0IFtmaWx0ZXJWYWx1ZSwgdXBkYXRlRmlsdGVyVmFsdWVdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbZGVib3VuY2VkRmlsdGVyVmFsdWUsIHVwZGF0ZURlYm91bmNlZEZpbHRlcl0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IGRhdGFMZW5ndGggPSB1c2VSZWYoZGF0YU9wdGlvbnM/Lmxlbmd0aCB8fCAwKTtcbiAgY29uc3QgY29udHJvbFJlZiA9IHVzZVByb3ZpZGVkUmVmT3JDcmVhdGUoaW5wdXRSZWYpO1xuICBjb25zdCBsaXN0Q29udGFpbmVyUmVmID0gdXNlUmVmKG51bGwpO1xuICBjb25zdCBhd2FpdGluZ0NoYW5nZSA9IHVzZVJlZihmYWxzZSk7XG4gIGNvbnN0IGRiVXBkYXRlRmlsdGVyID0gdXNlUmVmKGRlYm91bmNlKGZpbHRlciA9PiB7XG4gICAgdXBkYXRlRGVib3VuY2VkRmlsdGVyKGZpbHRlcik7XG4gIH0sIDIwMCkpLmN1cnJlbnQ7XG4gIGNvbnN0IGZpbHRlclVwZGF0ZUZuID0gdXNlUmVmKGZ1bmN0aW9uIGZpbHRlclVwZGF0ZXIoZmlsdGVyKSB7XG4gICAgdXBkYXRlRmlsdGVyVmFsdWUoZmlsdGVyKTtcbiAgICAvLyBkZWJvdW5jZSB1cGRhdGVzIHRvIHRoZSBmaWx0ZXIgZm9yIGxhcmdlIGRhdGEgc2V0cy4uLlxuICAgIGRiVXBkYXRlRmlsdGVyKGZpbHRlcik7XG4gIH0pLmN1cnJlbnQ7XG4gIGNvbnN0IGZpbHRlckZuID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gZmlsdGVyKGRhdGEpIHtcbiAgICByZXR1cm4gb25GaWx0ZXIoZGVib3VuY2VkRmlsdGVyVmFsdWUsIGRhdGEpO1xuICB9LCBbZGVib3VuY2VkRmlsdGVyVmFsdWUsIG9uRmlsdGVyXSk7XG4gIGNvbnN0IGZsYXR0ZW5SZWYgPSB1c2VSZWYoZnVuY3Rpb24gZmxhdHRlbmVyKGRhdGEpIHtcbiAgICByZXR1cm4gZmxhdHRlbk9wdGlvbkxpc3QoZGF0YSk7XG4gIH0pLmN1cnJlbnQ7XG4gIGNvbnN0IHJlZHVjZU9wdGlvbnNSZWYgPSB1c2VSZWYoZnVuY3Rpb24gZGF0YVJlZHVjZXIoZGF0YSkge1xuICAgIHJldHVybiByZWR1Y2VPcHRpb25zKGRhdGEpO1xuICB9KS5jdXJyZW50O1xuICBjb25zdCBvcHRpb25zID0gdXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIGFzeW5jRmlsdGVyIHx8ICFkZWJvdW5jZWRGaWx0ZXJWYWx1ZSA/IGRhdGFPcHRpb25zIDogZmlsdGVyRm4oZGF0YU9wdGlvbnMpO1xuICB9LCBbZGF0YU9wdGlvbnMsIGRlYm91bmNlZEZpbHRlclZhbHVlXSk7XG4gIGNvbnN0IHRlc3RJZCA9IHVzZVByb3ZpZGVkSWRPckNyZWF0ZShpZCwgJ3NlbGVjdGlvbi0nKTtcbiAgY29uc3QgaGFzR3JvdXBzID0gZGF0YU9wdGlvbnMuc29tZShpdGVtID0+IGl0ZW0ub3B0aW9ucyk7XG5cbiAgLy8gd2UgbmVlZCB0byBza2lwIG92ZXIgZ3JvdXAgaGVhZGluZ3Mgc2luY2UgdGhvc2UgY2FuIG5laXRoZXIgYmUgc2VsZWN0YWJsZSBvciBjdXJzb3JlZCBvdmVyLlxuICBjb25zdCByZWR1Y2VkTGlzdEl0ZW1zID0gdXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIGhhc0dyb3VwcyA/IHJlZHVjZU9wdGlvbnNSZWYob3B0aW9ucykgOiBvcHRpb25zO1xuICB9LCBbb3B0aW9ucywgaGFzR3JvdXBzXSk7XG5cbiAgLy8gd2l0aCBhc3luYyBmaWx0ZXJpbmcsIHRoZSBmaWx0ZXJpbmcgaGFwcGVucyBhcyBhIHNpZGUtZWZmZWN0LlxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChhc3luY0ZpbHRlciAmJiBkZWJvdW5jZWRGaWx0ZXJWYWx1ZSkge1xuICAgICAgZmlsdGVyRm4oZGF0YU9wdGlvbnMpO1xuICAgIH1cbiAgfSwgW2RlYm91bmNlZEZpbHRlclZhbHVlLCBhc3luY0ZpbHRlcl0pO1xuICBjb25zdCB7XG4gICAgaXNPcGVuLFxuICAgIGdldFRvZ2dsZUJ1dHRvblByb3BzLFxuICAgIGdldElucHV0UHJvcHMsXG4gICAgZ2V0TGFiZWxQcm9wcyxcbiAgICBnZXRNZW51UHJvcHMsXG4gICAgaGlnaGxpZ2h0ZWRJbmRleCxcbiAgICBnZXRJdGVtUHJvcHMsXG4gICAgc2VsZWN0ZWRJdGVtLFxuICAgIHNlbGVjdEl0ZW06IHVwZGF0ZVNlbGVjdGVkSXRlbSxcbiAgICBjbG9zZU1lbnVcbiAgfSA9IHVzZUNvbWJvYm94KHtcbiAgICBpdGVtczogcmVkdWNlZExpc3RJdGVtcyB8fCBbXSxcbiAgICBpdGVtVG9TdHJpbmc6IGRlZmF1bHRJdGVtVG9TdHJpbmcsXG4gICAgaW5pdGlhbFNlbGVjdGVkSXRlbTogdmFsdWUgPyBnZXRTZWxlY3RlZE9iamVjdCh2YWx1ZSwgZGF0YU9wdGlvbnMpIDogbnVsbCxcbiAgICBvblNlbGVjdGVkSXRlbUNoYW5nZTogX3JlZjMgPT4ge1xuICAgICAgbGV0IHtcbiAgICAgICAgc2VsZWN0ZWRJdGVtOiBuZXdTZWxlY3RlZEl0ZW1cbiAgICAgIH0gPSBfcmVmMztcbiAgICAgIC8vIGlmIHRoZSBuZXdTZWxlY3RlZEl0ZW0ncyB2YWx1ZSBtYXRjaGVzIHRoZSBpbmNvbWluZyB2YWx1ZSBwcm9wLCB3ZSBhc3N1bWUgdGhhdFxuICAgICAgLy8gb25DaGFuZ2UgaXNuJ3QgbmVjZXNzYXJ5LlxuICAgICAgaWYgKG9uQ2hhbmdlICYmIG5ld1NlbGVjdGVkSXRlbT8udmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgIG9uQ2hhbmdlKG5ld1NlbGVjdGVkSXRlbS52YWx1ZSk7XG4gICAgICB9XG4gICAgICB1cGRhdGVEZWJvdW5jZWRGaWx0ZXIoJycpOyAvLyBzbyB0aGF0IHdlIGNhbiB1bmZpbHRlciB0aGUgb3B0aW9ucyBmb3IgdGhlIG5leHQgdGltZSB0aGUgbGlzdCBvcGVucy5cbiAgICB9LFxuICAgIGlzSXRlbURpc2FibGVkKGl0ZW0pIHtcbiAgICAgIHJldHVybiAocmVhZE9ubHkgfHwgcmVhZG9ubHkpICYmICFpc0VxdWFsKGl0ZW0sIHNlbGVjdGVkSXRlbSk7XG4gICAgfSxcbiAgICBzdGF0ZVJlZHVjZXIoc3RhdGUsIGFjdGlvbkFuZENoYW5nZXMpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY2hhbmdlcyxcbiAgICAgICAgdHlwZVxuICAgICAgfSA9IGFjdGlvbkFuZENoYW5nZXM7XG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSB1c2VDb21ib2JveC5zdGF0ZUNoYW5nZVR5cGVzLkZ1bmN0aW9uQ2xvc2VNZW51OlxuICAgICAgICBjYXNlIHVzZUNvbWJvYm94LnN0YXRlQ2hhbmdlVHlwZXMuSW5wdXRLZXlEb3duRW50ZXI6XG4gICAgICAgIGNhc2UgdXNlQ29tYm9ib3guc3RhdGVDaGFuZ2VUeXBlcy5JdGVtQ2xpY2s6XG4gICAgICAgICAgYXdhaXRpbmdDaGFuZ2UuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgcmV0dXJuIGNoYW5nZXM7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIGNoYW5nZXM7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBpZiBkYXRhT3B0aW9ucyBwb3B1bGF0ZS9jaGFuZ2UgYWZ0ZXIgdGhlIGluaXRpYWwgcmVuZGVyLCB1cGRhdGUgdGhlIHNlbGVjdGVkSXRlbSBzdGF0ZVxuICAgIC8vIGlmIG9uZSBoYXNuJ3QgYmVlbiBmb3VuZCB5ZXQuXG4gICAgaWYgKGRhdGFPcHRpb25zPy5sZW5ndGggIT09IGRhdGFMZW5ndGguY3VycmVudCAmJiB2YWx1ZSAmJiBzZWxlY3RlZEl0ZW0gPT09IG51bGwpIHtcbiAgICAgIGNvbnN0IHNlbGVjdGVkID0gZ2V0U2VsZWN0ZWRPYmplY3QodmFsdWUsIGRhdGFPcHRpb25zKTtcbiAgICAgIHVwZGF0ZVNlbGVjdGVkSXRlbShzZWxlY3RlZCk7XG4gICAgICBkYXRhTGVuZ3RoLmN1cnJlbnQgPSBkYXRhT3B0aW9ucy5sZW5ndGg7XG4gICAgfVxuICB9LCBbZGF0YU9wdGlvbnMsIHNlbGVjdGVkSXRlbSwgdmFsdWVdKTtcbiAgY29uc3QgdmFsdWVMYWJlbCA9IGZvcm1hdHRlcih7XG4gICAgb3B0aW9uOiBzZWxlY3RlZEl0ZW1cbiAgfSkgfHwgcGxhY2Vob2xkZXIgfHwgJyc7XG4gIGNvbnN0IGxhYmVsSWQgPSBgc2wtbGFiZWwtJHt0ZXN0SWR9YDtcbiAgY29uc3QgdmFsdWVJZCA9IGBzZWxlY3RlZC0ke3Rlc3RJZH0taXRlbWA7XG4gIGlmIChhd2FpdGluZ0NoYW5nZS5jdXJyZW50KSB7XG4gICAgLy8gYSB1c2VyIGhhcyBjaGFuZ2UgdGhlIHZhbHVlIHZpYSB0aGUgZHJvcGRvd24gYW5kIHdlJ3JlIHdhaXRpbmcgZm9yIHRoZSB2YWx1ZVxuICAgIC8vIHRvIGNvcnJlc3BvbmQgd2l0aCB0aGUgc3RhdGUuLi5cbiAgICBpZiAoc2VsZWN0ZWRJdGVtICE9PSBudWxsICYmIHNlbGVjdGVkSXRlbT8udmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICBhd2FpdGluZ0NoYW5nZS5jdXJyZW50ID0gZmFsc2U7XG4gICAgfVxuICB9IGVsc2UgaWYgKChzZWxlY3RlZEl0ZW0gIT09IG51bGwgfHxcbiAgLy8gaWYgd2UgY2FuIGZpbmQgYSB2YWxpZCBkYXRhT3B0aW9uIHRvIG1hdGNoIHRoZSB2YWx1ZSAoZm9yIGRhdGFPcHRpb25zIHRoYXQgaGF2ZSB2YWx1ZTogJycpXG4gIGdldFNlbGVjdGVkT2JqZWN0KHZhbHVlLCBkYXRhT3B0aW9ucykgIT09IG51bGwpICYmIHNlbGVjdGVkSXRlbT8udmFsdWUgIT09IHZhbHVlKSB7XG4gICAgLy8gY29uZm9ybSB0byBwb3N0LW1vdW50IHZhbHVlIHByb3AgY2hhbmdlcyBmcm9tIG91dHNpZGUgb2YgdGhlIGNvbXBvbmVudCxcbiAgICAvLyB3aGV0aGVyIHRoZSBjaGFuZ2VkIHZhbHVlIGlzIHNvbWV0aGluZyBlbXB0eSBsaWtlICcnIG9yIG51bGw7XG4gICAgY29uc3QgbmV3VmFsdWUgPSBnZXRTZWxlY3RlZE9iamVjdCh2YWx1ZSwgZGF0YU9wdGlvbnMpIHx8IHtcbiAgICAgIHZhbHVlXG4gICAgfTtcbiAgICB1cGRhdGVTZWxlY3RlZEl0ZW0obmV3VmFsdWUpO1xuICB9XG5cbiAgLyoqIHJlbmRlck9wdGlvbnNcbiAgICogIEFsbCBvZiB0aGUgcmVuZGVyaW5nIG9mIHRoZSBvcHRpb25zIGxpc3QgaXMgcGVyZm9ybWVkIGhlcmUuXG4gICAqICBUaGlzIG1lbW9pemVkIGZ1bmN0aW9uIGlzIHBhc3NlZCBpbnRvIHRoZSBTZWxlY3Rpb25PdmVybGF5ICYgU2VsZWN0aW9uTGlzdFxuICAgKi9cblxuICAvLyBpZiB0aGUgb3B0aW9ucyBhcmUgZ3JvdXBlZCwgZmxhdHRlbiB0aGVtIGZvciByZW5kZXJpbmcuXG4gIGNvbnN0IGZsYXR0ZW5lZE9wdGlvbnMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gaGFzR3JvdXBzICYmIG9wdGlvbnMubGVuZ3RoID4gMCA/IGZsYXR0ZW5SZWYob3B0aW9ucykgOiBvcHRpb25zO1xuICB9LCBbb3B0aW9ucywgaGFzR3JvdXBzXSk7XG4gIGNvbnN0IHJlbmRlcmVkT3B0aW9uc0ZuID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gb3B0aW9uUmVuZGVyZXIoZGF0YSkge1xuICAgIGNvbnN0IHJlbmRlcmVkID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBpdGVtID0gZGF0YVtpXTtcbiAgICAgIGlmIChpdGVtLnZhbHVlKSB7XG4gICAgICAgIGNvbnN0IHJlZHVjZWRJbmRleCA9IHJlY29uY2lsZVJlZHVjZWRJbmRleChpdGVtLCByZWR1Y2VkTGlzdEl0ZW1zKTtcbiAgICAgICAgcmVuZGVyZWQucHVzaCgvKiNfX1BVUkVfXyovX2pzeChcImxpXCIsIHtcbiAgICAgICAgICAuLi5nZXRJdGVtUHJvcHMoe1xuICAgICAgICAgICAgaW5kZXg6IHJlZHVjZWRJbmRleCxcbiAgICAgICAgICAgIG9uTW91c2VVcDogZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgfSksXG4gICAgICAgICAgY2xhc3NOYW1lOiBnZXRJdGVtQ2xhc3MoaXRlbSwgcmVkdWNlZEluZGV4LCB7XG4gICAgICAgICAgICBzZWxlY3RlZEl0ZW0sXG4gICAgICAgICAgICBoaWdobGlnaHRlZEluZGV4LFxuICAgICAgICAgICAgZGF0YU9wdGlvbnNcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBjaGlsZHJlbjogZm9ybWF0dGVyKHtcbiAgICAgICAgICAgIG9wdGlvbjogaXRlbSxcbiAgICAgICAgICAgIHNlYXJjaFRlcm06IGZpbHRlclZhbHVlXG4gICAgICAgICAgfSlcbiAgICAgICAgfSwgYCR7aXRlbS5sYWJlbH0tb3B0aW9uLSR7aX1gKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZW5kZXJlZC5wdXNoKC8qI19fUFVSRV9fKi9fanN4KFwibGlcIiwge1xuICAgICAgICAgIGNsYXNzTmFtZTogY3NzLmdyb3VwTGFiZWwsXG4gICAgICAgICAgY2hpbGRyZW46IGZvcm1hdHRlcih7XG4gICAgICAgICAgICBvcHRpb246IGl0ZW0sXG4gICAgICAgICAgICBzZWFyY2hUZXJtOiBmaWx0ZXJWYWx1ZVxuICAgICAgICAgIH0pXG4gICAgICAgIH0sIGAke2l0ZW0ubGFiZWx9LWhlYWRpbmctJHtpfWApKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlbmRlcmVkO1xuICB9LCBbZmlsdGVyVmFsdWUsIGZsYXR0ZW5lZE9wdGlvbnMsIGhpZ2hsaWdodGVkSW5kZXhdKTtcbiAgY29uc3Qgb3B0aW9uc1Byb2Nlc3NpbmcgPSBmYWxzZTtcbiAgY29uc3QgcmVuZGVyZWRPcHRpb25zID0gdXNlTWVtbygoKSA9PiByZW5kZXJlZE9wdGlvbnNGbihmbGF0dGVuZWRPcHRpb25zKSwgW2ZsYXR0ZW5lZE9wdGlvbnMsIHJlbmRlcmVkT3B0aW9uc0ZuXSk7XG5cbiAgLy8gSXQgZG9lc24ndCBuZWVkIHRvIHVwZGF0ZSBpZiAqYWxsIG9mIHRoZSB0aGluZ3MgaXQgdXNlcyBjaGFuZ2UuLi5cbiAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG4gIGNvbnN0IHJlbmRlck9wdGlvbnMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKCFpc09wZW4pIHJldHVybiBudWxsO1xuICAgIC8vIGlmIG9wdGlvbnMgYXJlIGRlbGl2ZXJlZCB3aXRoIGdyb3VwaW5ncywgd2UgZmxhdHRlbiB0aGUgb3B0aW9ucyBmb3JcbiAgICAvLyBhIHNldCBvZiBzZWxlY3RhYmxlIGluZGljZXMuIEdyb3VwIGxhYmVscyBhcmUgbm90IHNlbGVjdGFibGUuXG4gICAgLyogbG9hZGluZyBtZXNzYWdlICovXG4gICAgaWYgKGxvYWRpbmcgfHwgZmlsdGVyVmFsdWUgIT09IGRlYm91bmNlZEZpbHRlclZhbHVlKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL19qc3goXCJsaVwiLCB7XG4gICAgICAgIHJvbGU6IFwib3B0aW9uXCIsXG4gICAgICAgIGNsYXNzTmFtZTogY3NzLm9wdGlvbixcbiAgICAgICAgXCJhcmlhLXNlbGVjdGVkXCI6IFwiZmFsc2VcIixcbiAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KFwic3BhblwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IGxvYWRpbmdNZXNzYWdlXG4gICAgICAgIH0pXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiBubyBvcHRpb25zIGZvdW5kIHRocm91Z2ggYXN5bmMgZmlsdGVyICovXG4gICAgaWYgKGFzeW5jRmlsdGVyICYmIGRhdGFPcHRpb25zLmxlbmd0aCA9PT0gMCAmJiBkZWJvdW5jZWRGaWx0ZXJWYWx1ZSA9PT0gJycpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChcImxpXCIsIHtcbiAgICAgICAgcm9sZTogXCJvcHRpb25cIixcbiAgICAgICAgY2xhc3NOYW1lOiBjc3Mub3B0aW9uLFxuICAgICAgICBcImFyaWEtc2VsZWN0ZWRcIjogXCJmYWxzZVwiLFxuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3hzKFwic3BhblwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtcIi1cIiwgZm9ybWF0TWVzc2FnZSh7XG4gICAgICAgICAgICBpZDogJ3N0cmlwZXMtY29tcG9uZW50cy5zZWxlY3Rpb24uZW50ZXJGaWx0ZXInXG4gICAgICAgICAgfSksIFwiLVwiXVxuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChkYXRhT3B0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChcImxpXCIsIHtcbiAgICAgICAgcm9sZTogXCJvcHRpb25cIixcbiAgICAgICAgY2xhc3NOYW1lOiBjc3Mub3B0aW9uLFxuICAgICAgICBcImFyaWEtc2VsZWN0ZWRcIjogXCJmYWxzZVwiLFxuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3hzKFwic3BhblwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtcIi1cIiwgZW1wdHlNZXNzYWdlLCBcIi1cIl1cbiAgICAgICAgfSlcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qIG5vIG9wdGlvbnMgZm91bmQgdGhyb3VnaCBmaWx0ZXJpbmcgKi9cbiAgICBpZiAob3B0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChcImxpXCIsIHtcbiAgICAgICAgcm9sZTogXCJvcHRpb25cIixcbiAgICAgICAgY2xhc3NOYW1lOiBjc3Mub3B0aW9uLFxuICAgICAgICBcImFyaWEtc2VsZWN0ZWRcIjogXCJmYWxzZVwiLFxuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3hzKFwic3BhblwiLCB7XG4gICAgICAgICAgY2hpbGRyZW46IFtcIi1cIiwgZm9ybWF0TWVzc2FnZSh7XG4gICAgICAgICAgICBpZDogJ3N0cmlwZXMtY29tcG9uZW50cy5zZWxlY3Rpb24uZW1wdHlMaXN0J1xuICAgICAgICAgIH0pLCBcIi1cIl1cbiAgICAgICAgfSlcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVuZGVyZWRPcHRpb25zO1xuICB9LCBbbG9hZGluZywgc2VsZWN0ZWRJdGVtLCBoaWdobGlnaHRlZEluZGV4LCB2YWx1ZSwgb3B0aW9ucywgaXNPcGVuLCBvcHRpb25zUHJvY2Vzc2luZywgcmVuZGVyZWRPcHRpb25zXSk7XG5cbiAgLy8gaW50ZXJuYWwgYmx1ciBoYW5kbGVyIC0gdGhpcyBwcmV2ZW50cyB2YWxpZGF0aW9uIGJsdXIgZnJvbSBoYXBwZW5pbmcgd2hlbiB0aGVcbiAgLy8gY29udHJvbCBpcyBqdXN0IHN3aXRjaGluZyBmb2N1cyB0byB0aGUgb3B0aW9ucyBsaXN0IGRyb3Bkb3duLCB3aGljaCBoYXBwZW5zXG4gIC8vIGFueXRpbWUgdGhlIG92ZXJsYXkgaXMgb3BlbmVkLiBTVENPTS0xMzY2XG4gIGNvbnN0IGhhbmRsZUJsdXIgPSB1c2VDYWxsYmFjayhlID0+IHtcbiAgICAvLyBzaW5jZSB0aGUgb3ZlcmxheSBjb250cm9sIGlzbid0IGZvY3VzZWQgdW50aWwgdGhlIG5leHQgdGljaywgd2VcbiAgICAvLyB1c2UgYSBzZXRUaW1lb3V0IHRvIGlmIHRoZSBwcm92aWRlZCBvbkJsdXIgc2hvdWxkIGJlIHRyaWdnZXJlZC5cbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICghKGxpc3RDb250YWluZXJSZWYuY3VycmVudD8uY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgJiYgY29udHJvbFJlZi5jdXJyZW50ICE9PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50KSkge1xuICAgICAgICBvbkJsdXI/LihlKTtcbiAgICAgICAgY2xvc2VNZW51KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sIFtsaXN0Q29udGFpbmVyUmVmLCBpc09wZW4sIGNsb3NlTWVudV0pO1xuICBjb25zdCByZW5kZXJGaWx0ZXJJbnB1dCA9IHVzZUNhbGxiYWNrKGZpbHRlclJlZiA9PiAvKiNfX1BVUkVfXyovX2pzeChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBjc3Muc2VsZWN0aW9uRmlsdGVyQ29udGFpbmVyLFxuICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeChcImlucHV0XCIsIHtcbiAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgLi4uZ2V0SW5wdXRQcm9wcyh7XG4gICAgICAgIHJlZjogZmlsdGVyUmVmLFxuICAgICAgICB2YWx1ZTogZmlsdGVyVmFsdWUsXG4gICAgICAgIC8vIHN0b3BQcm9wYWdhdGlvbiB0byBrZWVwIGZyb20gdW53YW50ZWRseSB0cmlnZ2VyaW5nIHNob3J0Y3V0cyBhbmRcbiAgICAgICAgLy8gYWRkcmVzcyBkb3duc2hpZnQgaXNzdWVzIHdpdGggcG9ydGFsIHJlbmRlcmluZy9mdW5jdGlvbmFsaXR5LlxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZG93bnNoaWZ0LWpzL2Rvd25zaGlmdC9pc3N1ZXMvMjg3XG4gICAgICAgIG9uS2V5RG93bjogZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpLFxuICAgICAgICBvbk1vdXNlVXA6IGUgPT4gZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgfSksXG4gICAgICBvbkNsaWNrOiAoKSA9PiB7fSxcbiAgICAgIG9uQmx1cjogaGFuZGxlQmx1cixcbiAgICAgIG9uQ2hhbmdlOiBlID0+IGZpbHRlclVwZGF0ZUZuKGUudGFyZ2V0LnZhbHVlKSxcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiBmb3JtYXRNZXNzYWdlKHtcbiAgICAgICAgaWQ6ICdzdHJpcGVzLWNvbXBvbmVudHMuc2VsZWN0aW9uLmZpbHRlck9wdGlvbnNMYWJlbCdcbiAgICAgIH0sIHtcbiAgICAgICAgbGFiZWxcbiAgICAgIH0pLFxuICAgICAgY2xhc3NOYW1lOiBjc3Muc2VsZWN0aW9uRmlsdGVyLFxuICAgICAgcGxhY2Vob2xkZXI6IGZvcm1hdE1lc3NhZ2Uoe1xuICAgICAgICBpZDogJ3N0cmlwZXMtY29tcG9uZW50cy5zZWxlY3Rpb24uZmlsdGVyT3B0aW9uc1BsYWNlaG9sZGVyJ1xuICAgICAgfSlcbiAgICB9KVxuICB9KSwgW2ZpbHRlclZhbHVlXSk7XG4gIGNvbnN0IGdldENvbnRyb2xDbGFzcyA9IHVzZU1lbW8oKCkgPT4gZ2V0Q2xhc3Moe1xuICAgIGRpcnR5LFxuICAgIGVycm9yLFxuICAgIG1hcmdpbkJvdHRvbTAsXG4gICAgdXNlVmFsaWRTdHlsZSxcbiAgICB2YWxpZCxcbiAgICB3YXJuaW5nXG4gIH0pLCBbZXJyb3IsIHdhcm5pbmcsIGRpcnR5LCB2YWxpZCwgdXNlVmFsaWRTdHlsZSwgbWFyZ2luQm90dG9tMF0pO1xuXG4gIC8qIGVzbGludC1lbmFibGUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzICovXG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhcImRpdlwiLCB7XG4gICAgY2hpbGRyZW46IFtsYWJlbCAmJiAvKiNfX1BVUkVfXyovX2pzeChMYWJlbCwge1xuICAgICAgLi4uZ2V0TGFiZWxQcm9wcyh7XG4gICAgICAgIGlkOiBsYWJlbElkXG4gICAgICB9KSxcbiAgICAgIHJlYWRPbmx5OiByZWFkT25seSB8fCByZWFkb25seSxcbiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCxcbiAgICAgIGNoaWxkcmVuOiBsYWJlbFxuICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeHMoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBjc3Muc2VsZWN0aW9uQ29udHJvbENvbnRhaW5lcixcbiAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBmb3JtU3R5bGVzLmlucHV0R3JvdXAsXG4gICAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3hzKFwiYnV0dG9uXCIsIHtcbiAgICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICAgIC4uLmdldFRvZ2dsZUJ1dHRvblByb3BzKHtcbiAgICAgICAgICAgIHJlZjogY29udHJvbFJlZixcbiAgICAgICAgICAgIHRhYkluZGV4OiB1bmRlZmluZWQsXG4gICAgICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgICAgIHJlYWRPbmx5LFxuICAgICAgICAgICAgaWQ6IHRlc3RJZCxcbiAgICAgICAgICAgICdhcmlhLWxhYmVsbGVkYnknOiBgJHtsYWJlbElkfSAke3ZhbHVlSWR9YFxuICAgICAgICAgIH0pLFxuICAgICAgICAgIGNsYXNzTmFtZTogZ2V0Q29udHJvbENsYXNzLFxuICAgICAgICAgIGF1dG9Gb2N1czogYXV0b2ZvY3VzLFxuICAgICAgICAgIG9uQmx1cjogaGFuZGxlQmx1cixcbiAgICAgICAgICBvbkZvY3VzOiBvbkZvY3VzLFxuICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgdmFsdWU6IHNlbGVjdGVkSXRlbT8udmFsdWUsXG4gICAgICAgICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChcInNwYW5cIiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcInNyLW9ubHlcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBmb3JtYXRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgaWQ6ICdzdHJpcGVzLWNvbXBvbmVudHMuc2VsZWN0aW9uLmNvbnRyb2xMYWJlbCdcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogY3NzLnNpbmdsZVZhbHVlLFxuICAgICAgICAgICAgaWQ6IHZhbHVlSWQsXG4gICAgICAgICAgICBjaGlsZHJlbjogdmFsdWVMYWJlbFxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgLyojX19QVVJFX18qL19qc3goXCJkaXZcIiwge1xuICAgICAgICAgIGNsYXNzTmFtZTogY3NzLnNlbGVjdGlvbkVuZENvbnRyb2xzLFxuICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeChUZXh0RmllbGRJY29uLCB7XG4gICAgICAgICAgICBpY29uOiBcInRyaWFuZ2xlLWRvd25cIlxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXVxuICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4cyhcImRpdlwiLCB7XG4gICAgICAgIHJvbGU6IFwiYWxlcnRcIixcbiAgICAgICAgY2hpbGRyZW46IFt3YXJuaW5nICYmIC8qI19fUFVSRV9fKi9fanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGAke2Zvcm1TdHlsZXMuZmVlZGJhY2tXYXJuaW5nfWAsXG4gICAgICAgICAgY2hpbGRyZW46IHdhcm5pbmdcbiAgICAgICAgfSksIGVycm9yICYmIC8qI19fUFVSRV9fKi9fanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICBjbGFzc05hbWU6IGAke2Zvcm1TdHlsZXMuZmVlZGJhY2tFcnJvcn1gLFxuICAgICAgICAgIGNoaWxkcmVuOiBlcnJvclxuICAgICAgICB9KV1cbiAgICAgIH0pXVxuICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChTZWxlY3Rpb25PdmVybGF5LCB7XG4gICAgICAuLi5yZXN0LFxuICAgICAgY29udHJvbFJlZjogY29udHJvbFJlZixcbiAgICAgIGdldE1lbnVQcm9wczogZ2V0TWVudVByb3BzLFxuICAgICAgaWQ6IHRlc3RJZCxcbiAgICAgIGlzT3BlbjogaXNPcGVuLFxuICAgICAgbGlzdE1heEhlaWdodDogbGlzdE1heEhlaWdodCxcbiAgICAgIG9uQ2hhbmdlRmlsdGVyVmFsdWU6IHVwZGF0ZUZpbHRlclZhbHVlLFxuICAgICAgb3B0aW9uQWxpZ25tZW50OiBvcHRpb25BbGlnbm1lbnQsXG4gICAgICBwb3BwZXI6IHBvcHBlcixcbiAgICAgIHJlbmRlckZpbHRlcklucHV0OiByZW5kZXJGaWx0ZXJJbnB1dCxcbiAgICAgIHJlbmRlck9wdGlvbnM6IHJlbmRlck9wdGlvbnMsXG4gICAgICB1c2VQb3J0YWw6IHVzZVBvcnRhbCxcbiAgICAgIHdpZHRoOiBnZXRDb250cm9sV2lkdGgoY29udHJvbFJlZi5jdXJyZW50KSxcbiAgICAgIGxhYmVsSWQ6IGxhYmVsSWQsXG4gICAgICBsaXN0Q29udGFpbmVyUmVmOiBsaXN0Q29udGFpbmVyUmVmXG4gICAgfSldXG4gIH0pO1xufTtcblNlbGVjdGlvbi5kaXNwbGF5TmFtZSA9IFwiU2VsZWN0aW9uXCI7XG5TZWxlY3Rpb24ucHJvcFR5cGVzID0ge1xuICBhc3luY0ZpbHRlcjogUHJvcFR5cGVzLmJvb2wsXG4gIGF1dG9mb2N1czogUHJvcFR5cGVzLmJvb2wsXG4gIGRhdGFPcHRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSxcbiAgZGlydHk6IFByb3BUeXBlcy5ib29sLFxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gIGVtcHR5TWVzc2FnZTogUHJvcFR5cGVzLm5vZGUsXG4gIGVycm9yOiBQcm9wVHlwZXMubm9kZSxcbiAgZm9ybWF0dGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGlucHV0UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuZnVuY10pLFxuICBsYWJlbDogUHJvcFR5cGVzLm5vZGUsXG4gIGxpc3RNYXhIZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBsb2FkaW5nTWVzc2FnZTogUHJvcFR5cGVzLm5vZGUsXG4gIG1hcmdpbkJvdHRvbTA6IFByb3BUeXBlcy5ib29sLFxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBvbkJsdXI6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRmlsdGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIG9wdGlvbkFsaWdubWVudDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5ub2RlLFxuICBwb3BwZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcG9ydGFsOiBkZXByZWNhdGVkKFByb3BUeXBlcy5lbGVtZW50LCAndXNlIHRoZSBib29sZWFuIHVzZVBvcnRhbCBwcm9wIG9mIFNlbGVjdGlvbiBpbnN0ZWFkJylcbiAgfSksXG4gIHJlYWRPbmx5OiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVhZG9ubHk6IFByb3BUeXBlcy5ib29sLFxuICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG4gIHVzZVBvcnRhbDogUHJvcFR5cGVzLmJvb2wsXG4gIHVzZVZhbGlkU3R5bGU6IFByb3BUeXBlcy5ib29sLFxuICB2YWxpZDogUHJvcFR5cGVzLmJvb2wsXG4gIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB3YXJuaW5nOiBQcm9wVHlwZXMubm9kZVxufTtcbmV4cG9ydCBkZWZhdWx0IGZvcm1GaWVsZChTZWxlY3Rpb24sIF9yZWY0ID0+IHtcbiAgbGV0IHtcbiAgICBtZXRhXG4gIH0gPSBfcmVmNDtcbiAgcmV0dXJuIHtcbiAgICBkaXJ0eTogbWV0YS5kaXJ0eSxcbiAgICBlcnJvcjogbWV0YS50b3VjaGVkICYmIG1ldGEuZXJyb3IgPyBtZXRhLmVycm9yIDogJycsXG4gICAgdmFsaWQ6IG1ldGEudmFsaWQsXG4gICAgd2FybmluZzogbWV0YS50b3VjaGVkID8gcGFyc2VNZXRhKG1ldGEsICd3YXJuaW5nJykgOiAnJ1xuICB9O1xufSk7XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbjtcblNlbGVjdGlvbi5fX2RvY2dlbkluZm8gPSB7XG4gIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgXCJtZXRob2RzXCI6IFtdLFxuICBcImRpc3BsYXlOYW1lXCI6IFwiU2VsZWN0aW9uXCIsXG4gIFwicHJvcHNcIjoge1xuICAgIFwiYXN5bmNGaWx0ZXJcIjoge1xuICAgICAgXCJkZWZhdWx0VmFsdWVcIjoge1xuICAgICAgICBcInZhbHVlXCI6IFwiZmFsc2VcIixcbiAgICAgICAgXCJjb21wdXRlZFwiOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwiZm9ybWF0dGVyXCI6IHtcbiAgICAgIFwiZGVmYXVsdFZhbHVlXCI6IHtcbiAgICAgICAgXCJ2YWx1ZVwiOiBcIih7IG9wdGlvbiwgc2VhcmNoVGVybSB9KSA9PiB7XFxuICByZXR1cm4gb3B0aW9uID9cXG4gICAgPE9wdGlvblNlZ21lbnQgc2VhcmNoVGVybT17c2VhcmNoVGVybX0+e29wdGlvbi5sYWJlbH08L09wdGlvblNlZ21lbnQ+IDpcXG4gICAgbnVsbDtcXG59XCIsXG4gICAgICAgIFwiY29tcHV0ZWRcIjogZmFsc2VcbiAgICAgIH0sXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcImxpc3RNYXhIZWlnaHRcIjoge1xuICAgICAgXCJkZWZhdWx0VmFsdWVcIjoge1xuICAgICAgICBcInZhbHVlXCI6IFwiJzE3NHB4J1wiLFxuICAgICAgICBcImNvbXB1dGVkXCI6IGZhbHNlXG4gICAgICB9LFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwic3RyaW5nXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcImxvYWRpbmdNZXNzYWdlXCI6IHtcbiAgICAgIFwiZGVmYXVsdFZhbHVlXCI6IHtcbiAgICAgICAgXCJ2YWx1ZVwiOiBcIjxJY29uIGljb249XFxcInNwaW5uZXItZWxsaXBzaXNcXFwiIC8+XCIsXG4gICAgICAgIFwiY29tcHV0ZWRcIjogZmFsc2VcbiAgICAgIH0sXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJub2RlXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcIm9uRmlsdGVyXCI6IHtcbiAgICAgIFwiZGVmYXVsdFZhbHVlXCI6IHtcbiAgICAgICAgXCJ2YWx1ZVwiOiBcIih2YWx1ZSwgZGF0YU9wdGlvbnMgPSBbXSkgPT4ge1xcbiAgY29uc3QgdmFsdWVSRSA9IG5ldyBSZWdFeHAoYF4ke3ZhbHVlfWAsICdpJyk7XFxuICBjb25zdCBiYXNlRmlsdGVyID0gKG8pID0+IHZhbHVlUkUudGVzdChvLmxhYmVsKTtcXG4gIC8vIGlmIGl0ZW1zIGhhdmUgYW4gJ29wdGlvbnMnIGZpZWxkLCBmaWx0ZXIgdGhvc2UgaXRlbXMgYW5kIHJldHVybiB0aGUgZGF0YU9wdGlvbnMgZ3JvdXAgd2l0aCB0aGVcXG4gIC8vIHJlc3VsdHMgaW5zZXJ0ZWQuXFxuICBjb25zdCBncm91cGVkID0gZGF0YU9wdGlvbnMuc29tZSgobykgPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sICdvcHRpb25zJykpO1xcbiAgaWYgKGdyb3VwZWQpIHtcXG4gICAgcmV0dXJuIGRhdGFPcHRpb25zLnJlZHVjZSgob3B0aW9ucywgb3B0KSA9PiB7XFxuICAgICAgLy8gZ2xvYmFsLCB1bmdyb3VwZWQgb3B0aW9uc1xcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3B0LCAndmFsdWUnKSkge1xcbiAgICAgICAgaWYgKHZhbHVlUkUudGVzdChvcHQubGFiZWwpKSB7XFxuICAgICAgICAgIHJldHVybiBbLi4ub3B0aW9ucywgb3B0XTtcXG4gICAgICAgIH1cXG4gICAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvcHQsICdvcHRpb25zJykpIHtcXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkT3B0aW9ucyA9IG9wdC5vcHRpb25zLmZpbHRlcihiYXNlRmlsdGVyKTtcXG4gICAgICAgIGlmIChmaWx0ZXJlZE9wdGlvbnMubGVuZ3RoID4gMCkge1xcbiAgICAgICAgICByZXR1cm4gWy4uLm9wdGlvbnMsIHsgLi4ub3B0LCBvcHRpb25zOiBmaWx0ZXJlZE9wdGlvbnMgfV07XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIHJldHVybiBvcHRpb25zO1xcbiAgICB9LCBbXSk7XFxuICB9XFxuXFxuICBjb25zdCByZXN1bHQgPSBbXTtcXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YU9wdGlvbnMubGVuZ3RoOyBpKyspIHtcXG4gICAgaWYgKGJhc2VGaWx0ZXIoZGF0YU9wdGlvbnNbaV0pKSB7XFxuICAgICAgcmVzdWx0LnB1c2goZGF0YU9wdGlvbnNbaV0pO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gcmVzdWx0O1xcbn1cIixcbiAgICAgICAgXCJjb21wdXRlZFwiOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImZ1bmNcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwidXNlVmFsaWRTdHlsZVwiOiB7XG4gICAgICBcImRlZmF1bHRWYWx1ZVwiOiB7XG4gICAgICAgIFwidmFsdWVcIjogXCJmYWxzZVwiLFxuICAgICAgICBcImNvbXB1dGVkXCI6IGZhbHNlXG4gICAgICB9LFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiYm9vbFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJhdXRvZm9jdXNcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiYm9vbFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJkYXRhT3B0aW9uc1wiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJhcnJheU9mXCIsXG4gICAgICAgIFwidmFsdWVcIjoge1xuICAgICAgICAgIFwibmFtZVwiOiBcIm9iamVjdFwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcImRpcnR5XCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwiZGlzYWJsZWRcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiYm9vbFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJlbXB0eU1lc3NhZ2VcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwibm9kZVwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJlcnJvclwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJub2RlXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcImlkXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcInN0cmluZ1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJpbnB1dFJlZlwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJ1bmlvblwiLFxuICAgICAgICBcInZhbHVlXCI6IFt7XG4gICAgICAgICAgXCJuYW1lXCI6IFwib2JqZWN0XCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIFwibmFtZVwiOiBcImZ1bmNcIlxuICAgICAgICB9XVxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwibGFiZWxcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwibm9kZVwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJsb2FkaW5nXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwibWFyZ2luQm90dG9tMFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJib29sXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcIm5hbWVcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwic3RyaW5nXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcIm9uQmx1clwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcIm9uQ2hhbmdlXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImZ1bmNcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwib25Gb2N1c1wiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJmdW5jXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcIm9wdGlvbkFsaWdubWVudFwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwicGxhY2Vob2xkZXJcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwibm9kZVwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJwb3BwZXJcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwic2hhcGVcIixcbiAgICAgICAgXCJ2YWx1ZVwiOiB7XG4gICAgICAgICAgXCJwb3J0YWxcIjoge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiY3VzdG9tXCIsXG4gICAgICAgICAgICBcInJhd1wiOiBcImRlcHJlY2F0ZWQoUHJvcFR5cGVzLmVsZW1lbnQsICd1c2UgdGhlIGJvb2xlYW4gdXNlUG9ydGFsIHByb3Agb2YgU2VsZWN0aW9uIGluc3RlYWQnKVwiLFxuICAgICAgICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwicmVhZE9ubHlcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiYm9vbFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJyZWFkb25seVwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJib29sXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfSxcbiAgICBcInJlcXVpcmVkXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwidXNlUG9ydGFsXCI6IHtcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwidHlwZVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImJvb2xcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwidmFsaWRcIjoge1xuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJ0eXBlXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwiYm9vbFwiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlZFwiOiBmYWxzZVxuICAgIH0sXG4gICAgXCJ2YWx1ZVwiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZWRcIjogZmFsc2VcbiAgICB9LFxuICAgIFwid2FybmluZ1wiOiB7XG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICBcInR5cGVcIjoge1xuICAgICAgICBcIm5hbWVcIjogXCJub2RlXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVkXCI6IGZhbHNlXG4gICAgfVxuICB9XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/Selection/Selection.js\n')}}]);