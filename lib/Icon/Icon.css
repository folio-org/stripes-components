@import "../variables";

.icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;

  &:focus {
    outline: none;
  }
}

:global .stripes__icon {
  fill: var(--color-icon);
}

/**
 * Coloring
 */
.status-error {
  color: var(--error);

  & svg {
    fill: var(--error);
  }
}

.status-warn {
  color: var(--warn);

  & svg {
    fill: var(--warn);
  }
}

.status-success {
  color: var(--success);

  & svg {
    fill: var(--success);
  }
}

/**
 * Sizing
 */

.small svg {
  height: 14px;
  width: 14px;
  min-width: 14px;
}

.medium svg {
  height: 24px;
  width: 24px;
  min-width: 24px;
}

.large svg {
  height: 28px;
  width: 28px;
  min-width: 28px;
}

/**
 * Specific styling for spinner
 * (Spinner is likely to be deprecated later on)
 */

.iconSpinner.small {
  width: 40px;
  height: 20px;
}

.iconSpinner.medium {
  width: 60px;
  height: 30px;
}

.iconSpinner.large {
  width: 100px;
  height: 50px;
}

/**
 * Flippable
 * Icon should flip on dir="rtl"
 */

:global([dir="rtl"]) .icon.flippable svg {
  transform: rotate(180deg);
}

/**
 * Label
 */

/* Positioning */
.icon-position-start svg {
  order: 0;
}

.icon-position-end svg {
  order: 1;
}

/**
Spacing
Note: Using pseudo elements to add spacing for RTL support
**/

.label::before,
.label::after {
  content: '';
  display: none;
  width: 0.22em;
}

.icon-position-start .label::before,
.icon-position-end .label::after {
  display: inline-block;
}
